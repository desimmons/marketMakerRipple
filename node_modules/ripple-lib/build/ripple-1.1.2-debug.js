var ripple =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 106);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants = __webpack_require__(107);\nexports.constants = constants;\nconst errors = __webpack_require__(29);\nexports.errors = errors;\nconst validate = __webpack_require__(111);\nexports.validate = validate;\nconst serverInfo = __webpack_require__(80);\nexports.serverInfo = serverInfo;\nvar utils_1 = __webpack_require__(54);\nexports.dropsToXrp = utils_1.dropsToXrp;\nexports.xrpToDrops = utils_1.xrpToDrops;\nexports.toRippledAmount = utils_1.toRippledAmount;\nexports.removeUndefined = utils_1.removeUndefined;\nexports.convertKeysFromSnakeCaseToCamelCase = utils_1.convertKeysFromSnakeCaseToCamelCase;\nexports.iso8601ToRippleTime = utils_1.iso8601ToRippleTime;\nexports.rippleTimeToISO8601 = utils_1.rippleTimeToISO8601;\nvar connection_1 = __webpack_require__(263);\nexports.Connection = connection_1.default;\nvar txflags_1 = __webpack_require__(73);\nexports.txFlags = txflags_1.txFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/index.ts\n// module id = 0\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/index.ts?");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("module.exports = _;\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 1\n// module chunks = 0\n\n//# sourceURL=webpack:///external_%22_%22?");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(36);\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/assert/assert.js\n// module id = 2\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/assert/assert.js?");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inherits/inherits_browser.js\n// module id = 3\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/inherits/inherits_browser.js?");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(264)\nvar ieee754 = __webpack_require__(265)\nvar isArray = __webpack_require__(266)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 4\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _ = __webpack_require__(1);\nvar inherits = __webpack_require__(3);\n\nfunction forEach(obj, func) {\n  Object.keys(obj || {}).forEach(function (k) {\n    func(obj[k], k);\n  });\n}\n\nfunction ensureArray(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\nmodule.exports = function makeClass(klass_, definition_) {\n  var definition = definition_ || klass_;\n  var klass = typeof klass_ === 'function' ? klass_ : null;\n  if (klass === null) {\n    for (var k in definition) {\n      if (k[0].match(/[A-Z]/)) {\n        klass = definition[k];\n        break;\n      }\n    }\n  }\n  var parent = definition.inherits;\n  if (parent) {\n    if (klass === null) {\n      klass = function klass() {\n        parent.apply(this, arguments);\n      };\n    }\n    inherits(klass, parent);\n    _.defaults(klass, parent);\n  }\n  if (klass === null) {\n    klass = function klass() {};\n  }\n  var proto = klass.prototype;\n  function addFunc(original, name, wrapper) {\n    proto[name] = wrapper || original;\n  }\n  (definition.getters || []).forEach(function (k) {\n    var key = '_' + k;\n    proto[k] = function () {\n      return this[key];\n    };\n  });\n  forEach(definition.virtuals, function (f, n) {\n    addFunc(f, n, function () {\n      throw new Error('unimplemented');\n    });\n  });\n  forEach(definition.methods, addFunc);\n  forEach(definition, function (f, n) {\n    if (_.isFunction(f) && f !== klass) {\n      addFunc(f, n);\n    }\n  });\n  _.assign(klass, definition.statics);\n  if (typeof klass.init === 'function') {\n    klass.init();\n  }\n  forEach(definition.cached, function (f, n) {\n    var key = '_' + n;\n    addFunc(f, n, function () {\n      var value = this[key];\n      if (value === undefined) {\n        value = this[key] = f.call(this);\n      }\n      return value;\n    });\n  });\n  if (definition.mixins) {\n    var mixins = {};\n    // Right-most in the list win\n    ensureArray(definition.mixins).reverse().forEach(function (o) {\n      _.defaults(mixins, o);\n    });\n    _.defaults(proto, mixins);\n  }\n\n  return klass;\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/utils/make-class.js\n// module id = 5\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/utils/make-class.js?");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _ = __webpack_require__(1);\nvar inherits = __webpack_require__(3);\n\nfunction forEach(obj, func) {\n  Object.keys(obj || {}).forEach(function (k) {\n    func(obj[k], k);});}\n\n\n\nfunction ensureArray(val) {\n  return Array.isArray(val) ? val : [val];}\n\n\nmodule.exports = function makeClass(klass_, definition_) {\n  var definition = definition_ || klass_;\n  var klass = typeof klass_ === 'function' ? klass_ : null;\n  if (klass === null) {\n    for (var k in definition) {\n      if (k[0].match(/[A-Z]/)) {\n        klass = definition[k];\n        break;}}}\n\n\n\n  var parent = definition.inherits;\n  if (parent) {\n    if (klass === null) {\n      klass = function klass() {\n        parent.apply(this, arguments);};}\n\n\n    inherits(klass, parent);\n    _.defaults(klass, parent);}\n\n  if (klass === null) {\n    klass = function klass() {};}\n\n  var proto = klass.prototype;\n  function addFunc(original, name, wrapper) {\n    proto[name] = wrapper || original;}\n\n  (definition.getters || []).forEach(function (k) {\n    var key = '_' + k;\n    proto[k] = function () {\n      return this[key];};});\n\n\n  forEach(definition.virtuals, function (f, n) {\n    addFunc(f, n, function () {\n      throw new Error('unimplemented');});});\n\n\n  forEach(definition.methods, addFunc);\n  forEach(definition, function (f, n) {\n    if (_.isFunction(f) && f !== klass) {\n      addFunc(f, n);}});\n\n\n  _.assign(klass, definition.statics);\n  if (typeof klass.init === 'function') {\n    klass.init();}\n\n  forEach(definition.cached, function (f, n) {\n    var key = '_' + n;\n    addFunc(f, n, function () {\n      var value = this[key];\n      if (value === undefined) {\n        value = this[key] = f.call(this);}\n\n      return value;});});\n\n\n  if (definition.mixins) {(function () {\n      var mixins = {};\n      // Right-most in the list win\n      ensureArray(definition.mixins).reverse().forEach(function (o) {\n        _.defaults(mixins, o);});\n\n      _.defaults(proto, mixins);})();}\n\n\n  return klass;};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/utils/make-class.js\n// module id = 6\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/utils/make-class.js?");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*! bignumber.js v4.1.0 https://github.com/MikeMcl/bignumber.js/LICENCE */\r\n\r\n;(function (globalObj) {\r\n    'use strict';\r\n\r\n    /*\r\n      bignumber.js v4.1.0\r\n      A JavaScript library for arbitrary-precision arithmetic.\r\n      https://github.com/MikeMcl/bignumber.js\r\n      Copyright (c) 2017 Michael Mclaughlin <M8ch88l@gmail.com>\r\n      MIT Expat Licence\r\n    */\r\n\r\n\r\n    var BigNumber,\r\n        isNumeric = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n        mathceil = Math.ceil,\r\n        mathfloor = Math.floor,\r\n        notBool = ' not a boolean or binary digit',\r\n        roundingMode = 'rounding mode',\r\n        tooManyDigits = 'number type has more than 15 significant digits',\r\n        ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',\r\n        BASE = 1e14,\r\n        LOG_BASE = 14,\r\n        MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n        // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n        SQRT_BASE = 1e7,\r\n\r\n        /*\r\n         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an\r\n         * exception is thrown (if ERRORS is true).\r\n         */\r\n        MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n    /*\r\n     * Create and return a BigNumber constructor.\r\n     */\r\n    function constructorFactory(config) {\r\n        var div, parseNumeric,\r\n\r\n            // id tracks the caller function, so its name can be included in error messages.\r\n            id = 0,\r\n            P = BigNumber.prototype,\r\n            ONE = new BigNumber(1),\r\n\r\n\r\n            /********************************* EDITABLE DEFAULTS **********************************/\r\n\r\n\r\n            /*\r\n             * The default values below must be integers within the inclusive ranges stated.\r\n             * The values can also be changed at run-time using BigNumber.config.\r\n             */\r\n\r\n            // The maximum number of decimal places for operations involving division.\r\n            DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n            /*\r\n             * The rounding mode used when rounding to the above decimal places, and when using\r\n             * toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n             * UP         0 Away from zero.\r\n             * DOWN       1 Towards zero.\r\n             * CEIL       2 Towards +Infinity.\r\n             * FLOOR      3 Towards -Infinity.\r\n             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n             */\r\n            ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n            // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n            // The exponent value at and beneath which toString returns exponential notation.\r\n            // Number type: -7\r\n            TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n            // The exponent value at and above which toString returns exponential notation.\r\n            // Number type: 21\r\n            TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n            // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n            // The minimum exponent value, beneath which underflow to zero occurs.\r\n            // Number type: -324  (5e-324)\r\n            MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n            // The maximum exponent value, above which overflow to Infinity occurs.\r\n            // Number type:  308  (1.7976931348623157e+308)\r\n            // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n            MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n            // Whether BigNumber Errors are ever thrown.\r\n            ERRORS = true,                           // true or false\r\n\r\n            // Change to intValidatorNoErrors if ERRORS is false.\r\n            isValidInt = intValidatorWithErrors,     // intValidatorWithErrors/intValidatorNoErrors\r\n\r\n            // Whether to use cryptographically-secure random number generation, if available.\r\n            CRYPTO = false,                          // true or false\r\n\r\n            /*\r\n             * The modulo mode used when calculating the modulus: a mod n.\r\n             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n             * The remainder (r) is calculated as: r = a - n * q.\r\n             *\r\n             * UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n             * DOWN      1 The remainder has the same sign as the dividend.\r\n             *             This modulo mode is commonly known as 'truncated division' and is\r\n             *             equivalent to (a % n) in JavaScript.\r\n             * FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n             *             The remainder is always positive.\r\n             *\r\n             * The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n             * modes are commonly used for the modulus operation.\r\n             * Although the other rounding modes can also be used, they may not give useful results.\r\n             */\r\n            MODULO_MODE = 1,                         // 0 to 9\r\n\r\n            // The maximum number of significant digits of the result of the toPower operation.\r\n            // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n            POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n            // The format specification used by the BigNumber.prototype.toFormat method.\r\n            FORMAT = {\r\n                decimalSeparator: '.',\r\n                groupSeparator: ',',\r\n                groupSize: 3,\r\n                secondaryGroupSize: 0,\r\n                fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n                fractionGroupSize: 0\r\n            };\r\n\r\n\r\n        /******************************************************************************************/\r\n\r\n\r\n        // CONSTRUCTOR\r\n\r\n\r\n        /*\r\n         * The BigNumber constructor and exported function.\r\n         * Create and return a new instance of a BigNumber object.\r\n         *\r\n         * n {number|string|BigNumber} A numeric value.\r\n         * [b] {number} The base of n. Integer, 2 to 64 inclusive.\r\n         */\r\n        function BigNumber( n, b ) {\r\n            var c, e, i, num, len, str,\r\n                x = this;\r\n\r\n            // Enable constructor usage without new.\r\n            if ( !( x instanceof BigNumber ) ) {\r\n\r\n                // 'BigNumber() constructor call without new: {n}'\r\n                if (ERRORS) raise( 26, 'constructor call without new', n );\r\n                return new BigNumber( n, b );\r\n            }\r\n\r\n            // 'new BigNumber() base not an integer: {b}'\r\n            // 'new BigNumber() base out of range: {b}'\r\n            if ( b == null || !isValidInt( b, 2, 64, id, 'base' ) ) {\r\n\r\n                // Duplicate.\r\n                if ( n instanceof BigNumber ) {\r\n                    x.s = n.s;\r\n                    x.e = n.e;\r\n                    x.c = ( n = n.c ) ? n.slice() : n;\r\n                    id = 0;\r\n                    return;\r\n                }\r\n\r\n                if ( ( num = typeof n == 'number' ) && n * 0 == 0 ) {\r\n                    x.s = 1 / n < 0 ? ( n = -n, -1 ) : 1;\r\n\r\n                    // Fast path for integers.\r\n                    if ( n === ~~n ) {\r\n                        for ( e = 0, i = n; i >= 10; i /= 10, e++ );\r\n                        x.e = e;\r\n                        x.c = [n];\r\n                        id = 0;\r\n                        return;\r\n                    }\r\n\r\n                    str = n + '';\r\n                } else {\r\n                    if ( !isNumeric.test( str = n + '' ) ) return parseNumeric( x, str, num );\r\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n                }\r\n            } else {\r\n                b = b | 0;\r\n                str = n + '';\r\n\r\n                // Ensure return value is rounded to DECIMAL_PLACES as with other bases.\r\n                // Allow exponential notation to be used with base 10 argument.\r\n                if ( b == 10 ) {\r\n                    x = new BigNumber( n instanceof BigNumber ? n : str );\r\n                    return round( x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE );\r\n                }\r\n\r\n                // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n                // Any number in exponential form will fail due to the [Ee][+-].\r\n                if ( ( num = typeof n == 'number' ) && n * 0 != 0 ||\r\n                  !( new RegExp( '^-?' + ( c = '[' + ALPHABET.slice( 0, b ) + ']+' ) +\r\n                    '(?:\\\\.' + c + ')?$',b < 37 ? 'i' : '' ) ).test(str) ) {\r\n                    return parseNumeric( x, str, num, b );\r\n                }\r\n\r\n                if (num) {\r\n                    x.s = 1 / n < 0 ? ( str = str.slice(1), -1 ) : 1;\r\n\r\n                    if ( ERRORS && str.replace( /^0\\.0*|\\./, '' ).length > 15 ) {\r\n\r\n                        // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n                        raise( id, tooManyDigits, n );\r\n                    }\r\n\r\n                    // Prevent later check for length on converted number.\r\n                    num = false;\r\n                } else {\r\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n                }\r\n\r\n                str = convertBase( str, 10, b, x.s );\r\n            }\r\n\r\n            // Decimal point?\r\n            if ( ( e = str.indexOf('.') ) > -1 ) str = str.replace( '.', '' );\r\n\r\n            // Exponential form?\r\n            if ( ( i = str.search( /e/i ) ) > 0 ) {\r\n\r\n                // Determine exponent.\r\n                if ( e < 0 ) e = i;\r\n                e += +str.slice( i + 1 );\r\n                str = str.substring( 0, i );\r\n            } else if ( e < 0 ) {\r\n\r\n                // Integer.\r\n                e = str.length;\r\n            }\r\n\r\n            // Determine leading zeros.\r\n            for ( i = 0; str.charCodeAt(i) === 48; i++ );\r\n\r\n            // Determine trailing zeros.\r\n            for ( len = str.length; str.charCodeAt(--len) === 48; );\r\n            str = str.slice( i, len + 1 );\r\n\r\n            if (str) {\r\n                len = str.length;\r\n\r\n                // Disallow numbers with over 15 significant digits if number type.\r\n                // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n                if ( num && ERRORS && len > 15 && ( n > MAX_SAFE_INTEGER || n !== mathfloor(n) ) ) {\r\n                    raise( id, tooManyDigits, x.s * n );\r\n                }\r\n\r\n                e = e - i - 1;\r\n\r\n                 // Overflow?\r\n                if ( e > MAX_EXP ) {\r\n\r\n                    // Infinity.\r\n                    x.c = x.e = null;\r\n\r\n                // Underflow?\r\n                } else if ( e < MIN_EXP ) {\r\n\r\n                    // Zero.\r\n                    x.c = [ x.e = 0 ];\r\n                } else {\r\n                    x.e = e;\r\n                    x.c = [];\r\n\r\n                    // Transform base\r\n\r\n                    // e is the base 10 exponent.\r\n                    // i is where to slice str to get the first element of the coefficient array.\r\n                    i = ( e + 1 ) % LOG_BASE;\r\n                    if ( e < 0 ) i += LOG_BASE;\r\n\r\n                    if ( i < len ) {\r\n                        if (i) x.c.push( +str.slice( 0, i ) );\r\n\r\n                        for ( len -= LOG_BASE; i < len; ) {\r\n                            x.c.push( +str.slice( i, i += LOG_BASE ) );\r\n                        }\r\n\r\n                        str = str.slice(i);\r\n                        i = LOG_BASE - str.length;\r\n                    } else {\r\n                        i -= len;\r\n                    }\r\n\r\n                    for ( ; i--; str += '0' );\r\n                    x.c.push( +str );\r\n                }\r\n            } else {\r\n\r\n                // Zero.\r\n                x.c = [ x.e = 0 ];\r\n            }\r\n\r\n            id = 0;\r\n        }\r\n\r\n\r\n        // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n        BigNumber.another = constructorFactory;\r\n\r\n        BigNumber.ROUND_UP = 0;\r\n        BigNumber.ROUND_DOWN = 1;\r\n        BigNumber.ROUND_CEIL = 2;\r\n        BigNumber.ROUND_FLOOR = 3;\r\n        BigNumber.ROUND_HALF_UP = 4;\r\n        BigNumber.ROUND_HALF_DOWN = 5;\r\n        BigNumber.ROUND_HALF_EVEN = 6;\r\n        BigNumber.ROUND_HALF_CEIL = 7;\r\n        BigNumber.ROUND_HALF_FLOOR = 8;\r\n        BigNumber.EUCLID = 9;\r\n\r\n\r\n        /*\r\n         * Configure infrequently-changing library-wide settings.\r\n         *\r\n         * Accept an object or an argument list, with one or many of the following properties or\r\n         * parameters respectively:\r\n         *\r\n         *   DECIMAL_PLACES  {number}  Integer, 0 to MAX inclusive\r\n         *   ROUNDING_MODE   {number}  Integer, 0 to 8 inclusive\r\n         *   EXPONENTIAL_AT  {number|number[]}  Integer, -MAX to MAX inclusive or\r\n         *                                      [integer -MAX to 0 incl., 0 to MAX incl.]\r\n         *   RANGE           {number|number[]}  Non-zero integer, -MAX to MAX inclusive or\r\n         *                                      [integer -MAX to -1 incl., integer 1 to MAX incl.]\r\n         *   ERRORS          {boolean|number}   true, false, 1 or 0\r\n         *   CRYPTO          {boolean|number}   true, false, 1 or 0\r\n         *   MODULO_MODE     {number}           0 to 9 inclusive\r\n         *   POW_PRECISION   {number}           0 to MAX inclusive\r\n         *   FORMAT          {object}           See BigNumber.prototype.toFormat\r\n         *      decimalSeparator       {string}\r\n         *      groupSeparator         {string}\r\n         *      groupSize              {number}\r\n         *      secondaryGroupSize     {number}\r\n         *      fractionGroupSeparator {string}\r\n         *      fractionGroupSize      {number}\r\n         *\r\n         * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n         *\r\n         * E.g.\r\n         * BigNumber.config(20, 4) is equivalent to\r\n         * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n         *\r\n         * Ignore properties/parameters set to null or undefined.\r\n         * Return an object with the properties current values.\r\n         */\r\n        BigNumber.config = BigNumber.set = function () {\r\n            var v, p,\r\n                i = 0,\r\n                r = {},\r\n                a = arguments,\r\n                o = a[0],\r\n                has = o && typeof o == 'object'\r\n                  ? function () { if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null; }\r\n                  : function () { if ( a.length > i ) return ( v = a[i++] ) != null; };\r\n\r\n            // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n            // 'config() DECIMAL_PLACES not an integer: {v}'\r\n            // 'config() DECIMAL_PLACES out of range: {v}'\r\n            if ( has( p = 'DECIMAL_PLACES' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n                DECIMAL_PLACES = v | 0;\r\n            }\r\n            r[p] = DECIMAL_PLACES;\r\n\r\n            // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n            // 'config() ROUNDING_MODE not an integer: {v}'\r\n            // 'config() ROUNDING_MODE out of range: {v}'\r\n            if ( has( p = 'ROUNDING_MODE' ) && isValidInt( v, 0, 8, 2, p ) ) {\r\n                ROUNDING_MODE = v | 0;\r\n            }\r\n            r[p] = ROUNDING_MODE;\r\n\r\n            // EXPONENTIAL_AT {number|number[]}\r\n            // Integer, -MAX to MAX inclusive or [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n            // 'config() EXPONENTIAL_AT not an integer: {v}'\r\n            // 'config() EXPONENTIAL_AT out of range: {v}'\r\n            if ( has( p = 'EXPONENTIAL_AT' ) ) {\r\n\r\n                if ( isArray(v) ) {\r\n                    if ( isValidInt( v[0], -MAX, 0, 2, p ) && isValidInt( v[1], 0, MAX, 2, p ) ) {\r\n                        TO_EXP_NEG = v[0] | 0;\r\n                        TO_EXP_POS = v[1] | 0;\r\n                    }\r\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n                    TO_EXP_NEG = -( TO_EXP_POS = ( v < 0 ? -v : v ) | 0 );\r\n                }\r\n            }\r\n            r[p] = [ TO_EXP_NEG, TO_EXP_POS ];\r\n\r\n            // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n            // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n            // 'config() RANGE not an integer: {v}'\r\n            // 'config() RANGE cannot be zero: {v}'\r\n            // 'config() RANGE out of range: {v}'\r\n            if ( has( p = 'RANGE' ) ) {\r\n\r\n                if ( isArray(v) ) {\r\n                    if ( isValidInt( v[0], -MAX, -1, 2, p ) && isValidInt( v[1], 1, MAX, 2, p ) ) {\r\n                        MIN_EXP = v[0] | 0;\r\n                        MAX_EXP = v[1] | 0;\r\n                    }\r\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n                    if ( v | 0 ) MIN_EXP = -( MAX_EXP = ( v < 0 ? -v : v ) | 0 );\r\n                    else if (ERRORS) raise( 2, p + ' cannot be zero', v );\r\n                }\r\n            }\r\n            r[p] = [ MIN_EXP, MAX_EXP ];\r\n\r\n            // ERRORS {boolean|number} true, false, 1 or 0.\r\n            // 'config() ERRORS not a boolean or binary digit: {v}'\r\n            if ( has( p = 'ERRORS' ) ) {\r\n\r\n                if ( v === !!v || v === 1 || v === 0 ) {\r\n                    id = 0;\r\n                    isValidInt = ( ERRORS = !!v ) ? intValidatorWithErrors : intValidatorNoErrors;\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + notBool, v );\r\n                }\r\n            }\r\n            r[p] = ERRORS;\r\n\r\n            // CRYPTO {boolean|number} true, false, 1 or 0.\r\n            // 'config() CRYPTO not a boolean or binary digit: {v}'\r\n            // 'config() crypto unavailable: {crypto}'\r\n            if ( has( p = 'CRYPTO' ) ) {\r\n\r\n                if ( v === true || v === false || v === 1 || v === 0 ) {\r\n                    if (v) {\r\n                        v = typeof crypto == 'undefined';\r\n                        if ( !v && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\r\n                            CRYPTO = true;\r\n                        } else if (ERRORS) {\r\n                            raise( 2, 'crypto unavailable', v ? void 0 : crypto );\r\n                        } else {\r\n                            CRYPTO = false;\r\n                        }\r\n                    } else {\r\n                        CRYPTO = false;\r\n                    }\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + notBool, v );\r\n                }\r\n            }\r\n            r[p] = CRYPTO;\r\n\r\n            // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n            // 'config() MODULO_MODE not an integer: {v}'\r\n            // 'config() MODULO_MODE out of range: {v}'\r\n            if ( has( p = 'MODULO_MODE' ) && isValidInt( v, 0, 9, 2, p ) ) {\r\n                MODULO_MODE = v | 0;\r\n            }\r\n            r[p] = MODULO_MODE;\r\n\r\n            // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n            // 'config() POW_PRECISION not an integer: {v}'\r\n            // 'config() POW_PRECISION out of range: {v}'\r\n            if ( has( p = 'POW_PRECISION' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n                POW_PRECISION = v | 0;\r\n            }\r\n            r[p] = POW_PRECISION;\r\n\r\n            // FORMAT {object}\r\n            // 'config() FORMAT not an object: {v}'\r\n            if ( has( p = 'FORMAT' ) ) {\r\n\r\n                if ( typeof v == 'object' ) {\r\n                    FORMAT = v;\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + ' not an object', v );\r\n                }\r\n            }\r\n            r[p] = FORMAT;\r\n\r\n            return r;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the maximum of the arguments.\r\n         *\r\n         * arguments {number|string|BigNumber}\r\n         */\r\n        BigNumber.max = function () { return maxOrMin( arguments, P.lt ); };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the minimum of the arguments.\r\n         *\r\n         * arguments {number|string|BigNumber}\r\n         */\r\n        BigNumber.min = function () { return maxOrMin( arguments, P.gt ); };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n         * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n         * zeros are produced).\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         *\r\n         * 'random() decimal places not an integer: {dp}'\r\n         * 'random() decimal places out of range: {dp}'\r\n         * 'random() crypto unavailable: {crypto}'\r\n         */\r\n        BigNumber.random = (function () {\r\n            var pow2_53 = 0x20000000000000;\r\n\r\n            // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n            // Check if Math.random() produces more than 32 bits of randomness.\r\n            // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n            // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n            var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n              ? function () { return mathfloor( Math.random() * pow2_53 ); }\r\n              : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n                  (Math.random() * 0x800000 | 0); };\r\n\r\n            return function (dp) {\r\n                var a, b, e, k, v,\r\n                    i = 0,\r\n                    c = [],\r\n                    rand = new BigNumber(ONE);\r\n\r\n                dp = dp == null || !isValidInt( dp, 0, MAX, 14 ) ? DECIMAL_PLACES : dp | 0;\r\n                k = mathceil( dp / LOG_BASE );\r\n\r\n                if (CRYPTO) {\r\n\r\n                    // Browsers supporting crypto.getRandomValues.\r\n                    if (crypto.getRandomValues) {\r\n\r\n                        a = crypto.getRandomValues( new Uint32Array( k *= 2 ) );\r\n\r\n                        for ( ; i < k; ) {\r\n\r\n                            // 53 bits:\r\n                            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n                            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n                            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n                            //                                     11111 11111111 11111111\r\n                            // 0x20000 is 2^21.\r\n                            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n                            // Rejection sampling:\r\n                            // 0 <= v < 9007199254740992\r\n                            // Probability that v >= 9e15, is\r\n                            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n                            if ( v >= 9e15 ) {\r\n                                b = crypto.getRandomValues( new Uint32Array(2) );\r\n                                a[i] = b[0];\r\n                                a[i + 1] = b[1];\r\n                            } else {\r\n\r\n                                // 0 <= v <= 8999999999999999\r\n                                // 0 <= (v % 1e14) <= 99999999999999\r\n                                c.push( v % 1e14 );\r\n                                i += 2;\r\n                            }\r\n                        }\r\n                        i = k / 2;\r\n\r\n                    // Node.js supporting crypto.randomBytes.\r\n                    } else if (crypto.randomBytes) {\r\n\r\n                        // buffer\r\n                        a = crypto.randomBytes( k *= 7 );\r\n\r\n                        for ( ; i < k; ) {\r\n\r\n                            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n                            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n                            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n                            // 0 <= v < 9007199254740992\r\n                            v = ( ( a[i] & 31 ) * 0x1000000000000 ) + ( a[i + 1] * 0x10000000000 ) +\r\n                                  ( a[i + 2] * 0x100000000 ) + ( a[i + 3] * 0x1000000 ) +\r\n                                  ( a[i + 4] << 16 ) + ( a[i + 5] << 8 ) + a[i + 6];\r\n\r\n                            if ( v >= 9e15 ) {\r\n                                crypto.randomBytes(7).copy( a, i );\r\n                            } else {\r\n\r\n                                // 0 <= (v % 1e14) <= 99999999999999\r\n                                c.push( v % 1e14 );\r\n                                i += 7;\r\n                            }\r\n                        }\r\n                        i = k / 7;\r\n                    } else {\r\n                        CRYPTO = false;\r\n                        if (ERRORS) raise( 14, 'crypto unavailable', crypto );\r\n                    }\r\n                }\r\n\r\n                // Use Math.random.\r\n                if (!CRYPTO) {\r\n\r\n                    for ( ; i < k; ) {\r\n                        v = random53bitInt();\r\n                        if ( v < 9e15 ) c[i++] = v % 1e14;\r\n                    }\r\n                }\r\n\r\n                k = c[--i];\r\n                dp %= LOG_BASE;\r\n\r\n                // Convert trailing digits to zeros according to dp.\r\n                if ( k && dp ) {\r\n                    v = POWS_TEN[LOG_BASE - dp];\r\n                    c[i] = mathfloor( k / v ) * v;\r\n                }\r\n\r\n                // Remove trailing elements which are zero.\r\n                for ( ; c[i] === 0; c.pop(), i-- );\r\n\r\n                // Zero?\r\n                if ( i < 0 ) {\r\n                    c = [ e = 0 ];\r\n                } else {\r\n\r\n                    // Remove leading elements which are zero and adjust exponent accordingly.\r\n                    for ( e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n                    // Count the digits of the first element of c to determine leading zeros, and...\r\n                    for ( i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n                    // adjust the exponent accordingly.\r\n                    if ( i < LOG_BASE ) e -= LOG_BASE - i;\r\n                }\r\n\r\n                rand.e = e;\r\n                rand.c = c;\r\n                return rand;\r\n            };\r\n        })();\r\n\r\n\r\n        // PRIVATE FUNCTIONS\r\n\r\n\r\n        // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n        function convertBase( str, baseOut, baseIn, sign ) {\r\n            var d, e, k, r, x, xc, y,\r\n                i = str.indexOf( '.' ),\r\n                dp = DECIMAL_PLACES,\r\n                rm = ROUNDING_MODE;\r\n\r\n            if ( baseIn < 37 ) str = str.toLowerCase();\r\n\r\n            // Non-integer.\r\n            if ( i >= 0 ) {\r\n                k = POW_PRECISION;\r\n\r\n                // Unlimited precision.\r\n                POW_PRECISION = 0;\r\n                str = str.replace( '.', '' );\r\n                y = new BigNumber(baseIn);\r\n                x = y.pow( str.length - i );\r\n                POW_PRECISION = k;\r\n\r\n                // Convert str as if an integer, then restore the fraction part by dividing the\r\n                // result by its base raised to a power.\r\n                y.c = toBaseOut( toFixedPoint( coeffToString( x.c ), x.e ), 10, baseOut );\r\n                y.e = y.c.length;\r\n            }\r\n\r\n            // Convert the number as integer.\r\n            xc = toBaseOut( str, baseIn, baseOut );\r\n            e = k = xc.length;\r\n\r\n            // Remove trailing zeros.\r\n            for ( ; xc[--k] == 0; xc.pop() );\r\n            if ( !xc[0] ) return '0';\r\n\r\n            if ( i < 0 ) {\r\n                --e;\r\n            } else {\r\n                x.c = xc;\r\n                x.e = e;\r\n\r\n                // sign is needed for correct rounding.\r\n                x.s = sign;\r\n                x = div( x, y, dp, rm, baseOut );\r\n                xc = x.c;\r\n                r = x.r;\r\n                e = x.e;\r\n            }\r\n\r\n            d = e + dp + 1;\r\n\r\n            // The rounding digit, i.e. the digit to the right of the digit that may be rounded up.\r\n            i = xc[d];\r\n            k = baseOut / 2;\r\n            r = r || d < 0 || xc[d + 1] != null;\r\n\r\n            r = rm < 4 ? ( i != null || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n                       : i > k || i == k &&( rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n                         rm == ( x.s < 0 ? 8 : 7 ) );\r\n\r\n            if ( d < 1 || !xc[0] ) {\r\n\r\n                // 1^-dp or 0.\r\n                str = r ? toFixedPoint( '1', -dp ) : '0';\r\n            } else {\r\n                xc.length = d;\r\n\r\n                if (r) {\r\n\r\n                    // Rounding up may mean the previous digit has to be rounded up and so on.\r\n                    for ( --baseOut; ++xc[--d] > baseOut; ) {\r\n                        xc[d] = 0;\r\n\r\n                        if ( !d ) {\r\n                            ++e;\r\n                            xc = [1].concat(xc);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Determine trailing zeros.\r\n                for ( k = xc.length; !xc[--k]; );\r\n\r\n                // E.g. [4, 11, 15] becomes 4bf.\r\n                for ( i = 0, str = ''; i <= k; str += ALPHABET.charAt( xc[i++] ) );\r\n                str = toFixedPoint( str, e );\r\n            }\r\n\r\n            // The caller will add the sign.\r\n            return str;\r\n        }\r\n\r\n\r\n        // Perform division in the specified base. Called by div and convertBase.\r\n        div = (function () {\r\n\r\n            // Assume non-zero x and k.\r\n            function multiply( x, k, base ) {\r\n                var m, temp, xlo, xhi,\r\n                    carry = 0,\r\n                    i = x.length,\r\n                    klo = k % SQRT_BASE,\r\n                    khi = k / SQRT_BASE | 0;\r\n\r\n                for ( x = x.slice(); i--; ) {\r\n                    xlo = x[i] % SQRT_BASE;\r\n                    xhi = x[i] / SQRT_BASE | 0;\r\n                    m = khi * xlo + xhi * klo;\r\n                    temp = klo * xlo + ( ( m % SQRT_BASE ) * SQRT_BASE ) + carry;\r\n                    carry = ( temp / base | 0 ) + ( m / SQRT_BASE | 0 ) + khi * xhi;\r\n                    x[i] = temp % base;\r\n                }\r\n\r\n                if (carry) x = [carry].concat(x);\r\n\r\n                return x;\r\n            }\r\n\r\n            function compare( a, b, aL, bL ) {\r\n                var i, cmp;\r\n\r\n                if ( aL != bL ) {\r\n                    cmp = aL > bL ? 1 : -1;\r\n                } else {\r\n\r\n                    for ( i = cmp = 0; i < aL; i++ ) {\r\n\r\n                        if ( a[i] != b[i] ) {\r\n                            cmp = a[i] > b[i] ? 1 : -1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return cmp;\r\n            }\r\n\r\n            function subtract( a, b, aL, base ) {\r\n                var i = 0;\r\n\r\n                // Subtract b from a.\r\n                for ( ; aL--; ) {\r\n                    a[aL] -= i;\r\n                    i = a[aL] < b[aL] ? 1 : 0;\r\n                    a[aL] = i * base + a[aL] - b[aL];\r\n                }\r\n\r\n                // Remove leading zeros.\r\n                for ( ; !a[0] && a.length > 1; a.splice(0, 1) );\r\n            }\r\n\r\n            // x: dividend, y: divisor.\r\n            return function ( x, y, dp, rm, base ) {\r\n                var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n                    yL, yz,\r\n                    s = x.s == y.s ? 1 : -1,\r\n                    xc = x.c,\r\n                    yc = y.c;\r\n\r\n                // Either NaN, Infinity or 0?\r\n                if ( !xc || !xc[0] || !yc || !yc[0] ) {\r\n\r\n                    return new BigNumber(\r\n\r\n                      // Return NaN if either NaN, or both Infinity or 0.\r\n                      !x.s || !y.s || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :\r\n\r\n                        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n                        xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n                    );\r\n                }\r\n\r\n                q = new BigNumber(s);\r\n                qc = q.c = [];\r\n                e = x.e - y.e;\r\n                s = dp + e + 1;\r\n\r\n                if ( !base ) {\r\n                    base = BASE;\r\n                    e = bitFloor( x.e / LOG_BASE ) - bitFloor( y.e / LOG_BASE );\r\n                    s = s / LOG_BASE | 0;\r\n                }\r\n\r\n                // Result exponent may be one less then the current value of e.\r\n                // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n                for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );\r\n                if ( yc[i] > ( xc[i] || 0 ) ) e--;\r\n\r\n                if ( s < 0 ) {\r\n                    qc.push(1);\r\n                    more = true;\r\n                } else {\r\n                    xL = xc.length;\r\n                    yL = yc.length;\r\n                    i = 0;\r\n                    s += 2;\r\n\r\n                    // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n                    n = mathfloor( base / ( yc[0] + 1 ) );\r\n\r\n                    // Not necessary, but to handle odd bases where yc[0] == ( base / 2 ) - 1.\r\n                    // if ( n > 1 || n++ == 1 && yc[0] < base / 2 ) {\r\n                    if ( n > 1 ) {\r\n                        yc = multiply( yc, n, base );\r\n                        xc = multiply( xc, n, base );\r\n                        yL = yc.length;\r\n                        xL = xc.length;\r\n                    }\r\n\r\n                    xi = yL;\r\n                    rem = xc.slice( 0, yL );\r\n                    remL = rem.length;\r\n\r\n                    // Add zeros to make remainder as long as divisor.\r\n                    for ( ; remL < yL; rem[remL++] = 0 );\r\n                    yz = yc.slice();\r\n                    yz = [0].concat(yz);\r\n                    yc0 = yc[0];\r\n                    if ( yc[1] >= base / 2 ) yc0++;\r\n                    // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n                    // else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;\r\n\r\n                    do {\r\n                        n = 0;\r\n\r\n                        // Compare divisor and remainder.\r\n                        cmp = compare( yc, rem, yL, remL );\r\n\r\n                        // If divisor < remainder.\r\n                        if ( cmp < 0 ) {\r\n\r\n                            // Calculate trial digit, n.\r\n\r\n                            rem0 = rem[0];\r\n                            if ( yL != remL ) rem0 = rem0 * base + ( rem[1] || 0 );\r\n\r\n                            // n is how many times the divisor goes into the current remainder.\r\n                            n = mathfloor( rem0 / yc0 );\r\n\r\n                            //  Algorithm:\r\n                            //  1. product = divisor * trial digit (n)\r\n                            //  2. if product > remainder: product -= divisor, n--\r\n                            //  3. remainder -= product\r\n                            //  4. if product was < remainder at 2:\r\n                            //    5. compare new remainder and divisor\r\n                            //    6. If remainder > divisor: remainder -= divisor, n++\r\n\r\n                            if ( n > 1 ) {\r\n\r\n                                // n may be > base only when base is 3.\r\n                                if (n >= base) n = base - 1;\r\n\r\n                                // product = divisor * trial digit.\r\n                                prod = multiply( yc, n, base );\r\n                                prodL = prod.length;\r\n                                remL = rem.length;\r\n\r\n                                // Compare product and remainder.\r\n                                // If product > remainder.\r\n                                // Trial digit n too high.\r\n                                // n is 1 too high about 5% of the time, and is not known to have\r\n                                // ever been more than 1 too high.\r\n                                while ( compare( prod, rem, prodL, remL ) == 1 ) {\r\n                                    n--;\r\n\r\n                                    // Subtract divisor from product.\r\n                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );\r\n                                    prodL = prod.length;\r\n                                    cmp = 1;\r\n                                }\r\n                            } else {\r\n\r\n                                // n is 0 or 1, cmp is -1.\r\n                                // If n is 0, there is no need to compare yc and rem again below,\r\n                                // so change cmp to 1 to avoid it.\r\n                                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                                if ( n == 0 ) {\r\n\r\n                                    // divisor < remainder, so n must be at least 1.\r\n                                    cmp = n = 1;\r\n                                }\r\n\r\n                                // product = divisor\r\n                                prod = yc.slice();\r\n                                prodL = prod.length;\r\n                            }\r\n\r\n                            if ( prodL < remL ) prod = [0].concat(prod);\r\n\r\n                            // Subtract product from remainder.\r\n                            subtract( rem, prod, remL, base );\r\n                            remL = rem.length;\r\n\r\n                             // If product was < remainder.\r\n                            if ( cmp == -1 ) {\r\n\r\n                                // Compare divisor and new remainder.\r\n                                // If divisor < new remainder, subtract divisor from remainder.\r\n                                // Trial digit n too low.\r\n                                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                                while ( compare( yc, rem, yL, remL ) < 1 ) {\r\n                                    n++;\r\n\r\n                                    // Subtract divisor from remainder.\r\n                                    subtract( rem, yL < remL ? yz : yc, remL, base );\r\n                                    remL = rem.length;\r\n                                }\r\n                            }\r\n                        } else if ( cmp === 0 ) {\r\n                            n++;\r\n                            rem = [0];\r\n                        } // else cmp === 1 and n will be 0\r\n\r\n                        // Add the next digit, n, to the result array.\r\n                        qc[i++] = n;\r\n\r\n                        // Update the remainder.\r\n                        if ( rem[0] ) {\r\n                            rem[remL++] = xc[xi] || 0;\r\n                        } else {\r\n                            rem = [ xc[xi] ];\r\n                            remL = 1;\r\n                        }\r\n                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );\r\n\r\n                    more = rem[0] != null;\r\n\r\n                    // Leading zero?\r\n                    if ( !qc[0] ) qc.splice(0, 1);\r\n                }\r\n\r\n                if ( base == BASE ) {\r\n\r\n                    // To calculate q.e, first get the number of digits of qc[0].\r\n                    for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );\r\n                    round( q, dp + ( q.e = i + e * LOG_BASE - 1 ) + 1, rm, more );\r\n\r\n                // Caller is convertBase.\r\n                } else {\r\n                    q.e = e;\r\n                    q.r = +more;\r\n                }\r\n\r\n                return q;\r\n            };\r\n        })();\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n         * notation rounded to the specified decimal places or significant digits.\r\n         *\r\n         * n is a BigNumber.\r\n         * i is the index of the last digit required (i.e. the digit that may be rounded up).\r\n         * rm is the rounding mode.\r\n         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.\r\n         */\r\n        function format( n, i, rm, caller ) {\r\n            var c0, e, ne, len, str;\r\n\r\n            rm = rm != null && isValidInt( rm, 0, 8, caller, roundingMode )\r\n              ? rm | 0 : ROUNDING_MODE;\r\n\r\n            if ( !n.c ) return n.toString();\r\n            c0 = n.c[0];\r\n            ne = n.e;\r\n\r\n            if ( i == null ) {\r\n                str = coeffToString( n.c );\r\n                str = caller == 19 || caller == 24 && ne <= TO_EXP_NEG\r\n                  ? toExponential( str, ne )\r\n                  : toFixedPoint( str, ne );\r\n            } else {\r\n                n = round( new BigNumber(n), i, rm );\r\n\r\n                // n.e may have changed if the value was rounded up.\r\n                e = n.e;\r\n\r\n                str = coeffToString( n.c );\r\n                len = str.length;\r\n\r\n                // toPrecision returns exponential notation if the number of significant digits\r\n                // specified is less than the number of digits necessary to represent the integer\r\n                // part of the value in fixed-point notation.\r\n\r\n                // Exponential notation.\r\n                if ( caller == 19 || caller == 24 && ( i <= e || e <= TO_EXP_NEG ) ) {\r\n\r\n                    // Append zeros?\r\n                    for ( ; len < i; str += '0', len++ );\r\n                    str = toExponential( str, e );\r\n\r\n                // Fixed-point notation.\r\n                } else {\r\n                    i -= ne;\r\n                    str = toFixedPoint( str, e );\r\n\r\n                    // Append zeros?\r\n                    if ( e + 1 > len ) {\r\n                        if ( --i > 0 ) for ( str += '.'; i--; str += '0' );\r\n                    } else {\r\n                        i += e - len;\r\n                        if ( i > 0 ) {\r\n                            if ( e + 1 == len ) str += '.';\r\n                            for ( ; i--; str += '0' );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return n.s < 0 && c0 ? '-' + str : str;\r\n        }\r\n\r\n\r\n        // Handle BigNumber.max and BigNumber.min.\r\n        function maxOrMin( args, method ) {\r\n            var m, n,\r\n                i = 0;\r\n\r\n            if ( isArray( args[0] ) ) args = args[0];\r\n            m = new BigNumber( args[0] );\r\n\r\n            for ( ; ++i < args.length; ) {\r\n                n = new BigNumber( args[i] );\r\n\r\n                // If any number is NaN, return NaN.\r\n                if ( !n.s ) {\r\n                    m = n;\r\n                    break;\r\n                } else if ( method.call( m, n ) ) {\r\n                    m = n;\r\n                }\r\n            }\r\n\r\n            return m;\r\n        }\r\n\r\n\r\n        /*\r\n         * Return true if n is an integer in range, otherwise throw.\r\n         * Use for argument validation when ERRORS is true.\r\n         */\r\n        function intValidatorWithErrors( n, min, max, caller, name ) {\r\n            if ( n < min || n > max || n != truncate(n) ) {\r\n                raise( caller, ( name || 'decimal places' ) +\r\n                  ( n < min || n > max ? ' out of range' : ' not an integer' ), n );\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n\r\n        /*\r\n         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n         * Called by minus, plus and times.\r\n         */\r\n        function normalise( n, c, e ) {\r\n            var i = 1,\r\n                j = c.length;\r\n\r\n             // Remove trailing zeros.\r\n            for ( ; !c[--j]; c.pop() );\r\n\r\n            // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n            for ( j = c[0]; j >= 10; j /= 10, i++ );\r\n\r\n            // Overflow?\r\n            if ( ( e = i + e * LOG_BASE - 1 ) > MAX_EXP ) {\r\n\r\n                // Infinity.\r\n                n.c = n.e = null;\r\n\r\n            // Underflow?\r\n            } else if ( e < MIN_EXP ) {\r\n\r\n                // Zero.\r\n                n.c = [ n.e = 0 ];\r\n            } else {\r\n                n.e = e;\r\n                n.c = c;\r\n            }\r\n\r\n            return n;\r\n        }\r\n\r\n\r\n        // Handle values that fail the validity test in BigNumber.\r\n        parseNumeric = (function () {\r\n            var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n                dotAfter = /^([^.]+)\\.$/,\r\n                dotBefore = /^\\.([^.]+)$/,\r\n                isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n                whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n            return function ( x, str, num, b ) {\r\n                var base,\r\n                    s = num ? str : str.replace( whitespaceOrPlus, '' );\r\n\r\n                // No exception on ±Infinity or NaN.\r\n                if ( isInfinityOrNaN.test(s) ) {\r\n                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n                } else {\r\n                    if ( !num ) {\r\n\r\n                        // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n                        s = s.replace( basePrefix, function ( m, p1, p2 ) {\r\n                            base = ( p2 = p2.toLowerCase() ) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n                            return !b || b == base ? p1 : m;\r\n                        });\r\n\r\n                        if (b) {\r\n                            base = b;\r\n\r\n                            // E.g. '1.' to '1', '.1' to '0.1'\r\n                            s = s.replace( dotAfter, '$1' ).replace( dotBefore, '0.$1' );\r\n                        }\r\n\r\n                        if ( str != s ) return new BigNumber( s, base );\r\n                    }\r\n\r\n                    // 'new BigNumber() not a number: {n}'\r\n                    // 'new BigNumber() not a base {b} number: {n}'\r\n                    if (ERRORS) raise( id, 'not a' + ( b ? ' base ' + b : '' ) + ' number', str );\r\n                    x.s = null;\r\n                }\r\n\r\n                x.c = x.e = null;\r\n                id = 0;\r\n            }\r\n        })();\r\n\r\n\r\n        // Throw a BigNumber Error.\r\n        function raise( caller, msg, val ) {\r\n            var error = new Error( [\r\n                'new BigNumber',     // 0\r\n                'cmp',               // 1\r\n                'config',            // 2\r\n                'div',               // 3\r\n                'divToInt',          // 4\r\n                'eq',                // 5\r\n                'gt',                // 6\r\n                'gte',               // 7\r\n                'lt',                // 8\r\n                'lte',               // 9\r\n                'minus',             // 10\r\n                'mod',               // 11\r\n                'plus',              // 12\r\n                'precision',         // 13\r\n                'random',            // 14\r\n                'round',             // 15\r\n                'shift',             // 16\r\n                'times',             // 17\r\n                'toDigits',          // 18\r\n                'toExponential',     // 19\r\n                'toFixed',           // 20\r\n                'toFormat',          // 21\r\n                'toFraction',        // 22\r\n                'pow',               // 23\r\n                'toPrecision',       // 24\r\n                'toString',          // 25\r\n                'BigNumber'          // 26\r\n            ][caller] + '() ' + msg + ': ' + val );\r\n\r\n            error.name = 'BigNumber Error';\r\n            id = 0;\r\n            throw error;\r\n        }\r\n\r\n\r\n        /*\r\n         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n         * If r is truthy, it is known that there are more digits after the rounding digit.\r\n         */\r\n        function round( x, sd, rm, r ) {\r\n            var d, i, j, k, n, ni, rd,\r\n                xc = x.c,\r\n                pows10 = POWS_TEN;\r\n\r\n            // if x is not Infinity or NaN...\r\n            if (xc) {\r\n\r\n                // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n                // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n                // ni is the index of n within x.c.\r\n                // d is the number of digits of n.\r\n                // i is the index of rd within n including leading zeros.\r\n                // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n                out: {\r\n\r\n                    // Get the number of digits of the first element of xc.\r\n                    for ( d = 1, k = xc[0]; k >= 10; k /= 10, d++ );\r\n                    i = sd - d;\r\n\r\n                    // If the rounding digit is in the first element of xc...\r\n                    if ( i < 0 ) {\r\n                        i += LOG_BASE;\r\n                        j = sd;\r\n                        n = xc[ ni = 0 ];\r\n\r\n                        // Get the rounding digit at index j of n.\r\n                        rd = n / pows10[ d - j - 1 ] % 10 | 0;\r\n                    } else {\r\n                        ni = mathceil( ( i + 1 ) / LOG_BASE );\r\n\r\n                        if ( ni >= xc.length ) {\r\n\r\n                            if (r) {\r\n\r\n                                // Needed by sqrt.\r\n                                for ( ; xc.length <= ni; xc.push(0) );\r\n                                n = rd = 0;\r\n                                d = 1;\r\n                                i %= LOG_BASE;\r\n                                j = i - LOG_BASE + 1;\r\n                            } else {\r\n                                break out;\r\n                            }\r\n                        } else {\r\n                            n = k = xc[ni];\r\n\r\n                            // Get the number of digits of n.\r\n                            for ( d = 1; k >= 10; k /= 10, d++ );\r\n\r\n                            // Get the index of rd within n.\r\n                            i %= LOG_BASE;\r\n\r\n                            // Get the index of rd within n, adjusted for leading zeros.\r\n                            // The number of leading zeros of n is given by LOG_BASE - d.\r\n                            j = i - LOG_BASE + d;\r\n\r\n                            // Get the rounding digit at index j of n.\r\n                            rd = j < 0 ? 0 : n / pows10[ d - j - 1 ] % 10 | 0;\r\n                        }\r\n                    }\r\n\r\n                    r = r || sd < 0 ||\r\n\r\n                    // Are there any non-zero digits after the rounding digit?\r\n                    // The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right\r\n                    // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n                      xc[ni + 1] != null || ( j < 0 ? n : n % pows10[ d - j - 1 ] );\r\n\r\n                    r = rm < 4\r\n                      ? ( rd || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n                      : rd > 5 || rd == 5 && ( rm == 4 || r || rm == 6 &&\r\n\r\n                        // Check whether the digit to the left of the rounding digit is odd.\r\n                        ( ( i > 0 ? j > 0 ? n / pows10[ d - j ] : 0 : xc[ni - 1] ) % 10 ) & 1 ||\r\n                          rm == ( x.s < 0 ? 8 : 7 ) );\r\n\r\n                    if ( sd < 1 || !xc[0] ) {\r\n                        xc.length = 0;\r\n\r\n                        if (r) {\r\n\r\n                            // Convert sd to decimal places.\r\n                            sd -= x.e + 1;\r\n\r\n                            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n                            xc[0] = pows10[ ( LOG_BASE - sd % LOG_BASE ) % LOG_BASE ];\r\n                            x.e = -sd || 0;\r\n                        } else {\r\n\r\n                            // Zero.\r\n                            xc[0] = x.e = 0;\r\n                        }\r\n\r\n                        return x;\r\n                    }\r\n\r\n                    // Remove excess digits.\r\n                    if ( i == 0 ) {\r\n                        xc.length = ni;\r\n                        k = 1;\r\n                        ni--;\r\n                    } else {\r\n                        xc.length = ni + 1;\r\n                        k = pows10[ LOG_BASE - i ];\r\n\r\n                        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n                        // j > 0 means i > number of leading zeros of n.\r\n                        xc[ni] = j > 0 ? mathfloor( n / pows10[ d - j ] % pows10[j] ) * k : 0;\r\n                    }\r\n\r\n                    // Round up?\r\n                    if (r) {\r\n\r\n                        for ( ; ; ) {\r\n\r\n                            // If the digit to be rounded up is in the first element of xc...\r\n                            if ( ni == 0 ) {\r\n\r\n                                // i will be the length of xc[0] before k is added.\r\n                                for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );\r\n                                j = xc[0] += k;\r\n                                for ( k = 1; j >= 10; j /= 10, k++ );\r\n\r\n                                // if i != k the length has increased.\r\n                                if ( i != k ) {\r\n                                    x.e++;\r\n                                    if ( xc[0] == BASE ) xc[0] = 1;\r\n                                }\r\n\r\n                                break;\r\n                            } else {\r\n                                xc[ni] += k;\r\n                                if ( xc[ni] != BASE ) break;\r\n                                xc[ni--] = 0;\r\n                                k = 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Remove trailing zeros.\r\n                    for ( i = xc.length; xc[--i] === 0; xc.pop() );\r\n                }\r\n\r\n                // Overflow? Infinity.\r\n                if ( x.e > MAX_EXP ) {\r\n                    x.c = x.e = null;\r\n\r\n                // Underflow? Zero.\r\n                } else if ( x.e < MIN_EXP ) {\r\n                    x.c = [ x.e = 0 ];\r\n                }\r\n            }\r\n\r\n            return x;\r\n        }\r\n\r\n\r\n        // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n         */\r\n        P.absoluteValue = P.abs = function () {\r\n            var x = new BigNumber(this);\r\n            if ( x.s < 0 ) x.s = 1;\r\n            return x;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n         * number in the direction of Infinity.\r\n         */\r\n        P.ceil = function () {\r\n            return round( new BigNumber(this), this.e + 1, 2 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return\r\n         * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n         * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n         * 0 if they have the same value,\r\n         * or null if the value of either is NaN.\r\n         */\r\n        P.comparedTo = P.cmp = function ( y, b ) {\r\n            id = 1;\r\n            return compare( this, new BigNumber( y, b ) );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the number of decimal places of the value of this BigNumber, or null if the value\r\n         * of this BigNumber is ±Infinity or NaN.\r\n         */\r\n        P.decimalPlaces = P.dp = function () {\r\n            var n, v,\r\n                c = this.c;\r\n\r\n            if ( !c ) return null;\r\n            n = ( ( v = c.length - 1 ) - bitFloor( this.e / LOG_BASE ) ) * LOG_BASE;\r\n\r\n            // Subtract the number of trailing zeros of the last number.\r\n            if ( v = c[v] ) for ( ; v % 10 == 0; v /= 10, n-- );\r\n            if ( n < 0 ) n = 0;\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n / 0 = I\r\n         *  n / N = N\r\n         *  n / I = 0\r\n         *  0 / n = 0\r\n         *  0 / 0 = N\r\n         *  0 / N = N\r\n         *  0 / I = 0\r\n         *  N / n = N\r\n         *  N / 0 = N\r\n         *  N / N = N\r\n         *  N / I = N\r\n         *  I / n = I\r\n         *  I / 0 = I\r\n         *  I / N = N\r\n         *  I / I = N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n         * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         */\r\n        P.dividedBy = P.div = function ( y, b ) {\r\n            id = 3;\r\n            return div( this, new BigNumber( y, b ), DECIMAL_PLACES, ROUNDING_MODE );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n         * BigNumber by the value of BigNumber(y, b).\r\n         */\r\n        P.dividedToIntegerBy = P.divToInt = function ( y, b ) {\r\n            id = 4;\r\n            return div( this, new BigNumber( y, b ), 0, 1 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.equals = P.eq = function ( y, b ) {\r\n            id = 5;\r\n            return compare( this, new BigNumber( y, b ) ) === 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n         * number in the direction of -Infinity.\r\n         */\r\n        P.floor = function () {\r\n            return round( new BigNumber(this), this.e + 1, 3 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.greaterThan = P.gt = function ( y, b ) {\r\n            id = 6;\r\n            return compare( this, new BigNumber( y, b ) ) > 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is greater than or equal to the value of\r\n         * BigNumber(y, b), otherwise returns false.\r\n         */\r\n        P.greaterThanOrEqualTo = P.gte = function ( y, b ) {\r\n            id = 7;\r\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === 1 || b === 0;\r\n\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is a finite number, otherwise returns false.\r\n         */\r\n        P.isFinite = function () {\r\n            return !!this.c;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n         */\r\n        P.isInteger = P.isInt = function () {\r\n            return !!this.c && bitFloor( this.e / LOG_BASE ) > this.c.length - 2;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is NaN, otherwise returns false.\r\n         */\r\n        P.isNaN = function () {\r\n            return !this.s;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is negative, otherwise returns false.\r\n         */\r\n        P.isNegative = P.isNeg = function () {\r\n            return this.s < 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is 0 or -0, otherwise returns false.\r\n         */\r\n        P.isZero = function () {\r\n            return !!this.c && this.c[0] == 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.lessThan = P.lt = function ( y, b ) {\r\n            id = 8;\r\n            return compare( this, new BigNumber( y, b ) ) < 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is less than or equal to the value of\r\n         * BigNumber(y, b), otherwise returns false.\r\n         */\r\n        P.lessThanOrEqualTo = P.lte = function ( y, b ) {\r\n            id = 9;\r\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === -1 || b === 0;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n - 0 = n\r\n         *  n - N = N\r\n         *  n - I = -I\r\n         *  0 - n = -n\r\n         *  0 - 0 = 0\r\n         *  0 - N = N\r\n         *  0 - I = -I\r\n         *  N - n = N\r\n         *  N - 0 = N\r\n         *  N - N = N\r\n         *  N - I = N\r\n         *  I - n = I\r\n         *  I - 0 = I\r\n         *  I - N = N\r\n         *  I - I = N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.minus = P.sub = function ( y, b ) {\r\n            var i, j, t, xLTy,\r\n                x = this,\r\n                a = x.s;\r\n\r\n            id = 10;\r\n            y = new BigNumber( y, b );\r\n            b = y.s;\r\n\r\n            // Either NaN?\r\n            if ( !a || !b ) return new BigNumber(NaN);\r\n\r\n            // Signs differ?\r\n            if ( a != b ) {\r\n                y.s = -b;\r\n                return x.plus(y);\r\n            }\r\n\r\n            var xe = x.e / LOG_BASE,\r\n                ye = y.e / LOG_BASE,\r\n                xc = x.c,\r\n                yc = y.c;\r\n\r\n            if ( !xe || !ye ) {\r\n\r\n                // Either Infinity?\r\n                if ( !xc || !yc ) return xc ? ( y.s = -b, y ) : new BigNumber( yc ? x : NaN );\r\n\r\n                // Either zero?\r\n                if ( !xc[0] || !yc[0] ) {\r\n\r\n                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                    return yc[0] ? ( y.s = -b, y ) : new BigNumber( xc[0] ? x :\r\n\r\n                      // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n                      ROUNDING_MODE == 3 ? -0 : 0 );\r\n                }\r\n            }\r\n\r\n            xe = bitFloor(xe);\r\n            ye = bitFloor(ye);\r\n            xc = xc.slice();\r\n\r\n            // Determine which is the bigger number.\r\n            if ( a = xe - ye ) {\r\n\r\n                if ( xLTy = a < 0 ) {\r\n                    a = -a;\r\n                    t = xc;\r\n                } else {\r\n                    ye = xe;\r\n                    t = yc;\r\n                }\r\n\r\n                t.reverse();\r\n\r\n                // Prepend zeros to equalise exponents.\r\n                for ( b = a; b--; t.push(0) );\r\n                t.reverse();\r\n            } else {\r\n\r\n                // Exponents equal. Check digit by digit.\r\n                j = ( xLTy = ( a = xc.length ) < ( b = yc.length ) ) ? a : b;\r\n\r\n                for ( a = b = 0; b < j; b++ ) {\r\n\r\n                    if ( xc[b] != yc[b] ) {\r\n                        xLTy = xc[b] < yc[b];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // x < y? Point xc to the array of the bigger number.\r\n            if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n            b = ( j = yc.length ) - ( i = xc.length );\r\n\r\n            // Append zeros to xc if shorter.\r\n            // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n            if ( b > 0 ) for ( ; b--; xc[i++] = 0 );\r\n            b = BASE - 1;\r\n\r\n            // Subtract yc from xc.\r\n            for ( ; j > a; ) {\r\n\r\n                if ( xc[--j] < yc[j] ) {\r\n                    for ( i = j; i && !xc[--i]; xc[i] = b );\r\n                    --xc[i];\r\n                    xc[j] += BASE;\r\n                }\r\n\r\n                xc[j] -= yc[j];\r\n            }\r\n\r\n            // Remove leading zeros and adjust exponent accordingly.\r\n            for ( ; xc[0] == 0; xc.splice(0, 1), --ye );\r\n\r\n            // Zero?\r\n            if ( !xc[0] ) {\r\n\r\n                // Following IEEE 754 (2008) 6.3,\r\n                // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n                y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n                y.c = [ y.e = 0 ];\r\n                return y;\r\n            }\r\n\r\n            // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n            // for finite x and y.\r\n            return normalise( y, xc, ye );\r\n        };\r\n\r\n\r\n        /*\r\n         *   n % 0 =  N\r\n         *   n % N =  N\r\n         *   n % I =  n\r\n         *   0 % n =  0\r\n         *  -0 % n = -0\r\n         *   0 % 0 =  N\r\n         *   0 % N =  N\r\n         *   0 % I =  0\r\n         *   N % n =  N\r\n         *   N % 0 =  N\r\n         *   N % N =  N\r\n         *   N % I =  N\r\n         *   I % n =  N\r\n         *   I % 0 =  N\r\n         *   I % N =  N\r\n         *   I % I =  N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n         * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n         */\r\n        P.modulo = P.mod = function ( y, b ) {\r\n            var q, s,\r\n                x = this;\r\n\r\n            id = 11;\r\n            y = new BigNumber( y, b );\r\n\r\n            // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n            if ( !x.c || !y.s || y.c && !y.c[0] ) {\r\n                return new BigNumber(NaN);\r\n\r\n            // Return x if y is Infinity or x is zero.\r\n            } else if ( !y.c || x.c && !x.c[0] ) {\r\n                return new BigNumber(x);\r\n            }\r\n\r\n            if ( MODULO_MODE == 9 ) {\r\n\r\n                // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n                // r = x - qy    where  0 <= r < abs(y)\r\n                s = y.s;\r\n                y.s = 1;\r\n                q = div( x, y, 0, 3 );\r\n                y.s = s;\r\n                q.s *= s;\r\n            } else {\r\n                q = div( x, y, 0, MODULO_MODE );\r\n            }\r\n\r\n            return x.minus( q.times(y) );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n         * i.e. multiplied by -1.\r\n         */\r\n        P.negated = P.neg = function () {\r\n            var x = new BigNumber(this);\r\n            x.s = -x.s || null;\r\n            return x;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n + 0 = n\r\n         *  n + N = N\r\n         *  n + I = I\r\n         *  0 + n = n\r\n         *  0 + 0 = 0\r\n         *  0 + N = N\r\n         *  0 + I = I\r\n         *  N + n = N\r\n         *  N + 0 = N\r\n         *  N + N = N\r\n         *  N + I = N\r\n         *  I + n = I\r\n         *  I + 0 = I\r\n         *  I + N = N\r\n         *  I + I = I\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.plus = P.add = function ( y, b ) {\r\n            var t,\r\n                x = this,\r\n                a = x.s;\r\n\r\n            id = 12;\r\n            y = new BigNumber( y, b );\r\n            b = y.s;\r\n\r\n            // Either NaN?\r\n            if ( !a || !b ) return new BigNumber(NaN);\r\n\r\n            // Signs differ?\r\n             if ( a != b ) {\r\n                y.s = -b;\r\n                return x.minus(y);\r\n            }\r\n\r\n            var xe = x.e / LOG_BASE,\r\n                ye = y.e / LOG_BASE,\r\n                xc = x.c,\r\n                yc = y.c;\r\n\r\n            if ( !xe || !ye ) {\r\n\r\n                // Return ±Infinity if either ±Infinity.\r\n                if ( !xc || !yc ) return new BigNumber( a / 0 );\r\n\r\n                // Either zero?\r\n                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                if ( !xc[0] || !yc[0] ) return yc[0] ? y : new BigNumber( xc[0] ? x : a * 0 );\r\n            }\r\n\r\n            xe = bitFloor(xe);\r\n            ye = bitFloor(ye);\r\n            xc = xc.slice();\r\n\r\n            // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n            if ( a = xe - ye ) {\r\n                if ( a > 0 ) {\r\n                    ye = xe;\r\n                    t = yc;\r\n                } else {\r\n                    a = -a;\r\n                    t = xc;\r\n                }\r\n\r\n                t.reverse();\r\n                for ( ; a--; t.push(0) );\r\n                t.reverse();\r\n            }\r\n\r\n            a = xc.length;\r\n            b = yc.length;\r\n\r\n            // Point xc to the longer array, and b to the shorter length.\r\n            if ( a - b < 0 ) t = yc, yc = xc, xc = t, b = a;\r\n\r\n            // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n            for ( a = 0; b; ) {\r\n                a = ( xc[--b] = xc[b] + yc[b] + a ) / BASE | 0;\r\n                xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n            }\r\n\r\n            if (a) {\r\n                xc = [a].concat(xc);\r\n                ++ye;\r\n            }\r\n\r\n            // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n            // ye = MAX_EXP + 1 possible\r\n            return normalise( y, xc, ye );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the number of significant digits of the value of this BigNumber.\r\n         *\r\n         * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n         */\r\n        P.precision = P.sd = function (z) {\r\n            var n, v,\r\n                x = this,\r\n                c = x.c;\r\n\r\n            // 'precision() argument not a boolean or binary digit: {z}'\r\n            if ( z != null && z !== !!z && z !== 1 && z !== 0 ) {\r\n                if (ERRORS) raise( 13, 'argument' + notBool, z );\r\n                if ( z != !!z ) z = null;\r\n            }\r\n\r\n            if ( !c ) return null;\r\n            v = c.length - 1;\r\n            n = v * LOG_BASE + 1;\r\n\r\n            if ( v = c[v] ) {\r\n\r\n                // Subtract the number of trailing zeros of the last element.\r\n                for ( ; v % 10 == 0; v /= 10, n-- );\r\n\r\n                // Add the number of digits of the first element.\r\n                for ( v = c[0]; v >= 10; v /= 10, n++ );\r\n            }\r\n\r\n            if ( z && x.e + 1 > n ) n = x.e + 1;\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n         * dp decimal places using rounding mode rm, or to 0 and ROUNDING_MODE respectively if\r\n         * omitted.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'round() decimal places out of range: {dp}'\r\n         * 'round() decimal places not an integer: {dp}'\r\n         * 'round() rounding mode not an integer: {rm}'\r\n         * 'round() rounding mode out of range: {rm}'\r\n         */\r\n        P.round = function ( dp, rm ) {\r\n            var n = new BigNumber(this);\r\n\r\n            if ( dp == null || isValidInt( dp, 0, MAX, 15 ) ) {\r\n                round( n, ~~dp + this.e + 1, rm == null ||\r\n                  !isValidInt( rm, 0, 8, 15, roundingMode ) ? ROUNDING_MODE : rm | 0 );\r\n            }\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n         * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n         *\r\n         * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n         *\r\n         * If k is out of range and ERRORS is false, the result will be ±0 if k < 0, or ±Infinity\r\n         * otherwise.\r\n         *\r\n         * 'shift() argument not an integer: {k}'\r\n         * 'shift() argument out of range: {k}'\r\n         */\r\n        P.shift = function (k) {\r\n            var n = this;\r\n            return isValidInt( k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 16, 'argument' )\r\n\r\n              // k < 1e+21, or truncate(k) will produce exponential notation.\r\n              ? n.times( '1e' + truncate(k) )\r\n              : new BigNumber( n.c && n.c[0] && ( k < -MAX_SAFE_INTEGER || k > MAX_SAFE_INTEGER )\r\n                ? n.s * ( k < 0 ? 0 : 1 / 0 )\r\n                : n );\r\n        };\r\n\r\n\r\n        /*\r\n         *  sqrt(-n) =  N\r\n         *  sqrt( N) =  N\r\n         *  sqrt(-I) =  N\r\n         *  sqrt( I) =  I\r\n         *  sqrt( 0) =  0\r\n         *  sqrt(-0) = -0\r\n         *\r\n         * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n         * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         */\r\n        P.squareRoot = P.sqrt = function () {\r\n            var m, n, r, rep, t,\r\n                x = this,\r\n                c = x.c,\r\n                s = x.s,\r\n                e = x.e,\r\n                dp = DECIMAL_PLACES + 4,\r\n                half = new BigNumber('0.5');\r\n\r\n            // Negative/NaN/Infinity/zero?\r\n            if ( s !== 1 || !c || !c[0] ) {\r\n                return new BigNumber( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );\r\n            }\r\n\r\n            // Initial estimate.\r\n            s = Math.sqrt( +x );\r\n\r\n            // Math.sqrt underflow/overflow?\r\n            // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n            if ( s == 0 || s == 1 / 0 ) {\r\n                n = coeffToString(c);\r\n                if ( ( n.length + e ) % 2 == 0 ) n += '0';\r\n                s = Math.sqrt(n);\r\n                e = bitFloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );\r\n\r\n                if ( s == 1 / 0 ) {\r\n                    n = '1e' + e;\r\n                } else {\r\n                    n = s.toExponential();\r\n                    n = n.slice( 0, n.indexOf('e') + 1 ) + e;\r\n                }\r\n\r\n                r = new BigNumber(n);\r\n            } else {\r\n                r = new BigNumber( s + '' );\r\n            }\r\n\r\n            // Check for zero.\r\n            // r could be zero if MIN_EXP is changed after the this value was created.\r\n            // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n            // coeffToString to throw.\r\n            if ( r.c[0] ) {\r\n                e = r.e;\r\n                s = e + dp;\r\n                if ( s < 3 ) s = 0;\r\n\r\n                // Newton-Raphson iteration.\r\n                for ( ; ; ) {\r\n                    t = r;\r\n                    r = half.times( t.plus( div( x, t, dp, 1 ) ) );\r\n\r\n                    if ( coeffToString( t.c   ).slice( 0, s ) === ( n =\r\n                         coeffToString( r.c ) ).slice( 0, s ) ) {\r\n\r\n                        // The exponent of r may here be one less than the final result exponent,\r\n                        // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n                        // are indexed correctly.\r\n                        if ( r.e < e ) --s;\r\n                        n = n.slice( s - 3, s + 1 );\r\n\r\n                        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n                        // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n                        // iteration.\r\n                        if ( n == '9999' || !rep && n == '4999' ) {\r\n\r\n                            // On the first iteration only, check to see if rounding up gives the\r\n                            // exact result as the nines may infinitely repeat.\r\n                            if ( !rep ) {\r\n                                round( t, t.e + DECIMAL_PLACES + 2, 0 );\r\n\r\n                                if ( t.times(t).eq(x) ) {\r\n                                    r = t;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            dp += 4;\r\n                            s += 4;\r\n                            rep = 1;\r\n                        } else {\r\n\r\n                            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n                            // result. If not, then there are further digits and m will be truthy.\r\n                            if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {\r\n\r\n                                // Truncate to the first rounding digit.\r\n                                round( r, r.e + DECIMAL_PLACES + 2, 1 );\r\n                                m = !r.times(r).eq(x);\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return round( r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m );\r\n        };\r\n\r\n\r\n        /*\r\n         *  n * 0 = 0\r\n         *  n * N = N\r\n         *  n * I = I\r\n         *  0 * n = 0\r\n         *  0 * 0 = 0\r\n         *  0 * N = N\r\n         *  0 * I = N\r\n         *  N * n = N\r\n         *  N * 0 = N\r\n         *  N * N = N\r\n         *  N * I = N\r\n         *  I * n = I\r\n         *  I * 0 = N\r\n         *  I * N = N\r\n         *  I * I = I\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber times the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.times = P.mul = function ( y, b ) {\r\n            var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n                base, sqrtBase,\r\n                x = this,\r\n                xc = x.c,\r\n                yc = ( id = 17, y = new BigNumber( y, b ) ).c;\r\n\r\n            // Either NaN, ±Infinity or ±0?\r\n            if ( !xc || !yc || !xc[0] || !yc[0] ) {\r\n\r\n                // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n                if ( !x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc ) {\r\n                    y.c = y.e = y.s = null;\r\n                } else {\r\n                    y.s *= x.s;\r\n\r\n                    // Return ±Infinity if either is ±Infinity.\r\n                    if ( !xc || !yc ) {\r\n                        y.c = y.e = null;\r\n\r\n                    // Return ±0 if either is ±0.\r\n                    } else {\r\n                        y.c = [0];\r\n                        y.e = 0;\r\n                    }\r\n                }\r\n\r\n                return y;\r\n            }\r\n\r\n            e = bitFloor( x.e / LOG_BASE ) + bitFloor( y.e / LOG_BASE );\r\n            y.s *= x.s;\r\n            xcL = xc.length;\r\n            ycL = yc.length;\r\n\r\n            // Ensure xc points to longer array and xcL to its length.\r\n            if ( xcL < ycL ) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n            // Initialise the result array with zeros.\r\n            for ( i = xcL + ycL, zc = []; i--; zc.push(0) );\r\n\r\n            base = BASE;\r\n            sqrtBase = SQRT_BASE;\r\n\r\n            for ( i = ycL; --i >= 0; ) {\r\n                c = 0;\r\n                ylo = yc[i] % sqrtBase;\r\n                yhi = yc[i] / sqrtBase | 0;\r\n\r\n                for ( k = xcL, j = i + k; j > i; ) {\r\n                    xlo = xc[--k] % sqrtBase;\r\n                    xhi = xc[k] / sqrtBase | 0;\r\n                    m = yhi * xlo + xhi * ylo;\r\n                    xlo = ylo * xlo + ( ( m % sqrtBase ) * sqrtBase ) + zc[j] + c;\r\n                    c = ( xlo / base | 0 ) + ( m / sqrtBase | 0 ) + yhi * xhi;\r\n                    zc[j--] = xlo % base;\r\n                }\r\n\r\n                zc[j] = c;\r\n            }\r\n\r\n            if (c) {\r\n                ++e;\r\n            } else {\r\n                zc.splice(0, 1);\r\n            }\r\n\r\n            return normalise( y, zc, e );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n         * sd significant digits using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n         *\r\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toDigits() precision out of range: {sd}'\r\n         * 'toDigits() precision not an integer: {sd}'\r\n         * 'toDigits() rounding mode not an integer: {rm}'\r\n         * 'toDigits() rounding mode out of range: {rm}'\r\n         */\r\n        P.toDigits = function ( sd, rm ) {\r\n            var n = new BigNumber(this);\r\n            sd = sd == null || !isValidInt( sd, 1, MAX, 18, 'precision' ) ? null : sd | 0;\r\n            rm = rm == null || !isValidInt( rm, 0, 8, 18, roundingMode ) ? ROUNDING_MODE : rm | 0;\r\n            return sd ? round( n, sd, rm ) : n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in exponential notation and\r\n         * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toExponential() decimal places not an integer: {dp}'\r\n         * 'toExponential() decimal places out of range: {dp}'\r\n         * 'toExponential() rounding mode not an integer: {rm}'\r\n         * 'toExponential() rounding mode out of range: {rm}'\r\n         */\r\n        P.toExponential = function ( dp, rm ) {\r\n            return format( this,\r\n              dp != null && isValidInt( dp, 0, MAX, 19 ) ? ~~dp + 1 : null, rm, 19 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n         * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n         *\r\n         * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n         * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toFixed() decimal places not an integer: {dp}'\r\n         * 'toFixed() decimal places out of range: {dp}'\r\n         * 'toFixed() rounding mode not an integer: {rm}'\r\n         * 'toFixed() rounding mode out of range: {rm}'\r\n         */\r\n        P.toFixed = function ( dp, rm ) {\r\n            return format( this, dp != null && isValidInt( dp, 0, MAX, 20 )\r\n              ? ~~dp + this.e + 1 : null, rm, 20 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n         * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n         * of the FORMAT object (see BigNumber.config).\r\n         *\r\n         * FORMAT = {\r\n         *      decimalSeparator : '.',\r\n         *      groupSeparator : ',',\r\n         *      groupSize : 3,\r\n         *      secondaryGroupSize : 0,\r\n         *      fractionGroupSeparator : '\\xA0',    // non-breaking space\r\n         *      fractionGroupSize : 0\r\n         * };\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toFormat() decimal places not an integer: {dp}'\r\n         * 'toFormat() decimal places out of range: {dp}'\r\n         * 'toFormat() rounding mode not an integer: {rm}'\r\n         * 'toFormat() rounding mode out of range: {rm}'\r\n         */\r\n        P.toFormat = function ( dp, rm ) {\r\n            var str = format( this, dp != null && isValidInt( dp, 0, MAX, 21 )\r\n              ? ~~dp + this.e + 1 : null, rm, 21 );\r\n\r\n            if ( this.c ) {\r\n                var i,\r\n                    arr = str.split('.'),\r\n                    g1 = +FORMAT.groupSize,\r\n                    g2 = +FORMAT.secondaryGroupSize,\r\n                    groupSeparator = FORMAT.groupSeparator,\r\n                    intPart = arr[0],\r\n                    fractionPart = arr[1],\r\n                    isNeg = this.s < 0,\r\n                    intDigits = isNeg ? intPart.slice(1) : intPart,\r\n                    len = intDigits.length;\r\n\r\n                if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n                if ( g1 > 0 && len > 0 ) {\r\n                    i = len % g1 || g1;\r\n                    intPart = intDigits.substr( 0, i );\r\n\r\n                    for ( ; i < len; i += g1 ) {\r\n                        intPart += groupSeparator + intDigits.substr( i, g1 );\r\n                    }\r\n\r\n                    if ( g2 > 0 ) intPart += groupSeparator + intDigits.slice(i);\r\n                    if (isNeg) intPart = '-' + intPart;\r\n                }\r\n\r\n                str = fractionPart\r\n                  ? intPart + FORMAT.decimalSeparator + ( ( g2 = +FORMAT.fractionGroupSize )\r\n                    ? fractionPart.replace( new RegExp( '\\\\d{' + g2 + '}\\\\B', 'g' ),\r\n                      '$&' + FORMAT.fractionGroupSeparator )\r\n                    : fractionPart )\r\n                  : intPart;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string array representing the value of this BigNumber as a simple fraction with\r\n         * an integer numerator and an integer denominator. The denominator will be a positive\r\n         * non-zero value less than or equal to the specified maximum denominator. If a maximum\r\n         * denominator is not specified, the denominator will be the lowest value necessary to\r\n         * represent the number exactly.\r\n         *\r\n         * [md] {number|string|BigNumber} Integer >= 1 and < Infinity. The maximum denominator.\r\n         *\r\n         * 'toFraction() max denominator not an integer: {md}'\r\n         * 'toFraction() max denominator out of range: {md}'\r\n         */\r\n        P.toFraction = function (md) {\r\n            var arr, d0, d2, e, exp, n, n0, q, s,\r\n                k = ERRORS,\r\n                x = this,\r\n                xc = x.c,\r\n                d = new BigNumber(ONE),\r\n                n1 = d0 = new BigNumber(ONE),\r\n                d1 = n0 = new BigNumber(ONE);\r\n\r\n            if ( md != null ) {\r\n                ERRORS = false;\r\n                n = new BigNumber(md);\r\n                ERRORS = k;\r\n\r\n                if ( !( k = n.isInt() ) || n.lt(ONE) ) {\r\n\r\n                    if (ERRORS) {\r\n                        raise( 22,\r\n                          'max denominator ' + ( k ? 'out of range' : 'not an integer' ), md );\r\n                    }\r\n\r\n                    // ERRORS is false:\r\n                    // If md is a finite non-integer >= 1, round it to an integer and use it.\r\n                    md = !k && n.c && round( n, n.e + 1, 1 ).gte(ONE) ? n : null;\r\n                }\r\n            }\r\n\r\n            if ( !xc ) return x.toString();\r\n            s = coeffToString(xc);\r\n\r\n            // Determine initial denominator.\r\n            // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n            e = d.e = s.length - x.e - 1;\r\n            d.c[0] = POWS_TEN[ ( exp = e % LOG_BASE ) < 0 ? LOG_BASE + exp : exp ];\r\n            md = !md || n.cmp(d) > 0 ? ( e > 0 ? d : n1 ) : n;\r\n\r\n            exp = MAX_EXP;\r\n            MAX_EXP = 1 / 0;\r\n            n = new BigNumber(s);\r\n\r\n            // n0 = d1 = 0\r\n            n0.c[0] = 0;\r\n\r\n            for ( ; ; )  {\r\n                q = div( n, d, 0, 1 );\r\n                d2 = d0.plus( q.times(d1) );\r\n                if ( d2.cmp(md) == 1 ) break;\r\n                d0 = d1;\r\n                d1 = d2;\r\n                n1 = n0.plus( q.times( d2 = n1 ) );\r\n                n0 = d2;\r\n                d = n.minus( q.times( d2 = d ) );\r\n                n = d2;\r\n            }\r\n\r\n            d2 = div( md.minus(d0), d1, 0, 1 );\r\n            n0 = n0.plus( d2.times(n1) );\r\n            d0 = d0.plus( d2.times(d1) );\r\n            n0.s = n1.s = x.s;\r\n            e *= 2;\r\n\r\n            // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n            arr = div( n1, d1, e, ROUNDING_MODE ).minus(x).abs().cmp(\r\n                  div( n0, d0, e, ROUNDING_MODE ).minus(x).abs() ) < 1\r\n                    ? [ n1.toString(), d1.toString() ]\r\n                    : [ n0.toString(), d0.toString() ];\r\n\r\n            MAX_EXP = exp;\r\n            return arr;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the value of this BigNumber converted to a number primitive.\r\n         */\r\n        P.toNumber = function () {\r\n            return +this;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a BigNumber whose value is the value of this BigNumber raised to the power n.\r\n         * If m is present, return the result modulo m.\r\n         * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using\r\n         * ROUNDING_MODE.\r\n         *\r\n         * The modular power operation works efficiently when x, n, and m are positive integers,\r\n         * otherwise it is equivalent to calculating x.toPower(n).modulo(m) (with POW_PRECISION 0).\r\n         *\r\n         * n {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n         * [m] {number|string|BigNumber} The modulus.\r\n         *\r\n         * 'pow() exponent not an integer: {n}'\r\n         * 'pow() exponent out of range: {n}'\r\n         *\r\n         * Performs 54 loop iterations for n of 9007199254740991.\r\n         */\r\n        P.toPower = P.pow = function ( n, m ) {\r\n            var k, y, z,\r\n                i = mathfloor( n < 0 ? -n : +n ),\r\n                x = this;\r\n\r\n            if ( m != null ) {\r\n                id = 23;\r\n                m = new BigNumber(m);\r\n            }\r\n\r\n            // Pass ±Infinity to Math.pow if exponent is out of range.\r\n            if ( !isValidInt( n, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 23, 'exponent' ) &&\r\n              ( !isFinite(n) || i > MAX_SAFE_INTEGER && ( n /= 0 ) ||\r\n                parseFloat(n) != n && !( n = NaN ) ) || n == 0 ) {\r\n                k = Math.pow( +x, n );\r\n                return new BigNumber( m ? k % m : k );\r\n            }\r\n\r\n            if (m) {\r\n                if ( n > 1 && x.gt(ONE) && x.isInt() && m.gt(ONE) && m.isInt() ) {\r\n                    x = x.mod(m);\r\n                } else {\r\n                    z = m;\r\n\r\n                    // Nullify m so only a single mod operation is performed at the end.\r\n                    m = null;\r\n                }\r\n            } else if (POW_PRECISION) {\r\n\r\n                // Truncating each coefficient array to a length of k after each multiplication\r\n                // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n                // i.e. there will be a minimum of 28 guard digits retained.\r\n                // (Using + 1.5 would give [9, 21] guard digits.)\r\n                k = mathceil( POW_PRECISION / LOG_BASE + 2 );\r\n            }\r\n\r\n            y = new BigNumber(ONE);\r\n\r\n            for ( ; ; ) {\r\n                if ( i % 2 ) {\r\n                    y = y.times(x);\r\n                    if ( !y.c ) break;\r\n                    if (k) {\r\n                        if ( y.c.length > k ) y.c.length = k;\r\n                    } else if (m) {\r\n                        y = y.mod(m);\r\n                    }\r\n                }\r\n\r\n                i = mathfloor( i / 2 );\r\n                if ( !i ) break;\r\n                x = x.times(x);\r\n                if (k) {\r\n                    if ( x.c && x.c.length > k ) x.c.length = k;\r\n                } else if (m) {\r\n                    x = x.mod(m);\r\n                }\r\n            }\r\n\r\n            if (m) return y;\r\n            if ( n < 0 ) y = ONE.div(y);\r\n\r\n            return z ? y.mod(z) : k ? round( y, POW_PRECISION, ROUNDING_MODE ) : y;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n         * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n         * necessary to represent the integer part of the value in fixed-point notation, then use\r\n         * exponential notation.\r\n         *\r\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toPrecision() precision not an integer: {sd}'\r\n         * 'toPrecision() precision out of range: {sd}'\r\n         * 'toPrecision() rounding mode not an integer: {rm}'\r\n         * 'toPrecision() rounding mode out of range: {rm}'\r\n         */\r\n        P.toPrecision = function ( sd, rm ) {\r\n            return format( this, sd != null && isValidInt( sd, 1, MAX, 24, 'precision' )\r\n              ? sd | 0 : null, rm, 24 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n         * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n         * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n         * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n         * TO_EXP_NEG, return exponential notation.\r\n         *\r\n         * [b] {number} Integer, 2 to 64 inclusive.\r\n         *\r\n         * 'toString() base not an integer: {b}'\r\n         * 'toString() base out of range: {b}'\r\n         */\r\n        P.toString = function (b) {\r\n            var str,\r\n                n = this,\r\n                s = n.s,\r\n                e = n.e;\r\n\r\n            // Infinity or NaN?\r\n            if ( e === null ) {\r\n\r\n                if (s) {\r\n                    str = 'Infinity';\r\n                    if ( s < 0 ) str = '-' + str;\r\n                } else {\r\n                    str = 'NaN';\r\n                }\r\n            } else {\r\n                str = coeffToString( n.c );\r\n\r\n                if ( b == null || !isValidInt( b, 2, 64, 25, 'base' ) ) {\r\n                    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n                      ? toExponential( str, e )\r\n                      : toFixedPoint( str, e );\r\n                } else {\r\n                    str = convertBase( toFixedPoint( str, e ), b | 0, 10, s );\r\n                }\r\n\r\n                if ( s < 0 && n.c[0] ) str = '-' + str;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber truncated to a whole\r\n         * number.\r\n         */\r\n        P.truncated = P.trunc = function () {\r\n            return round( new BigNumber(this), this.e + 1, 1 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return as toString, but do not accept a base argument, and include the minus sign for\r\n         * negative zero.\r\n         */\r\n        P.valueOf = P.toJSON = function () {\r\n            var str,\r\n                n = this,\r\n                e = n.e;\r\n\r\n            if ( e === null ) return n.toString();\r\n\r\n            str = coeffToString( n.c );\r\n\r\n            str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n                ? toExponential( str, e )\r\n                : toFixedPoint( str, e );\r\n\r\n            return n.s < 0 ? '-' + str : str;\r\n        };\r\n\r\n\r\n        P.isBigNumber = true;\r\n\r\n        if ( config != null ) BigNumber.config(config);\r\n\r\n        return BigNumber;\r\n    }\r\n\r\n\r\n    // PRIVATE HELPER FUNCTIONS\r\n\r\n\r\n    function bitFloor(n) {\r\n        var i = n | 0;\r\n        return n > 0 || n === i ? i : i - 1;\r\n    }\r\n\r\n\r\n    // Return a coefficient array as a string of base 10 digits.\r\n    function coeffToString(a) {\r\n        var s, z,\r\n            i = 1,\r\n            j = a.length,\r\n            r = a[0] + '';\r\n\r\n        for ( ; i < j; ) {\r\n            s = a[i++] + '';\r\n            z = LOG_BASE - s.length;\r\n            for ( ; z--; s = '0' + s );\r\n            r += s;\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for ( j = r.length; r.charCodeAt(--j) === 48; );\r\n        return r.slice( 0, j + 1 || 1 );\r\n    }\r\n\r\n\r\n    // Compare the value of BigNumbers x and y.\r\n    function compare( x, y ) {\r\n        var a, b,\r\n            xc = x.c,\r\n            yc = y.c,\r\n            i = x.s,\r\n            j = y.s,\r\n            k = x.e,\r\n            l = y.e;\r\n\r\n        // Either NaN?\r\n        if ( !i || !j ) return null;\r\n\r\n        a = xc && !xc[0];\r\n        b = yc && !yc[0];\r\n\r\n        // Either zero?\r\n        if ( a || b ) return a ? b ? 0 : -j : i;\r\n\r\n        // Signs differ?\r\n        if ( i != j ) return i;\r\n\r\n        a = i < 0;\r\n        b = k == l;\r\n\r\n        // Either Infinity?\r\n        if ( !xc || !yc ) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n        // Compare exponents.\r\n        if ( !b ) return k > l ^ a ? 1 : -1;\r\n\r\n        j = ( k = xc.length ) < ( l = yc.length ) ? k : l;\r\n\r\n        // Compare digit by digit.\r\n        for ( i = 0; i < j; i++ ) if ( xc[i] != yc[i] ) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n        // Compare lengths.\r\n        return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n    }\r\n\r\n\r\n    /*\r\n     * Return true if n is a valid number in range, otherwise false.\r\n     * Use for argument validation when ERRORS is false.\r\n     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.\r\n     */\r\n    function intValidatorNoErrors( n, min, max ) {\r\n        return ( n = truncate(n) ) >= min && n <= max;\r\n    }\r\n\r\n\r\n    function isArray(obj) {\r\n        return Object.prototype.toString.call(obj) == '[object Array]';\r\n    }\r\n\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. convertBase('255', 10, 16) returns [15, 15].\r\n     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut( str, baseIn, baseOut ) {\r\n        var j,\r\n            arr = [0],\r\n            arrL,\r\n            i = 0,\r\n            len = str.length;\r\n\r\n        for ( ; i < len; ) {\r\n            for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );\r\n            arr[ j = 0 ] += ALPHABET.indexOf( str.charAt( i++ ) );\r\n\r\n            for ( ; j < arr.length; j++ ) {\r\n\r\n                if ( arr[j] > baseOut - 1 ) {\r\n                    if ( arr[j + 1] == null ) arr[j + 1] = 0;\r\n                    arr[j + 1] += arr[j] / baseOut | 0;\r\n                    arr[j] %= baseOut;\r\n                }\r\n            }\r\n        }\r\n\r\n        return arr.reverse();\r\n    }\r\n\r\n\r\n    function toExponential( str, e ) {\r\n        return ( str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str ) +\r\n          ( e < 0 ? 'e' : 'e+' ) + e;\r\n    }\r\n\r\n\r\n    function toFixedPoint( str, e ) {\r\n        var len, z;\r\n\r\n        // Negative exponent?\r\n        if ( e < 0 ) {\r\n\r\n            // Prepend zeros.\r\n            for ( z = '0.'; ++e; z += '0' );\r\n            str = z + str;\r\n\r\n        // Positive exponent\r\n        } else {\r\n            len = str.length;\r\n\r\n            // Append zeros.\r\n            if ( ++e > len ) {\r\n                for ( z = '0', e -= len; --e; z += '0' );\r\n                str += z;\r\n            } else if ( e < len ) {\r\n                str = str.slice( 0, e ) + '.' + str.slice(e);\r\n            }\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n\r\n    function truncate(n) {\r\n        n = parseFloat(n);\r\n        return n < 0 ? mathceil(n) : mathfloor(n);\r\n    }\r\n\r\n\r\n    // EXPORT\r\n\r\n\r\n    BigNumber = constructorFactory();\r\n    BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n\r\n    // AMD.\r\n    if ( true ) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return BigNumber; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n    // Node.js and other environments that support module.exports.\r\n    } else if ( typeof module != 'undefined' && module.exports ) {\r\n        module.exports = BigNumber;\r\n\r\n    // Browser.\r\n    } else {\r\n        if ( !globalObj ) globalObj = typeof self != 'undefined' ? self : Function('return this')();\r\n        globalObj.BigNumber = BigNumber;\r\n    }\r\n})(this);\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bignumber.js/bignumber.js\n// module id = 7\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/bignumber.js/bignumber.js?");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bignumber_js_1 = __webpack_require__(7);\nconst common = __webpack_require__(0);\nexports.common = common;\nconst txFlags = common.txFlags;\nconst errors_1 = __webpack_require__(29);\nfunction formatPrepareResponse(txJSON) {\n    const instructions = {\n        fee: common.dropsToXrp(txJSON.Fee),\n        sequence: txJSON.Sequence,\n        maxLedgerVersion: txJSON.LastLedgerSequence === undefined ?\n            null : txJSON.LastLedgerSequence\n    };\n    return {\n        txJSON: JSON.stringify(txJSON),\n        instructions\n    };\n}\nfunction setCanonicalFlag(txJSON) {\n    txJSON.Flags |= txFlags.Universal.FullyCanonicalSig;\n    // JavaScript converts operands to 32-bit signed ints before doing bitwise\n    // operations. We need to convert it back to an unsigned int.\n    txJSON.Flags = txJSON.Flags >>> 0;\n}\nfunction scaleValue(value, multiplier, extra = 0) {\n    return (new bignumber_js_1.default(value)).times(multiplier).plus(extra).toString();\n}\nfunction prepareTransaction(txJSON, api, instructions) {\n    common.validate.instructions(instructions);\n    const account = txJSON.Account;\n    setCanonicalFlag(txJSON);\n    function prepareMaxLedgerVersion() {\n        if (instructions.maxLedgerVersion !== undefined) {\n            if (instructions.maxLedgerVersion !== null) {\n                txJSON.LastLedgerSequence = instructions.maxLedgerVersion;\n            }\n            return Promise.resolve(txJSON);\n        }\n        const offset = instructions.maxLedgerVersionOffset !== undefined ?\n            instructions.maxLedgerVersionOffset : 3;\n        return api.connection.getLedgerVersion().then(ledgerVersion => {\n            txJSON.LastLedgerSequence = ledgerVersion + offset;\n            return txJSON;\n        });\n    }\n    function prepareFee() {\n        const multiplier = instructions.signersCount === undefined ? 1 :\n            instructions.signersCount + 1;\n        if (instructions.fee !== undefined) {\n            const fee = new bignumber_js_1.default(instructions.fee);\n            if (fee.greaterThan(api._maxFeeXRP)) {\n                const errorMessage = `Fee of ${fee.toString(10)} XRP exceeds ` +\n                    `max of ${api._maxFeeXRP} XRP. To use this fee, increase ` +\n                    '`maxFeeXRP` in the RippleAPI constructor.';\n                throw new errors_1.ValidationError(errorMessage);\n            }\n            txJSON.Fee = scaleValue(common.xrpToDrops(instructions.fee), multiplier);\n            return Promise.resolve(txJSON);\n        }\n        const cushion = api._feeCushion;\n        return api.getFee(cushion).then(fee => {\n            return api.connection.getFeeRef().then(feeRef => {\n                const extraFee = (txJSON.TransactionType !== 'EscrowFinish' ||\n                    txJSON.Fulfillment === undefined) ? 0 :\n                    (cushion * feeRef * (32 + Math.floor(new Buffer(txJSON.Fulfillment, 'hex').length / 16)));\n                const feeDrops = common.xrpToDrops(fee);\n                const maxFeeXRP = instructions.maxFee ?\n                    bignumber_js_1.default.min(api._maxFeeXRP, instructions.maxFee) : api._maxFeeXRP;\n                const maxFeeDrops = common.xrpToDrops(maxFeeXRP);\n                const normalFee = scaleValue(feeDrops, multiplier, extraFee);\n                txJSON.Fee = bignumber_js_1.default.min(normalFee, maxFeeDrops).toString(10);\n                return txJSON;\n            });\n        });\n    }\n    function prepareSequence() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (instructions.sequence !== undefined) {\n                txJSON.Sequence = instructions.sequence;\n                return Promise.resolve(txJSON);\n            }\n            const response = yield api.request('account_info', {\n                account: account\n            });\n            txJSON.Sequence = response.account_data.Sequence;\n            return txJSON;\n        });\n    }\n    return Promise.all([\n        prepareMaxLedgerVersion(),\n        prepareFee(),\n        prepareSequence()\n    ]).then(() => formatPrepareResponse(txJSON));\n}\nexports.prepareTransaction = prepareTransaction;\nfunction convertStringToHex(string) {\n    return new Buffer(string, 'utf8').toString('hex').toUpperCase();\n}\nexports.convertStringToHex = convertStringToHex;\nfunction convertMemo(memo) {\n    return {\n        Memo: common.removeUndefined({\n            MemoData: memo.data ? convertStringToHex(memo.data) : undefined,\n            MemoType: memo.type ? convertStringToHex(memo.type) : undefined,\n            MemoFormat: memo.format ? convertStringToHex(memo.format) : undefined\n        })\n    };\n}\nexports.convertMemo = convertMemo;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/utils.ts\n// module id = 8\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/utils.ts?");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst transactionParser = __webpack_require__(293);\nconst bignumber_js_1 = __webpack_require__(7);\nconst common = __webpack_require__(0);\nconst amount_1 = __webpack_require__(14);\nfunction adjustQualityForXRP(quality, takerGetsCurrency, takerPaysCurrency) {\n    // quality = takerPays.value/takerGets.value\n    // using drops (1e-6 XRP) for XRP values\n    const numeratorShift = (takerPaysCurrency === 'XRP' ? -6 : 0);\n    const denominatorShift = (takerGetsCurrency === 'XRP' ? -6 : 0);\n    const shift = numeratorShift - denominatorShift;\n    return shift === 0 ? quality :\n        (new bignumber_js_1.default(quality)).shift(shift).toString();\n}\nexports.adjustQualityForXRP = adjustQualityForXRP;\nfunction parseQuality(quality) {\n    if (typeof quality !== 'number') {\n        return undefined;\n    }\n    return (new bignumber_js_1.default(quality)).shift(-9).toNumber();\n}\nexports.parseQuality = parseQuality;\nfunction parseTimestamp(rippleTime) {\n    if (typeof rippleTime !== 'number') {\n        return undefined;\n    }\n    return common.rippleTimeToISO8601(rippleTime);\n}\nexports.parseTimestamp = parseTimestamp;\nfunction removeEmptyCounterparty(amount) {\n    if (amount.counterparty === '') {\n        delete amount.counterparty;\n    }\n}\nfunction removeEmptyCounterpartyInBalanceChanges(balanceChanges) {\n    _.forEach(balanceChanges, changes => {\n        _.forEach(changes, removeEmptyCounterparty);\n    });\n}\nfunction removeEmptyCounterpartyInOrderbookChanges(orderbookChanges) {\n    _.forEach(orderbookChanges, changes => {\n        _.forEach(changes, change => {\n            _.forEach(change, removeEmptyCounterparty);\n        });\n    });\n}\nfunction isPartialPayment(tx) {\n    return (tx.Flags & common.txFlags.Payment.PartialPayment) !== 0;\n}\nexports.isPartialPayment = isPartialPayment;\nfunction parseDeliveredAmount(tx) {\n    if (tx.TransactionType !== 'Payment' ||\n        tx.meta.TransactionResult !== 'tesSUCCESS') {\n        return undefined;\n    }\n    if (tx.meta.delivered_amount &&\n        tx.meta.delivered_amount === 'unavailable') {\n        return undefined;\n    }\n    // parsable delivered_amount\n    if (tx.meta.delivered_amount) {\n        return amount_1.default(tx.meta.delivered_amount);\n    }\n    // DeliveredAmount only present on partial payments\n    if (tx.meta.DeliveredAmount) {\n        return amount_1.default(tx.meta.DeliveredAmount);\n    }\n    // no partial payment flag, use tx.Amount\n    if (tx.Amount && !isPartialPayment(tx)) {\n        return amount_1.default(tx.Amount);\n    }\n    // DeliveredAmount field was introduced at\n    // ledger 4594095 - after that point its absence\n    // on a tx flagged as partial payment indicates\n    // the full amount was transferred. The amount\n    // transferred with a partial payment before\n    // that date must be derived from metadata.\n    if (tx.Amount && tx.ledger_index > 4594094) {\n        return amount_1.default(tx.Amount);\n    }\n    return undefined;\n}\nfunction parseOutcome(tx) {\n    const metadata = tx.meta || tx.metaData;\n    if (!metadata) {\n        return undefined;\n    }\n    const balanceChanges = transactionParser.parseBalanceChanges(metadata);\n    const orderbookChanges = transactionParser.parseOrderbookChanges(metadata);\n    const channelChanges = transactionParser.parseChannelChanges(metadata);\n    removeEmptyCounterpartyInBalanceChanges(balanceChanges);\n    removeEmptyCounterpartyInOrderbookChanges(orderbookChanges);\n    return common.removeUndefined({\n        result: tx.meta.TransactionResult,\n        timestamp: parseTimestamp(tx.date),\n        fee: common.dropsToXrp(tx.Fee),\n        balanceChanges: balanceChanges,\n        orderbookChanges: orderbookChanges,\n        channelChanges: channelChanges,\n        ledgerVersion: tx.ledger_index,\n        indexInLedger: tx.meta.TransactionIndex,\n        deliveredAmount: parseDeliveredAmount(tx)\n    });\n}\nexports.parseOutcome = parseOutcome;\nfunction hexToString(hex) {\n    return hex ? new Buffer(hex, 'hex').toString('utf-8') : undefined;\n}\nexports.hexToString = hexToString;\nfunction parseMemos(tx) {\n    if (!Array.isArray(tx.Memos) || tx.Memos.length === 0) {\n        return undefined;\n    }\n    return tx.Memos.map(m => {\n        return common.removeUndefined({\n            type: m.Memo.parsed_memo_type || hexToString(m.Memo.MemoType),\n            format: m.Memo.parsed_memo_format || hexToString(m.Memo.MemoFormat),\n            data: m.Memo.parsed_memo_data || hexToString(m.Memo.MemoData)\n        });\n    });\n}\nexports.parseMemos = parseMemos;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/utils.ts\n// module id = 10\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/utils.ts?");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\n\nfunction signum(a, b) {\n  return a < b ? -1 : a === b ? 0 : 1;\n}\n\nvar hexLookup = function () {\n  var res = {};\n  var reverse = res.reverse = new Array(256);\n  for (var i = 0; i < 16; i++) {\n    var char = i.toString(16).toUpperCase();\n    res[char] = i;\n\n    for (var j = 0; j < 16; j++) {\n      var char2 = j.toString(16).toUpperCase();\n      var byte = (i << 4) + j;\n      var byteHex = char + char2;\n      res[byteHex] = byte;\n      reverse[byte] = byteHex;\n    }\n  }\n  return res;\n}();\n\nvar reverseHexLookup = hexLookup.reverse;\n\nfunction bytesToHex(sequence) {\n  var buf = Array(sequence.length);\n  for (var i = sequence.length - 1; i >= 0; i--) {\n    buf[i] = reverseHexLookup[sequence[i]];\n  }\n  return buf.join('');\n}\n\nfunction byteForHex(hex) {\n  var byte = hexLookup[hex];\n  if (byte === undefined) {\n    throw new Error('`' + hex + '` is not a valid hex representation of a byte');\n  }\n  return byte;\n}\n\nfunction parseBytes(val) {var Output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Array;\n  if (!val || val.length === undefined) {\n    throw new Error(val + ' is not a sequence');\n  }\n\n  if (typeof val === 'string') {\n    var start = val.length % 2;\n    var _res = new Output((val.length + start) / 2);\n    for (var i = val.length, to = _res.length - 1; to >= start; i -= 2, to--) {\n      _res[to] = byteForHex(val.slice(i - 2, i));\n    }\n    if (start === 1) {\n      _res[0] = byteForHex(val[0]);\n    }\n    return _res;\n  } else if (val instanceof Output) {\n    return val;\n  } else if (Output === Uint8Array) {\n    return new Output(val);\n  }\n  var res = new Output(val.length);\n  for (var _i = val.length - 1; _i >= 0; _i--) {\n    res[_i] = val[_i];\n  }\n  return res;\n}\n\nfunction serializeUIntN(val, width) {\n  var newBytes = new Uint8Array(width);\n  var lastIx = width - 1;\n  for (var i = 0; i < width; i++) {\n    newBytes[lastIx - i] = val >>> i * 8 & 0xff;\n  }\n  return newBytes;\n}\n\nfunction compareBytes(a, b) {\n  assert(a.length === b.length);\n  for (var i = 0; i < a.length; i++) {\n    var cmp = signum(a[i], b[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  return 0;\n}\n\nfunction slice(val) {var startIx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;var endIx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : val.length;var Output = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : val.constructor;\n  /* eslint-disable no-param-reassign*/\n  if (startIx < 0) {\n    startIx += val.length;\n  }\n  if (endIx < 0) {\n    endIx += val.length;\n  }\n  /* eslint-enable no-param-reassign*/\n  var len = endIx - startIx;\n  var res = new Output(len);\n  for (var i = endIx - 1; i >= startIx; i--) {\n    res[i - startIx] = val[i];\n  }\n  return res;\n}\n\nmodule.exports = {\n  parseBytes: parseBytes,\n  bytesToHex: bytesToHex,\n  slice: slice,\n  compareBytes: compareBytes,\n  serializeUIntN: serializeUIntN };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/utils/bytes-utils.js\n// module id = 11\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/utils/bytes-utils.js?");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\n\nfunction signum(a, b) {\n  return a < b ? -1 : a === b ? 0 : 1;}\n\n\nvar hexLookup = function () {\n  var res = {};\n  var reverse = res.reverse = new Array(256);\n  for (var i = 0; i < 16; i++) {\n    var char = i.toString(16).toUpperCase();\n    res[char] = i;\n\n    for (var j = 0; j < 16; j++) {\n      var char2 = j.toString(16).toUpperCase();\n      var byte = (i << 4) + j;\n      var byteHex = char + char2;\n      res[byteHex] = byte;\n      reverse[byte] = byteHex;}}\n\n\n  return res;}();\n\n\nvar reverseHexLookup = hexLookup.reverse;\n\nfunction bytesToHex(sequence) {\n  var buf = Array(sequence.length);\n  for (var i = sequence.length - 1; i >= 0; i--) {\n    buf[i] = reverseHexLookup[sequence[i]];}\n\n  return buf.join('');}\n\n\nfunction byteForHex(hex) {\n  var byte = hexLookup[hex];\n  if (byte === undefined) {\n    throw new Error('`' + hex + '` is not a valid hex representation of a byte');}\n\n  return byte;}\n\n\nfunction parseBytes(val) {var Output = arguments.length <= 1 || arguments[1] === undefined ? Array : arguments[1];\n  if (!val || val.length === undefined) {\n    throw new Error(val + ' is not a sequence');}\n\n\n  if (typeof val === 'string') {\n    var start = val.length % 2;\n    var _res = new Output((val.length + start) / 2);\n    for (var i = val.length, to = _res.length - 1; to >= start; i -= 2, to--) {\n      _res[to] = byteForHex(val.slice(i - 2, i));}\n\n    if (start === 1) {\n      _res[0] = byteForHex(val[0]);}\n\n    return _res;} else \n  if (val instanceof Output) {\n    return val;} else \n  if (Output === Uint8Array) {\n    return new Output(val);}\n\n  var res = new Output(val.length);\n  for (var _i = val.length - 1; _i >= 0; _i--) {\n    res[_i] = val[_i];}\n\n  return res;}\n\n\nfunction serializeUIntN(val, width) {\n  var newBytes = new Uint8Array(width);\n  var lastIx = width - 1;\n  for (var i = 0; i < width; i++) {\n    newBytes[lastIx - i] = val >>> i * 8 & 0xff;}\n\n  return newBytes;}\n\n\nfunction compareBytes(a, b) {\n  assert(a.length === b.length);\n  for (var i = 0; i < a.length; i++) {\n    var cmp = signum(a[i], b[i]);\n    if (cmp !== 0) {\n      return cmp;}}\n\n\n  return 0;}\n\n\nfunction slice(val) {var startIx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];var endIx = arguments.length <= 2 || arguments[2] === undefined ? val.length : arguments[2];var Output = arguments.length <= 3 || arguments[3] === undefined ? val.constructor : arguments[3];\n  /* eslint-disable no-param-reassign*/\n  if (startIx < 0) {\n    startIx += val.length;}\n\n  if (endIx < 0) {\n    endIx += val.length;}\n\n  /* eslint-enable no-param-reassign*/\n  var len = endIx - startIx;\n  var res = new Output(len);\n  for (var i = endIx - 1; i >= startIx; i--) {\n    res[i - startIx] = val[i];}\n\n  return res;}\n\n\nmodule.exports = { \n  parseBytes: parseBytes, \n  bytesToHex: bytesToHex, \n  slice: slice, \n  compareBytes: compareBytes, \n  serializeUIntN: serializeUIntN };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/utils/bytes-utils.js\n// module id = 12\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/utils/bytes-utils.js?");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elliptic = exports;\n\nelliptic.version = __webpack_require__(131).version;\nelliptic.utils = __webpack_require__(132);\nelliptic.rand = __webpack_require__(78);\nelliptic.hmacDRBG = __webpack_require__(133);\nelliptic.curve = __webpack_require__(45);\nelliptic.curves = __webpack_require__(138);\n\n// Protocols\nelliptic.ec = __webpack_require__(140);\nelliptic.eddsa = __webpack_require__(143);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic.js\n// module id = 13\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic.js?");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common = __webpack_require__(0);\nfunction parseAmount(amount) {\n    if (typeof amount === 'string') {\n        return {\n            currency: 'XRP',\n            value: common.dropsToXrp(amount)\n        };\n    }\n    return {\n        currency: amount.currency,\n        value: amount.value,\n        counterparty: amount.issuer\n    };\n}\nexports.default = parseAmount;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/amount.ts\n// module id = 14\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/amount.ts?");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = __webpack_require__(318).Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(53)(module)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bn.js/lib/bn.js\n// module id = 15\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/bn.js/lib/bn.js?");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n\n'use strict';\n\n// Utils\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\n// Could use `inherits` module, but don't want to move from single file\n// architecture yet.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\n// BN\n\nfunction BN(number, base, endian) {\n  // May be `new BN(bn)` ?\n  if (number !== null &&\n      typeof number === 'object' &&\n      Array.isArray(number.words)) {\n    return number;\n  }\n\n  this.sign = false;\n  this.words = null;\n  this.length = 0;\n\n  // Reduction context\n  this.red = null;\n\n  if (base === 'le' || base === 'be') {\n    endian = base;\n    base = 10;\n  }\n\n  if (number !== null)\n    this._init(number || 0, base || 10, endian || 'be');\n}\nif (typeof module === 'object')\n  module.exports = BN;\nelse\n  exports.BN = BN;\n\nBN.BN = BN;\nBN.wordSize = 26;\n\nBN.max = function max(left, right) {\n  if (left.cmp(right) > 0)\n    return left;\n  else\n    return right;\n};\n\nBN.min = function min(left, right) {\n  if (left.cmp(right) < 0)\n    return left;\n  else\n    return right;\n};\n\nBN.prototype._init = function init(number, base, endian) {\n  if (typeof number === 'number') {\n    return this._initNumber(number, base, endian);\n  } else if (typeof number === 'object') {\n    return this._initArray(number, base, endian);\n  }\n  if (base === 'hex')\n    base = 16;\n  assert(base === (base | 0) && base >= 2 && base <= 36);\n\n  number = number.toString().replace(/\\s+/g, '');\n  var start = 0;\n  if (number[0] === '-')\n    start++;\n\n  if (base === 16)\n    this._parseHex(number, start);\n  else\n    this._parseBase(number, base, start);\n\n  if (number[0] === '-')\n    this.sign = true;\n\n  this.strip();\n\n  if (endian !== 'le')\n    return;\n\n  this._initArray(this.toArray(), base, endian);\n};\n\nBN.prototype._initNumber = function _initNumber(number, base, endian) {\n  if (number < 0) {\n    this.sign = true;\n    number = -number;\n  }\n  if (number < 0x4000000) {\n    this.words = [ number & 0x3ffffff ];\n    this.length = 1;\n  } else if (number < 0x10000000000000) {\n    this.words = [\n      number & 0x3ffffff,\n      (number / 0x4000000) & 0x3ffffff\n    ];\n    this.length = 2;\n  } else {\n    assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n    this.words = [\n      number & 0x3ffffff,\n      (number / 0x4000000) & 0x3ffffff,\n      1\n    ];\n    this.length = 3;\n  }\n\n  if (endian !== 'le')\n    return;\n\n  // Reverse the bytes\n  this._initArray(this.toArray(), base, endian);\n};\n\nBN.prototype._initArray = function _initArray(number, base, endian) {\n  // Perhaps a Uint8Array\n  assert(typeof number.length === 'number');\n  if (number.length <= 0) {\n    this.words = [ 0 ];\n    this.length = 1;\n    return this;\n  }\n\n  this.length = Math.ceil(number.length / 3);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  var off = 0;\n  if (endian === 'be') {\n    for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n      var w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  } else if (endian === 'le') {\n    for (var i = 0, j = 0; i < number.length; i += 3) {\n      var w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  }\n  return this.strip();\n};\n\nfunction parseHex(str, start, end) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r <<= 4;\n\n    // 'a' - 'f'\n    if (c >= 49 && c <= 54)\n      r |= c - 49 + 0xa;\n\n    // 'A' - 'F'\n    else if (c >= 17 && c <= 22)\n      r |= c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r |= c & 0xf;\n  }\n  return r;\n}\n\nBN.prototype._parseHex = function _parseHex(number, start) {\n  // Create possibly bigger array to ensure that it fits the number\n  this.length = Math.ceil((number.length - start) / 6);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  // Scan 24-bit chunks and add them to the number\n  var off = 0;\n  for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n    var w = parseHex(number, i, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    off += 24;\n    if (off >= 26) {\n      off -= 26;\n      j++;\n    }\n  }\n  if (i + 6 !== start) {\n    var w = parseHex(number, start, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n  }\n  this.strip();\n};\n\nfunction parseBase(str, start, end, mul) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r *= mul;\n\n    // 'a'\n    if (c >= 49)\n      r += c - 49 + 0xa;\n\n    // 'A'\n    else if (c >= 17)\n      r += c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r += c;\n  }\n  return r;\n}\n\nBN.prototype._parseBase = function _parseBase(number, base, start) {\n  // Initialize as zero\n  this.words = [ 0 ];\n  this.length = 1;\n\n  // Find length of limb in base\n  for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)\n    limbLen++;\n  limbLen--;\n  limbPow = (limbPow / base) | 0;\n\n  var total = number.length - start;\n  var mod = total % limbLen;\n  var end = Math.min(total, total - mod) + start;\n\n  var word = 0;\n  for (var i = start; i < end; i += limbLen) {\n    word = parseBase(number, i, i + limbLen, base);\n\n    this.imuln(limbPow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n\n  if (mod !== 0) {\n    var pow = 1;\n    var word = parseBase(number, i, number.length, base);\n\n    for (var i = 0; i < mod; i++)\n      pow *= base;\n    this.imuln(pow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n};\n\nBN.prototype.copy = function copy(dest) {\n  dest.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    dest.words[i] = this.words[i];\n  dest.length = this.length;\n  dest.sign = this.sign;\n  dest.red = this.red;\n};\n\nBN.prototype.clone = function clone() {\n  var r = new BN(null);\n  this.copy(r);\n  return r;\n};\n\n// Remove leading `0` from `this`\nBN.prototype.strip = function strip() {\n  while (this.length > 1 && this.words[this.length - 1] === 0)\n    this.length--;\n  return this._normSign();\n};\n\nBN.prototype._normSign = function _normSign() {\n  // -0 = 0\n  if (this.length === 1 && this.words[0] === 0)\n    this.sign = false;\n  return this;\n};\n\nBN.prototype.inspect = function inspect() {\n  return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n};\n\n/*\n\nvar zeros = [];\nvar groupSizes = [];\nvar groupBases = [];\n\nvar s = '';\nvar i = -1;\nwhile (++i < BN.wordSize) {\n  zeros[i] = s;\n  s += '0';\n}\ngroupSizes[0] = 0;\ngroupSizes[1] = 0;\ngroupBases[0] = 0;\ngroupBases[1] = 0;\nvar base = 2 - 1;\nwhile (++base < 36 + 1) {\n  var groupSize = 0;\n  var groupBase = 1;\n  while (groupBase < (1 << BN.wordSize) / base) {\n    groupBase *= base;\n    groupSize += 1;\n  }\n  groupSizes[base] = groupSize;\n  groupBases[base] = groupBase;\n}\n\n*/\n\nvar zeros = [\n  '',\n  '0',\n  '00',\n  '000',\n  '0000',\n  '00000',\n  '000000',\n  '0000000',\n  '00000000',\n  '000000000',\n  '0000000000',\n  '00000000000',\n  '000000000000',\n  '0000000000000',\n  '00000000000000',\n  '000000000000000',\n  '0000000000000000',\n  '00000000000000000',\n  '000000000000000000',\n  '0000000000000000000',\n  '00000000000000000000',\n  '000000000000000000000',\n  '0000000000000000000000',\n  '00000000000000000000000',\n  '000000000000000000000000',\n  '0000000000000000000000000'\n];\n\nvar groupSizes = [\n  0, 0,\n  25, 16, 12, 11, 10, 9, 8,\n  8, 7, 7, 7, 7, 6, 6,\n  6, 6, 6, 6, 6, 5, 5,\n  5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5\n];\n\nvar groupBases = [\n  0, 0,\n  33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n  43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n  16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n  6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n  24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n];\n\nBN.prototype.toString = function toString(base, padding) {\n  base = base || 10;\n  var padding = padding | 0 || 1;\n  if (base === 16 || base === 'hex') {\n    var out = '';\n    var off = 0;\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = this.words[i];\n      var word = (((w << off) | carry) & 0xffffff).toString(16);\n      carry = (w >>> (24 - off)) & 0xffffff;\n      if (carry !== 0 || i !== this.length - 1)\n        out = zeros[6 - word.length] + word + out;\n      else\n        out = word + out;\n      off += 2;\n      if (off >= 26) {\n        off -= 26;\n        i--;\n      }\n    }\n    if (carry !== 0)\n      out = carry.toString(16) + out;\n    while (out.length % padding !== 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else if (base === (base | 0) && base >= 2 && base <= 36) {\n    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n    var groupSize = groupSizes[base];\n    // var groupBase = Math.pow(base, groupSize);\n    var groupBase = groupBases[base];\n    var out = '';\n    var c = this.clone();\n    c.sign = false;\n    while (c.cmpn(0) !== 0) {\n      var r = c.modn(groupBase).toString(base);\n      c = c.idivn(groupBase);\n\n      if (c.cmpn(0) !== 0)\n        out = zeros[groupSize - r.length] + r + out;\n      else\n        out = r + out;\n    }\n    if (this.cmpn(0) === 0)\n      out = '0' + out;\n    while (out.length % padding !== 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else {\n    assert(false, 'Base should be between 2 and 36');\n  }\n};\n\nBN.prototype.toJSON = function toJSON() {\n  return this.toString(16);\n};\n\nBN.prototype.toArray = function toArray(endian, length) {\n  this.strip();\n  var littleEndian = endian === 'le';\n  var res = new Array(this.byteLength());\n  res[0] = 0;\n\n  var q = this.clone();\n  if (!littleEndian) {\n    // Assume big-endian\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.iushrn(8);\n\n      res[res.length - i - 1] = b;\n    }\n  } else {\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.iushrn(8);\n\n      res[i] = b;\n    }\n  }\n\n  if (length) {\n    assert(res.length <= length, 'byte array longer than desired length');\n\n    while (res.length < length) {\n      if (littleEndian)\n        res.push(0);\n      else\n        res.unshift(0);\n    }\n  }\n\n  return res;\n};\n\nif (Math.clz32) {\n  BN.prototype._countBits = function _countBits(w) {\n    return 32 - Math.clz32(w);\n  };\n} else {\n  BN.prototype._countBits = function _countBits(w) {\n    var t = w;\n    var r = 0;\n    if (t >= 0x1000) {\n      r += 13;\n      t >>>= 13;\n    }\n    if (t >= 0x40) {\n      r += 7;\n      t >>>= 7;\n    }\n    if (t >= 0x8) {\n      r += 4;\n      t >>>= 4;\n    }\n    if (t >= 0x02) {\n      r += 2;\n      t >>>= 2;\n    }\n    return r + t;\n  };\n}\n\nBN.prototype._zeroBits = function _zeroBits(w) {\n  // Short-cut\n  if (w === 0)\n    return 26;\n\n  var t = w;\n  var r = 0;\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n  if ((t & 0x1) === 0)\n    r++;\n  return r;\n};\n\n// Return number of used bits in a BN\nBN.prototype.bitLength = function bitLength() {\n  var hi = 0;\n  var w = this.words[this.length - 1];\n  var hi = this._countBits(w);\n  return (this.length - 1) * 26 + hi;\n};\n\nfunction toBitArray(num) {\n  var w = new Array(num.bitLength());\n\n  for (var bit = 0; bit < w.length; bit++) {\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n  }\n\n  return w;\n}\n\n// Number of trailing zero bits\nBN.prototype.zeroBits = function zeroBits() {\n  if (this.cmpn(0) === 0)\n    return 0;\n\n  var r = 0;\n  for (var i = 0; i < this.length; i++) {\n    var b = this._zeroBits(this.words[i]);\n    r += b;\n    if (b !== 26)\n      break;\n  }\n  return r;\n};\n\nBN.prototype.byteLength = function byteLength() {\n  return Math.ceil(this.bitLength() / 8);\n};\n\n// Return negative clone of `this`\nBN.prototype.neg = function neg() {\n  if (this.cmpn(0) === 0)\n    return this.clone();\n\n  var r = this.clone();\n  r.sign = !this.sign;\n  return r;\n};\n\n\n// Or `num` with `this` in-place\nBN.prototype.iuor = function iuor(num) {\n  while (this.length < num.length)\n    this.words[this.length++] = 0;\n\n  for (var i = 0; i < num.length; i++)\n    this.words[i] = this.words[i] | num.words[i];\n\n  return this.strip();\n};\n\nBN.prototype.ior = function ior(num) {\n  assert(!this.sign && !num.sign);\n  return this.iuor(num);\n};\n\n\n// Or `num` with `this`\nBN.prototype.or = function or(num) {\n  if (this.length > num.length)\n    return this.clone().ior(num);\n  else\n    return num.clone().ior(this);\n};\n\nBN.prototype.uor = function uor(num) {\n  if (this.length > num.length)\n    return this.clone().iuor(num);\n  else\n    return num.clone().iuor(this);\n};\n\n\n// And `num` with `this` in-place\nBN.prototype.iuand = function iuand(num) {\n  // b = min-length(num, this)\n  var b;\n  if (this.length > num.length)\n    b = num;\n  else\n    b = this;\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = this.words[i] & num.words[i];\n\n  this.length = b.length;\n\n  return this.strip();\n};\n\nBN.prototype.iand = function iand(num) {\n  assert(!this.sign && !num.sign);\n  return this.iuand(num);\n};\n\n\n// And `num` with `this`\nBN.prototype.and = function and(num) {\n  if (this.length > num.length)\n    return this.clone().iand(num);\n  else\n    return num.clone().iand(this);\n};\n\nBN.prototype.uand = function uand(num) {\n  if (this.length > num.length)\n    return this.clone().iuand(num);\n  else\n    return num.clone().iuand(this);\n};\n\n\n// Xor `num` with `this` in-place\nBN.prototype.iuxor = function iuxor(num) {\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = a.words[i] ^ b.words[i];\n\n  if (this !== a)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n\n  this.length = a.length;\n\n  return this.strip();\n};\n\nBN.prototype.ixor = function ixor(num) {\n  assert(!this.sign && !num.sign);\n  return this.iuxor(num);\n};\n\n\n// Xor `num` with `this`\nBN.prototype.xor = function xor(num) {\n  if (this.length > num.length)\n    return this.clone().ixor(num);\n  else\n    return num.clone().ixor(this);\n};\n\nBN.prototype.uxor = function uxor(num) {\n  if (this.length > num.length)\n    return this.clone().iuxor(num);\n  else\n    return num.clone().iuxor(this);\n};\n\n\n// Set `bit` of `this`\nBN.prototype.setn = function setn(bit, val) {\n  assert(typeof bit === 'number' && bit >= 0);\n\n  var off = (bit / 26) | 0;\n  var wbit = bit % 26;\n\n  while (this.length <= off)\n    this.words[this.length++] = 0;\n\n  if (val)\n    this.words[off] = this.words[off] | (1 << wbit);\n  else\n    this.words[off] = this.words[off] & ~(1 << wbit);\n\n  return this.strip();\n};\n\n\n// Add `num` to `this` in-place\nBN.prototype.iadd = function iadd(num) {\n  // negative + positive\n  if (this.sign && !num.sign) {\n    this.sign = false;\n    var r = this.isub(num);\n    this.sign = !this.sign;\n    return this._normSign();\n\n  // positive + negative\n  } else if (!this.sign && num.sign) {\n    num.sign = false;\n    var r = this.isub(num);\n    num.sign = true;\n    return r._normSign();\n  }\n\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] + b.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n\n  this.length = a.length;\n  if (carry !== 0) {\n    this.words[this.length] = carry;\n    this.length++;\n  // Copy the rest of the words\n  } else if (a !== this) {\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  }\n\n  return this;\n};\n\n// Add `num` to `this`\nBN.prototype.add = function add(num) {\n  if (num.sign && !this.sign) {\n    num.sign = false;\n    var res = this.sub(num);\n    num.sign = true;\n    return res;\n  } else if (!num.sign && this.sign) {\n    this.sign = false;\n    var res = num.sub(this);\n    this.sign = true;\n    return res;\n  }\n\n  if (this.length > num.length)\n    return this.clone().iadd(num);\n  else\n    return num.clone().iadd(this);\n};\n\n// Subtract `num` from `this` in-place\nBN.prototype.isub = function isub(num) {\n  // this - (-num) = this + num\n  if (num.sign) {\n    num.sign = false;\n    var r = this.iadd(num);\n    num.sign = true;\n    return r._normSign();\n\n  // -this - num = -(this + num)\n  } else if (this.sign) {\n    this.sign = false;\n    this.iadd(num);\n    this.sign = true;\n    return this._normSign();\n  }\n\n  // At this point both numbers are positive\n  var cmp = this.cmp(num);\n\n  // Optimization - zeroify\n  if (cmp === 0) {\n    this.sign = false;\n    this.length = 1;\n    this.words[0] = 0;\n    return this;\n  }\n\n  // a > b\n  var a;\n  var b;\n  if (cmp > 0) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] - b.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n\n  // Copy rest of the words\n  if (carry === 0 && i < a.length && a !== this)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  this.length = Math.max(this.length, i);\n\n  if (a !== this)\n    this.sign = true;\n\n  return this.strip();\n};\n\n// Subtract `num` from `this`\nBN.prototype.sub = function sub(num) {\n  return this.clone().isub(num);\n};\n\n/*\n// NOTE: This could be potentionally used to generate loop-less multiplications\nfunction _genCombMulTo(alen, blen) {\n  var len = alen + blen - 1;\n  var src = [\n    'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n        'mask = 0x3ffffff, shift = 0x4000000;',\n    'out.length = ' + len + ';'\n  ];\n  for (var k = 0; k < len; k++) {\n    var minJ = Math.max(0, k - alen + 1);\n    var maxJ = Math.min(k, blen - 1);\n\n    for (var j = minJ; j <= maxJ; j++) {\n      var i = k - j;\n      var mul = 'a[' + i + '] * b[' + j + ']';\n\n      if (j === minJ) {\n        src.push('w = ' + mul + ' + c;');\n        src.push('c = (w / shift) | 0;');\n      } else {\n        src.push('w += ' + mul + ';');\n        src.push('c += (w / shift) | 0;');\n      }\n      src.push('w &= mask;');\n    }\n    src.push('o[' + k + '] = w;');\n  }\n  src.push('if (c !== 0) {',\n           '  o[' + k + '] = c;',\n           '  out.length++;',\n           '}',\n           'return out;');\n\n  return src.join('\\n');\n}\n*/\n\nBN.prototype._smallMulTo = function _smallMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = carry >>> 26;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype._bigMulTo = function _bigMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  var hncarry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = hncarry;\n    hncarry = 0;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype.mulTo = function mulTo(num, out) {\n  var res;\n  if (this.length + num.length < 63)\n    res = this._smallMulTo(num, out);\n  else\n    res = this._bigMulTo(num, out);\n  return res;\n};\n\n// Multiply `this` by `num`\nBN.prototype.mul = function mul(num) {\n  var out = new BN(null);\n  out.words = new Array(this.length + num.length);\n  return this.mulTo(num, out);\n};\n\n// In-place Multiplication\nBN.prototype.imul = function imul(num) {\n  if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n    return this;\n  }\n\n  var tlen = this.length;\n  var nlen = num.length;\n\n  this.sign = num.sign !== this.sign;\n  this.length = this.length + num.length;\n  this.words[this.length - 1] = 0;\n\n  for (var k = this.length - 2; k >= 0; k--) {\n    // Sum all words with the same `i + j = k` and accumulate `carry`,\n    // note that carry could be >= 0x3ffffff\n    var carry = 0;\n    var rword = 0;\n    var maxJ = Math.min(k, nlen - 1);\n    for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i];\n      var b = num.words[j];\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      carry += (r / 0x4000000) | 0;\n      lo += rword;\n      rword = lo & 0x3ffffff;\n      carry += lo >>> 26;\n    }\n    this.words[k] = rword;\n    this.words[k + 1] += carry;\n    carry = 0;\n  }\n\n  // Propagate overflows\n  var carry = 0;\n  for (var i = 1; i < this.length; i++) {\n    var w = this.words[i] + carry;\n    this.words[i] = w & 0x3ffffff;\n    carry = w >>> 26;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.imuln = function imuln(num) {\n  assert(typeof num === 'number');\n\n  // Carry\n  var carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = this.words[i] * num;\n    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n    carry >>= 26;\n    carry += (w / 0x4000000) | 0;\n    // NOTE: lo is 27bit maximum\n    carry += lo >>> 26;\n    this.words[i] = lo & 0x3ffffff;\n  }\n\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n\n  return this;\n};\n\nBN.prototype.muln = function muln(num) {\n  return this.clone().imuln(num);\n};\n\n// `this` * `this`\nBN.prototype.sqr = function sqr() {\n  return this.mul(this);\n};\n\n// `this` * `this` in-place\nBN.prototype.isqr = function isqr() {\n  return this.mul(this);\n};\n\n// Math.pow(`this`, `num`)\nBN.prototype.pow = function pow(num) {\n  var w = toBitArray(num);\n  if (w.length === 0)\n    return new BN(1);\n\n  // Skip leading zeroes\n  var res = this;\n  for (var i = 0; i < w.length; i++, res = res.sqr())\n    if (w[i] !== 0)\n      break;\n\n  if (++i < w.length) {\n    for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n      if (w[i] === 0)\n        continue;\n      res = res.mul(q);\n    }\n  }\n\n  return res;\n};\n\n// Shift-left in-place\nBN.prototype.iushln = function iushln(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n  var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n\n  if (r !== 0) {\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var newCarry = this.words[i] & carryMask;\n      var c = (this.words[i] - newCarry) << r;\n      this.words[i] = c | carry;\n      carry = newCarry >>> (26 - r);\n    }\n    if (carry) {\n      this.words[i] = carry;\n      this.length++;\n    }\n  }\n\n  if (s !== 0) {\n    for (var i = this.length - 1; i >= 0; i--)\n      this.words[i + s] = this.words[i];\n    for (var i = 0; i < s; i++)\n      this.words[i] = 0;\n    this.length += s;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.ishln = function ishln(bits) {\n  // TODO(indutny): implement me\n  assert(!this.sign);\n  return this.iushln(bits);\n};\n\n// Shift-right in-place\n// NOTE: `hint` is a lowest bit before trailing zeroes\n// NOTE: if `extended` is present - it will be filled with destroyed bits\nBN.prototype.iushrn = function iushrn(bits, hint, extended) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var h;\n  if (hint)\n    h = (hint - (hint % 26)) / 26;\n  else\n    h = 0;\n\n  var r = bits % 26;\n  var s = Math.min((bits - r) / 26, this.length);\n  var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n  var maskedWords = extended;\n\n  h -= s;\n  h = Math.max(0, h);\n\n  // Extended mode, copy masked part\n  if (maskedWords) {\n    for (var i = 0; i < s; i++)\n      maskedWords.words[i] = this.words[i];\n    maskedWords.length = s;\n  }\n\n  if (s === 0) {\n    // No-op, we should not move anything at all\n  } else if (this.length > s) {\n    this.length -= s;\n    for (var i = 0; i < this.length; i++)\n      this.words[i] = this.words[i + s];\n  } else {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n    var word = this.words[i];\n    this.words[i] = (carry << (26 - r)) | (word >>> r);\n    carry = word & mask;\n  }\n\n  // Push carried bits as a mask\n  if (maskedWords && carry !== 0)\n    maskedWords.words[maskedWords.length++] = carry;\n\n  if (this.length === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  this.strip();\n\n  return this;\n};\n\nBN.prototype.ishrn = function ishrn(bits, hint, extended) {\n  // TODO(indutny): implement me\n  assert(!this.sign);\n  return this.iushrn(bits, hint, extended);\n};\n\n// Shift-left\nBN.prototype.shln = function shln(bits) {\n  return this.clone().ishln(bits);\n};\n\nBN.prototype.ushln = function ushln(bits) {\n  return this.clone().iushln(bits);\n};\n\n// Shift-right\nBN.prototype.shrn = function shrn(bits) {\n  return this.clone().ishrn(bits);\n};\n\nBN.prototype.ushrn = function ushrn(bits) {\n  return this.clone().iushrn(bits);\n};\n\n// Test if n bit is set\nBN.prototype.testn = function testn(bit) {\n  assert(typeof bit === 'number' && bit >= 0);\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    return false;\n  }\n\n  // Check bit and return\n  var w = this.words[s];\n\n  return !!(w & q);\n};\n\n// Return only lowers bits of number (in-place)\nBN.prototype.imaskn = function imaskn(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n\n  assert(!this.sign, 'imaskn works only with positive numbers');\n\n  if (r !== 0)\n    s++;\n  this.length = Math.min(s, this.length);\n\n  if (r !== 0) {\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    this.words[this.length - 1] &= mask;\n  }\n\n  return this.strip();\n};\n\n// Return only lowers bits of number\nBN.prototype.maskn = function maskn(bits) {\n  return this.clone().imaskn(bits);\n};\n\n// Add plain number `num` to `this`\nBN.prototype.iaddn = function iaddn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.isubn(-num);\n\n  // Possible sign change\n  if (this.sign) {\n    if (this.length === 1 && this.words[0] < num) {\n      this.words[0] = num - this.words[0];\n      this.sign = false;\n      return this;\n    }\n\n    this.sign = false;\n    this.isubn(num);\n    this.sign = true;\n    return this;\n  }\n\n  // Add without checks\n  return this._iaddn(num);\n};\n\nBN.prototype._iaddn = function _iaddn(num) {\n  this.words[0] += num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n    this.words[i] -= 0x4000000;\n    if (i === this.length - 1)\n      this.words[i + 1] = 1;\n    else\n      this.words[i + 1]++;\n  }\n  this.length = Math.max(this.length, i + 1);\n\n  return this;\n};\n\n// Subtract plain number `num` from `this`\nBN.prototype.isubn = function isubn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.iaddn(-num);\n\n  if (this.sign) {\n    this.sign = false;\n    this.iaddn(num);\n    this.sign = true;\n    return this;\n  }\n\n  this.words[0] -= num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n    this.words[i] += 0x4000000;\n    this.words[i + 1] -= 1;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.addn = function addn(num) {\n  return this.clone().iaddn(num);\n};\n\nBN.prototype.subn = function subn(num) {\n  return this.clone().isubn(num);\n};\n\nBN.prototype.iabs = function iabs() {\n  this.sign = false;\n\n  return this;\n};\n\nBN.prototype.abs = function abs() {\n  return this.clone().iabs();\n};\n\nBN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n  // Bigger storage is needed\n  var len = num.length + shift;\n  var i;\n  if (this.words.length < len) {\n    var t = new Array(len);\n    for (var i = 0; i < this.length; i++)\n      t[i] = this.words[i];\n    this.words = t;\n  } else {\n    i = this.length;\n  }\n\n  // Zeroify rest\n  this.length = Math.max(this.length, len);\n  for (; i < this.length; i++)\n    this.words[i] = 0;\n\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = this.words[i + shift] + carry;\n    var right = num.words[i] * mul;\n    w -= right & 0x3ffffff;\n    carry = (w >> 26) - ((right / 0x4000000) | 0);\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n  for (; i < this.length - shift; i++) {\n    var w = this.words[i + shift] + carry;\n    carry = w >> 26;\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n\n  if (carry === 0)\n    return this.strip();\n\n  // Subtraction overflow\n  assert(carry === -1);\n  carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = -this.words[i] + carry;\n    carry = w >> 26;\n    this.words[i] = w & 0x3ffffff;\n  }\n  this.sign = true;\n\n  return this.strip();\n};\n\nBN.prototype._wordDiv = function _wordDiv(num, mode) {\n  var shift = this.length - num.length;\n\n  var a = this.clone();\n  var b = num;\n\n  // Normalize\n  var bhi = b.words[b.length - 1];\n  var bhiBits = this._countBits(bhi);\n  shift = 26 - bhiBits;\n  if (shift !== 0) {\n    b = b.ushln(shift);\n    a.iushln(shift);\n    bhi = b.words[b.length - 1];\n  }\n\n  // Initialize quotient\n  var m = a.length - b.length;\n  var q;\n\n  if (mode !== 'mod') {\n    q = new BN(null);\n    q.length = m + 1;\n    q.words = new Array(q.length);\n    for (var i = 0; i < q.length; i++)\n      q.words[i] = 0;\n  }\n\n  var diff = a.clone()._ishlnsubmul(b, 1, m);\n  if (!diff.sign) {\n    a = diff;\n    if (q)\n      q.words[m] = 1;\n  }\n\n  for (var j = m - 1; j >= 0; j--) {\n    var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];\n\n    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n    // (0x7ffffff)\n    qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n    a._ishlnsubmul(b, qj, j);\n    while (a.sign) {\n      qj--;\n      a.sign = false;\n      a._ishlnsubmul(b, 1, j);\n      if (a.cmpn(0) !== 0)\n        a.sign = !a.sign;\n    }\n    if (q)\n      q.words[j] = qj;\n  }\n  if (q)\n    q.strip();\n  a.strip();\n\n  // Denormalize\n  if (mode !== 'div' && shift !== 0)\n    a.iushrn(shift);\n  return { div: q ? q : null, mod: a };\n};\n\nBN.prototype.divmod = function divmod(num, mode, positive) {\n  assert(num.cmpn(0) !== 0);\n\n  if (this.sign && !num.sign) {\n    var res = this.neg().divmod(num, mode);\n    var div;\n    var mod;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    if (mode !== 'div') {\n      mod = res.mod.neg();\n      if (positive && mod.neg)\n        mod = mod.add(num);\n    }\n    return {\n      div: div,\n      mod: mod\n    };\n  } else if (!this.sign && num.sign) {\n    var res = this.divmod(num.neg(), mode);\n    var div;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    return { div: div, mod: res.mod };\n  } else if (this.sign && num.sign) {\n    var res = this.neg().divmod(num.neg(), mode);\n    var mod;\n    if (mode !== 'div') {\n      mod = res.mod.neg();\n      if (positive && mod.neg)\n        mod = mod.isub(num);\n    }\n    return {\n      div: res.div,\n      mod: mod\n    };\n  }\n\n  // Both numbers are positive at this point\n\n  // Strip both numbers to approximate shift value\n  if (num.length > this.length || this.cmp(num) < 0)\n    return { div: new BN(0), mod: this };\n\n  // Very short reduction\n  if (num.length === 1) {\n    if (mode === 'div')\n      return { div: this.divn(num.words[0]), mod: null };\n    else if (mode === 'mod')\n      return { div: null, mod: new BN(this.modn(num.words[0])) };\n    return {\n      div: this.divn(num.words[0]),\n      mod: new BN(this.modn(num.words[0]))\n    };\n  }\n\n  return this._wordDiv(num, mode);\n};\n\n// Find `this` / `num`\nBN.prototype.div = function div(num) {\n  return this.divmod(num, 'div', false).div;\n};\n\n// Find `this` % `num`\nBN.prototype.mod = function mod(num) {\n  return this.divmod(num, 'mod', false).mod;\n};\n\nBN.prototype.umod = function umod(num) {\n  return this.divmod(num, 'mod', true).mod;\n};\n\n// Find Round(`this` / `num`)\nBN.prototype.divRound = function divRound(num) {\n  var dm = this.divmod(num);\n\n  // Fast case - exact division\n  if (dm.mod.cmpn(0) === 0)\n    return dm.div;\n\n  var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n\n  var half = num.ushrn(1);\n  var r2 = num.andln(1);\n  var cmp = mod.cmp(half);\n\n  // Round down\n  if (cmp < 0 || r2 === 1 && cmp === 0)\n    return dm.div;\n\n  // Round up\n  return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n};\n\nBN.prototype.modn = function modn(num) {\n  assert(num <= 0x3ffffff);\n  var p = (1 << 26) % num;\n\n  var acc = 0;\n  for (var i = this.length - 1; i >= 0; i--)\n    acc = (p * acc + this.words[i]) % num;\n\n  return acc;\n};\n\n// In-place division by number\nBN.prototype.idivn = function idivn(num) {\n  assert(num <= 0x3ffffff);\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var w = this.words[i] + carry * 0x4000000;\n    this.words[i] = (w / num) | 0;\n    carry = w % num;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.divn = function divn(num) {\n  return this.clone().idivn(num);\n};\n\nBN.prototype.egcd = function egcd(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var x = this;\n  var y = p.clone();\n\n  if (x.sign)\n    x = x.umod(p);\n  else\n    x = x.clone();\n\n  // A * x + B * y = x\n  var A = new BN(1);\n  var B = new BN(0);\n\n  // C * x + D * y = y\n  var C = new BN(0);\n  var D = new BN(1);\n\n  var g = 0;\n\n  while (x.isEven() && y.isEven()) {\n    x.iushrn(1);\n    y.iushrn(1);\n    ++g;\n  }\n\n  var yp = y.clone();\n  var xp = x.clone();\n\n  while (x.cmpn(0) !== 0) {\n    while (x.isEven()) {\n      x.iushrn(1);\n      if (A.isEven() && B.isEven()) {\n        A.iushrn(1);\n        B.iushrn(1);\n      } else {\n        A.iadd(yp).iushrn(1);\n        B.isub(xp).iushrn(1);\n      }\n    }\n\n    while (y.isEven()) {\n      y.iushrn(1);\n      if (C.isEven() && D.isEven()) {\n        C.iushrn(1);\n        D.iushrn(1);\n      } else {\n        C.iadd(yp).iushrn(1);\n        D.isub(xp).iushrn(1);\n      }\n    }\n\n    if (x.cmp(y) >= 0) {\n      x.isub(y);\n      A.isub(C);\n      B.isub(D);\n    } else {\n      y.isub(x);\n      C.isub(A);\n      D.isub(B);\n    }\n  }\n\n  return {\n    a: C,\n    b: D,\n    gcd: y.iushln(g)\n  };\n};\n\n// This is reduced incarnation of the binary EEA\n// above, designated to invert members of the\n// _prime_ fields F(p) at a maximal speed\nBN.prototype._invmp = function _invmp(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var a = this;\n  var b = p.clone();\n\n  if (a.sign)\n    a = a.umod(p);\n  else\n    a = a.clone();\n\n  var x1 = new BN(1);\n  var x2 = new BN(0);\n\n  var delta = b.clone();\n\n  while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n    while (a.isEven()) {\n      a.iushrn(1);\n      if (x1.isEven())\n        x1.iushrn(1);\n      else\n        x1.iadd(delta).iushrn(1);\n    }\n    while (b.isEven()) {\n      b.iushrn(1);\n      if (x2.isEven())\n        x2.iushrn(1);\n      else\n        x2.iadd(delta).iushrn(1);\n    }\n    if (a.cmp(b) >= 0) {\n      a.isub(b);\n      x1.isub(x2);\n    } else {\n      b.isub(a);\n      x2.isub(x1);\n    }\n  }\n\n  var res;\n  if (a.cmpn(1) === 0)\n    res = x1;\n  else\n    res = x2;\n\n  if (res.cmpn(0) < 0)\n    res.iadd(p);\n\n  return res;\n};\n\nBN.prototype.gcd = function gcd(num) {\n  if (this.cmpn(0) === 0)\n    return num.clone();\n  if (num.cmpn(0) === 0)\n    return this.clone();\n\n  var a = this.clone();\n  var b = num.clone();\n  a.sign = false;\n  b.sign = false;\n\n  // Remove common factor of two\n  for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n    a.iushrn(1);\n    b.iushrn(1);\n  }\n\n  do {\n    while (a.isEven())\n      a.iushrn(1);\n    while (b.isEven())\n      b.iushrn(1);\n\n    var r = a.cmp(b);\n    if (r < 0) {\n      // Swap `a` and `b` to make `a` always bigger than `b`\n      var t = a;\n      a = b;\n      b = t;\n    } else if (r === 0 || b.cmpn(1) === 0) {\n      break;\n    }\n\n    a.isub(b);\n  } while (true);\n\n  return b.iushln(shift);\n};\n\n// Invert number in the field F(num)\nBN.prototype.invm = function invm(num) {\n  return this.egcd(num).a.umod(num);\n};\n\nBN.prototype.isEven = function isEven() {\n  return (this.words[0] & 1) === 0;\n};\n\nBN.prototype.isOdd = function isOdd() {\n  return (this.words[0] & 1) === 1;\n};\n\n// And first word and num\nBN.prototype.andln = function andln(num) {\n  return this.words[0] & num;\n};\n\n// Increment at the bit position in-line\nBN.prototype.bincn = function bincn(bit) {\n  assert(typeof bit === 'number');\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    for (var i = this.length; i < s + 1; i++)\n      this.words[i] = 0;\n    this.words[s] |= q;\n    this.length = s + 1;\n    return this;\n  }\n\n  // Add bit and propagate, if needed\n  var carry = q;\n  for (var i = s; carry !== 0 && i < this.length; i++) {\n    var w = this.words[i];\n    w += carry;\n    carry = w >>> 26;\n    w &= 0x3ffffff;\n    this.words[i] = w;\n  }\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n  return this;\n};\n\nBN.prototype.cmpn = function cmpn(num) {\n  var sign = num < 0;\n  if (sign)\n    num = -num;\n\n  if (this.sign && !sign)\n    return -1;\n  else if (!this.sign && sign)\n    return 1;\n\n  num &= 0x3ffffff;\n  this.strip();\n\n  var res;\n  if (this.length > 1) {\n    res = 1;\n  } else {\n    var w = this.words[0];\n    res = w === num ? 0 : w < num ? -1 : 1;\n  }\n  if (this.sign)\n    res = -res;\n  return res;\n};\n\n// Compare two numbers and return:\n// 1 - if `this` > `num`\n// 0 - if `this` == `num`\n// -1 - if `this` < `num`\nBN.prototype.cmp = function cmp(num) {\n  if (this.sign && !num.sign)\n    return -1;\n  else if (!this.sign && num.sign)\n    return 1;\n\n  var res = this.ucmp(num);\n  if (this.sign)\n    return -res;\n  else\n    return res;\n};\n\n// Unsigned comparison\nBN.prototype.ucmp = function ucmp(num) {\n  // At this point both numbers have the same sign\n  if (this.length > num.length)\n    return 1;\n  else if (this.length < num.length)\n    return -1;\n\n  var res = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var a = this.words[i];\n    var b = num.words[i];\n\n    if (a === b)\n      continue;\n    if (a < b)\n      res = -1;\n    else if (a > b)\n      res = 1;\n    break;\n  }\n  return res;\n};\n\n//\n// A reduce context, could be using montgomery or something better, depending\n// on the `m` itself.\n//\nBN.red = function red(num) {\n  return new Red(num);\n};\n\nBN.prototype.toRed = function toRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  assert(!this.sign, 'red works only with positives');\n  return ctx.convertTo(this)._forceRed(ctx);\n};\n\nBN.prototype.fromRed = function fromRed() {\n  assert(this.red, 'fromRed works only with numbers in reduction context');\n  return this.red.convertFrom(this);\n};\n\nBN.prototype._forceRed = function _forceRed(ctx) {\n  this.red = ctx;\n  return this;\n};\n\nBN.prototype.forceRed = function forceRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  return this._forceRed(ctx);\n};\n\nBN.prototype.redAdd = function redAdd(num) {\n  assert(this.red, 'redAdd works only with red numbers');\n  return this.red.add(this, num);\n};\n\nBN.prototype.redIAdd = function redIAdd(num) {\n  assert(this.red, 'redIAdd works only with red numbers');\n  return this.red.iadd(this, num);\n};\n\nBN.prototype.redSub = function redSub(num) {\n  assert(this.red, 'redSub works only with red numbers');\n  return this.red.sub(this, num);\n};\n\nBN.prototype.redISub = function redISub(num) {\n  assert(this.red, 'redISub works only with red numbers');\n  return this.red.isub(this, num);\n};\n\nBN.prototype.redShl = function redShl(num) {\n  assert(this.red, 'redShl works only with red numbers');\n  return this.red.ushl(this, num);\n};\n\nBN.prototype.redMul = function redMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.mul(this, num);\n};\n\nBN.prototype.redIMul = function redIMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.imul(this, num);\n};\n\nBN.prototype.redSqr = function redSqr() {\n  assert(this.red, 'redSqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqr(this);\n};\n\nBN.prototype.redISqr = function redISqr() {\n  assert(this.red, 'redISqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.isqr(this);\n};\n\n// Square root over p\nBN.prototype.redSqrt = function redSqrt() {\n  assert(this.red, 'redSqrt works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqrt(this);\n};\n\nBN.prototype.redInvm = function redInvm() {\n  assert(this.red, 'redInvm works only with red numbers');\n  this.red._verify1(this);\n  return this.red.invm(this);\n};\n\n// Return negative clone of `this` % `red modulo`\nBN.prototype.redNeg = function redNeg() {\n  assert(this.red, 'redNeg works only with red numbers');\n  this.red._verify1(this);\n  return this.red.neg(this);\n};\n\nBN.prototype.redPow = function redPow(num) {\n  assert(this.red && !num.red, 'redPow(normalNum)');\n  this.red._verify1(this);\n  return this.red.pow(this, num);\n};\n\n// Prime numbers with efficient reduction\nvar primes = {\n  k256: null,\n  p224: null,\n  p192: null,\n  p25519: null\n};\n\n// Pseudo-Mersenne prime\nfunction MPrime(name, p) {\n  // P = 2 ^ N - K\n  this.name = name;\n  this.p = new BN(p, 16);\n  this.n = this.p.bitLength();\n  this.k = new BN(1).iushln(this.n).isub(this.p);\n\n  this.tmp = this._tmp();\n}\n\nMPrime.prototype._tmp = function _tmp() {\n  var tmp = new BN(null);\n  tmp.words = new Array(Math.ceil(this.n / 13));\n  return tmp;\n};\n\nMPrime.prototype.ireduce = function ireduce(num) {\n  // Assumes that `num` is less than `P^2`\n  // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n  var r = num;\n  var rlen;\n\n  do {\n    this.split(r, this.tmp);\n    r = this.imulK(r);\n    r = r.iadd(this.tmp);\n    rlen = r.bitLength();\n  } while (rlen > this.n);\n\n  var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n  if (cmp === 0) {\n    r.words[0] = 0;\n    r.length = 1;\n  } else if (cmp > 0) {\n    r.isub(this.p);\n  } else {\n    r.strip();\n  }\n\n  return r;\n};\n\nMPrime.prototype.split = function split(input, out) {\n  input.iushrn(this.n, 0, out);\n};\n\nMPrime.prototype.imulK = function imulK(num) {\n  return num.imul(this.k);\n};\n\nfunction K256() {\n  MPrime.call(\n    this,\n    'k256',\n    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n}\ninherits(K256, MPrime);\n\nK256.prototype.split = function split(input, output) {\n  // 256 = 9 * 26 + 22\n  var mask = 0x3fffff;\n\n  var outLen = Math.min(input.length, 9);\n  for (var i = 0; i < outLen; i++)\n    output.words[i] = input.words[i];\n  output.length = outLen;\n\n  if (input.length <= 9) {\n    input.words[0] = 0;\n    input.length = 1;\n    return;\n  }\n\n  // Shift by 9 limbs\n  var prev = input.words[9];\n  output.words[output.length++] = prev & mask;\n\n  for (var i = 10; i < input.length; i++) {\n    var next = input.words[i];\n    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n    prev = next;\n  }\n  input.words[i - 10] = prev >>> 22;\n  input.length -= 9;\n};\n\nK256.prototype.imulK = function imulK(num) {\n  // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n  num.words[num.length] = 0;\n  num.words[num.length + 1] = 0;\n  num.length += 2;\n\n  // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n  var hi;\n  var lo = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = num.words[i];\n    hi = w * 0x40;\n    lo += w * 0x3d1;\n    hi += (lo / 0x4000000) | 0;\n    lo &= 0x3ffffff;\n\n    num.words[i] = lo;\n\n    lo = hi;\n  }\n\n  // Fast length reduction\n  if (num.words[num.length - 1] === 0) {\n    num.length--;\n    if (num.words[num.length - 1] === 0)\n      num.length--;\n  }\n  return num;\n};\n\nfunction P224() {\n  MPrime.call(\n    this,\n    'p224',\n    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n}\ninherits(P224, MPrime);\n\nfunction P192() {\n  MPrime.call(\n    this,\n    'p192',\n    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n}\ninherits(P192, MPrime);\n\nfunction P25519() {\n  // 2 ^ 255 - 19\n  MPrime.call(\n    this,\n    '25519',\n    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n}\ninherits(P25519, MPrime);\n\nP25519.prototype.imulK = function imulK(num) {\n  // K = 0x13\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var hi = num.words[i] * 0x13 + carry;\n    var lo = hi & 0x3ffffff;\n    hi >>>= 26;\n\n    num.words[i] = lo;\n    carry = hi;\n  }\n  if (carry !== 0)\n    num.words[num.length++] = carry;\n  return num;\n};\n\n// Exported mostly for testing purposes, use plain name instead\nBN._prime = function prime(name) {\n  // Cached version of prime\n  if (primes[name])\n    return primes[name];\n\n  var prime;\n  if (name === 'k256')\n    prime = new K256();\n  else if (name === 'p224')\n    prime = new P224();\n  else if (name === 'p192')\n    prime = new P192();\n  else if (name === 'p25519')\n    prime = new P25519();\n  else\n    throw new Error('Unknown prime ' + name);\n  primes[name] = prime;\n\n  return prime;\n};\n\n//\n// Base reduction engine\n//\nfunction Red(m) {\n  if (typeof m === 'string') {\n    var prime = BN._prime(m);\n    this.m = prime.p;\n    this.prime = prime;\n  } else {\n    this.m = m;\n    this.prime = null;\n  }\n}\n\nRed.prototype._verify1 = function _verify1(a) {\n  assert(!a.sign, 'red works only with positives');\n  assert(a.red, 'red works only with red numbers');\n};\n\nRed.prototype._verify2 = function _verify2(a, b) {\n  assert(!a.sign && !b.sign, 'red works only with positives');\n  assert(a.red && a.red === b.red,\n         'red works only with red numbers');\n};\n\nRed.prototype.imod = function imod(a) {\n  if (this.prime)\n    return this.prime.ireduce(a)._forceRed(this);\n  return a.umod(this.m)._forceRed(this);\n};\n\nRed.prototype.neg = function neg(a) {\n  var r = a.clone();\n  r.sign = !r.sign;\n  return r.iadd(this.m)._forceRed(this);\n};\n\nRed.prototype.add = function add(a, b) {\n  this._verify2(a, b);\n\n  var res = a.add(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.iadd = function iadd(a, b) {\n  this._verify2(a, b);\n\n  var res = a.iadd(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res;\n};\n\nRed.prototype.sub = function sub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.sub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.isub = function isub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.isub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res;\n};\n\nRed.prototype.shl = function shl(a, num) {\n  this._verify1(a);\n  return this.imod(a.ushln(num));\n};\n\nRed.prototype.imul = function imul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.imul(b));\n};\n\nRed.prototype.mul = function mul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.mul(b));\n};\n\nRed.prototype.isqr = function isqr(a) {\n  return this.imul(a, a);\n};\n\nRed.prototype.sqr = function sqr(a) {\n  return this.mul(a, a);\n};\n\nRed.prototype.sqrt = function sqrt(a) {\n  if (a.cmpn(0) === 0)\n    return a.clone();\n\n  var mod3 = this.m.andln(3);\n  assert(mod3 % 2 === 1);\n\n  // Fast case\n  if (mod3 === 3) {\n    var pow = this.m.add(new BN(1)).iushrn(2);\n    var r = this.pow(a, pow);\n    return r;\n  }\n\n  // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n  //\n  // Find Q and S, that Q * 2 ^ S = (P - 1)\n  var q = this.m.subn(1);\n  var s = 0;\n  while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n    s++;\n    q.iushrn(1);\n  }\n  assert(q.cmpn(0) !== 0);\n\n  var one = new BN(1).toRed(this);\n  var nOne = one.redNeg();\n\n  // Find quadratic non-residue\n  // NOTE: Max is such because of generalized Riemann hypothesis.\n  var lpow = this.m.subn(1).iushrn(1);\n  var z = this.m.bitLength();\n  z = new BN(2 * z * z).toRed(this);\n  while (this.pow(z, lpow).cmp(nOne) !== 0)\n    z.redIAdd(nOne);\n\n  var c = this.pow(z, q);\n  var r = this.pow(a, q.addn(1).iushrn(1));\n  var t = this.pow(a, q);\n  var m = s;\n  while (t.cmp(one) !== 0) {\n    var tmp = t;\n    for (var i = 0; tmp.cmp(one) !== 0; i++)\n      tmp = tmp.redSqr();\n    assert(i < m);\n    var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n    r = r.redMul(b);\n    c = b.redSqr();\n    t = t.redMul(c);\n    m = i;\n  }\n\n  return r;\n};\n\nRed.prototype.invm = function invm(a) {\n  var inv = a._invmp(this.m);\n  if (inv.sign) {\n    inv.sign = false;\n    return this.imod(inv).redNeg();\n  } else {\n    return this.imod(inv);\n  }\n};\n\nRed.prototype.pow = function pow(a, num) {\n  var w = toBitArray(num);\n  if (w.length === 0)\n    return new BN(1);\n\n  // Skip leading zeroes\n  var res = a;\n  for (var i = 0; i < w.length; i++, res = this.sqr(res))\n    if (w[i] !== 0)\n      break;\n\n  if (++i < w.length) {\n    for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n      if (w[i] === 0)\n        continue;\n      res = this.mul(res, q);\n    }\n  }\n\n  return res;\n};\n\nRed.prototype.convertTo = function convertTo(num) {\n  var r = num.umod(this.m);\n  if (r === num)\n    return r.clone();\n  else\n    return r;\n};\n\nRed.prototype.convertFrom = function convertFrom(num) {\n  var res = num.clone();\n  res.red = null;\n  return res;\n};\n\n//\n// Montgomery method engine\n//\n\nBN.mont = function mont(num) {\n  return new Mont(num);\n};\n\nfunction Mont(m) {\n  Red.call(this, m);\n\n  this.shift = this.m.bitLength();\n  if (this.shift % 26 !== 0)\n    this.shift += 26 - (this.shift % 26);\n  this.r = new BN(1).iushln(this.shift);\n  this.r2 = this.imod(this.r.sqr());\n  this.rinv = this.r._invmp(this.m);\n\n  this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n  this.minv = this.minv.umod(this.r);\n  this.minv = this.r.sub(this.minv);\n}\ninherits(Mont, Red);\n\nMont.prototype.convertTo = function convertTo(num) {\n  return this.imod(num.ushln(this.shift));\n};\n\nMont.prototype.convertFrom = function convertFrom(num) {\n  var r = this.imod(num.mul(this.rinv));\n  r.red = null;\n  return r;\n};\n\nMont.prototype.imul = function imul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n    a.words[0] = 0;\n    a.length = 1;\n    return a;\n  }\n\n  var t = a.imul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).iushrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.mul = function mul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0)\n    return new BN(0)._forceRed(this);\n\n  var t = a.mul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).iushrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.invm = function invm(a) {\n  // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n  var res = this.imod(a._invmp(this.m).mul(this.r2));\n  return res._forceRed(this);\n};\n\n})(typeof module === 'undefined' || module, this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(53)(module)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/bn.js/lib/bn.js\n// module id = 16\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/bn.js/lib/bn.js?");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 17\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar assert = __webpack_require__(38);\nvar inherits = __webpack_require__(3);\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/utils.js\n// module id = 18\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/utils.js?");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst assert = __webpack_require__(2);\nconst common = __webpack_require__(0);\nexports.common = common;\nfunction clamp(value, min, max) {\n    assert(min <= max, 'Illegal clamp bounds');\n    return Math.min(Math.max(value, min), max);\n}\nexports.clamp = clamp;\nfunction getXRPBalance(connection, address, ledgerVersion) {\n    const request = {\n        command: 'account_info',\n        account: address,\n        ledger_index: ledgerVersion\n    };\n    return connection.request(request).then(data => common.dropsToXrp(data.account_data.Balance));\n}\nexports.getXRPBalance = getXRPBalance;\n// If the marker is omitted from a response, you have reached the end\nfunction getRecursiveRecur(getter, marker, limit) {\n    return getter(marker, limit).then(data => {\n        const remaining = limit - data.results.length;\n        if (remaining > 0 && data.marker !== undefined) {\n            return getRecursiveRecur(getter, data.marker, remaining).then(results => data.results.concat(results));\n        }\n        return data.results.slice(0, limit);\n    });\n}\nfunction getRecursive(getter, limit) {\n    return getRecursiveRecur(getter, undefined, limit || Infinity);\n}\nexports.getRecursive = getRecursive;\nfunction renameCounterpartyToIssuer(obj) {\n    const issuer = (obj.counterparty !== undefined) ?\n        obj.counterparty :\n        ((obj.issuer !== undefined) ? obj.issuer : undefined);\n    const withIssuer = Object.assign({}, obj, { issuer });\n    delete withIssuer.counterparty;\n    return withIssuer;\n}\nexports.renameCounterpartyToIssuer = renameCounterpartyToIssuer;\nfunction renameCounterpartyToIssuerInOrder(order) {\n    const taker_gets = renameCounterpartyToIssuer(order.taker_gets);\n    const taker_pays = renameCounterpartyToIssuer(order.taker_pays);\n    const changes = { taker_gets, taker_pays };\n    return _.assign({}, order, _.omitBy(changes, _.isUndefined));\n}\nexports.renameCounterpartyToIssuerInOrder = renameCounterpartyToIssuerInOrder;\nfunction signum(num) {\n    return (num === 0) ? 0 : (num > 0 ? 1 : -1);\n}\n/**\n *  Order two rippled transactions based on their ledger_index.\n *  If two transactions took place in the same ledger, sort\n *  them based on TransactionIndex\n *  See: https://ripple.com/build/transactions/\n */\nfunction compareTransactions(first, second) {\n    if (!first.outcome || !second.outcome) {\n        return 0;\n    }\n    if (first.outcome.ledgerVersion === second.outcome.ledgerVersion) {\n        return signum(first.outcome.indexInLedger - second.outcome.indexInLedger);\n    }\n    return first.outcome.ledgerVersion < second.outcome.ledgerVersion ? -1 : 1;\n}\nexports.compareTransactions = compareTransactions;\nfunction hasCompleteLedgerRange(connection, minLedgerVersion, maxLedgerVersion) {\n    const firstLedgerVersion = 32570; // earlier versions have been lost\n    return connection.hasLedgerVersions(minLedgerVersion || firstLedgerVersion, maxLedgerVersion);\n}\nexports.hasCompleteLedgerRange = hasCompleteLedgerRange;\nfunction isPendingLedgerVersion(connection, maxLedgerVersion) {\n    return connection.getLedgerVersion().then(ledgerVersion => ledgerVersion < (maxLedgerVersion || 0));\n}\nexports.isPendingLedgerVersion = isPendingLedgerVersion;\nfunction ensureLedgerVersion(options) {\n    if (Boolean(options) && options.ledgerVersion !== undefined &&\n        options.ledgerVersion !== null) {\n        return Promise.resolve(options);\n    }\n    return this.getLedgerVersion().then(ledgerVersion => _.assign({}, options, { ledgerVersion }));\n}\nexports.ensureLedgerVersion = ensureLedgerVersion;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/utils.ts\n// module id = 19\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/utils.ts?");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _require = __webpack_require__(11),bytesToHex = _require.bytesToHex,slice = _require.slice;var _require2 =\n__webpack_require__(62),BytesList = _require2.BytesList;\n\nvar Comparable = {\n  lt: function lt(other) {\n    return this.compareTo(other) < 0;\n  },\n  eq: function eq(other) {\n    return this.compareTo(other) === 0;\n  },\n  gt: function gt(other) {\n    return this.compareTo(other) > 0;\n  },\n  gte: function gte(other) {\n    return this.compareTo(other) > -1;\n  },\n  lte: function lte(other) {\n    return this.compareTo(other) < 1;\n  } };\n\n\nvar SerializedType = {\n  toBytesSink: function toBytesSink(sink) {\n    sink.put(this._bytes);\n  },\n  toHex: function toHex() {\n    return bytesToHex(this.toBytes());\n  },\n  toBytes: function toBytes() {\n    if (this._bytes) {\n      return slice(this._bytes);\n    }\n    var bl = new BytesList();\n    this.toBytesSink(bl);\n    return bl.toBytes();\n  },\n  toJSON: function toJSON() {\n    return this.toHex();\n  },\n  toString: function toString() {\n    return this.toHex();\n  } };\n\n\nfunction ensureArrayLikeIs(Type, arrayLike) {\n  return {\n    withChildren: function withChildren(Child) {\n      if (arrayLike instanceof Type) {\n        return arrayLike;\n      }\n      var obj = new Type();\n      for (var i = 0; i < arrayLike.length; i++) {\n        obj.push(Child.from(arrayLike[i]));\n      }\n      return obj;\n    } };\n\n}\n\nmodule.exports = {\n  ensureArrayLikeIs: ensureArrayLikeIs,\n  SerializedType: SerializedType,\n  Comparable: Comparable };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/serialized-type.js\n// module id = 20\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/serialized-type.js?");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(4)\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-buffer/index.js\n// module id = 21\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/safe-buffer/index.js?");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _require = __webpack_require__(12);var bytesToHex = _require.bytesToHex;var slice = _require.slice;var _require2 = \n__webpack_require__(69);var BytesList = _require2.BytesList;\n\nvar Comparable = { \n  lt: function lt(other) {\n    return this.compareTo(other) < 0;}, \n\n  eq: function eq(other) {\n    return this.compareTo(other) === 0;}, \n\n  gt: function gt(other) {\n    return this.compareTo(other) > 0;}, \n\n  gte: function gte(other) {\n    return this.compareTo(other) > -1;}, \n\n  lte: function lte(other) {\n    return this.compareTo(other) < 1;} };\n\n\n\nvar SerializedType = { \n  toBytesSink: function toBytesSink(sink) {\n    sink.put(this._bytes);}, \n\n  toHex: function toHex() {\n    return bytesToHex(this.toBytes());}, \n\n  toBytes: function toBytes() {\n    if (this._bytes) {\n      return slice(this._bytes);}\n\n    var bl = new BytesList();\n    this.toBytesSink(bl);\n    return bl.toBytes();}, \n\n  toJSON: function toJSON() {\n    return this.toHex();}, \n\n  toString: function toString() {\n    return this.toHex();} };\n\n\n\nfunction ensureArrayLikeIs(Type, arrayLike) {\n  return { \n    withChildren: function withChildren(Child) {\n      if (arrayLike instanceof Type) {\n        return arrayLike;}\n\n      var obj = new Type();\n      for (var i = 0; i < arrayLike.length; i++) {\n        obj.push(Child.from(arrayLike[i]));}\n\n      return obj;} };}\n\n\n\n\nmodule.exports = { \n  ensureArrayLikeIs: ensureArrayLikeIs, \n  SerializedType: SerializedType, \n  Comparable: Comparable };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/serialized-type.js\n// module id = 22\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/serialized-type.js?");

/***/ }),
/* 23 */
/***/ (function(module, exports) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 23\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/events/events.js?");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar punycode = __webpack_require__(114);\nvar util = __webpack_require__(115);\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(116);\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/url.js\n// module id = 24\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/url/url.js?");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

eval("var hash = exports;\n\nhash.utils = __webpack_require__(18);\nhash.common = __webpack_require__(39);\nhash.sha = __webpack_require__(120);\nhash.ripemd = __webpack_require__(124);\nhash.hmac = __webpack_require__(125);\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash.js\n// module id = 25\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash.js?");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(46);\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(41);\nutil.inherits = __webpack_require__(3);\n/*</replacement>*/\n\nvar Readable = __webpack_require__(84);\nvar Writable = __webpack_require__(56);\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_duplex.js\n// module id = 26\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_duplex.js?");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var enums = __webpack_require__(33);var\nField = enums.Field;var _require =\n__webpack_require__(59),AccountID = _require.AccountID;var _require2 =\n__webpack_require__(317),Amount = _require2.Amount;var _require3 =\n__webpack_require__(319),Blob = _require3.Blob;var _require4 =\n__webpack_require__(63),Currency = _require4.Currency;var _require5 =\n__webpack_require__(320),Hash128 = _require5.Hash128;var _require6 =\n__webpack_require__(60),Hash160 = _require6.Hash160;var _require7 =\n__webpack_require__(92),Hash256 = _require7.Hash256;var _require8 =\n__webpack_require__(321),PathSet = _require8.PathSet;var _require9 =\n__webpack_require__(322),STArray = _require9.STArray;var _require10 =\n__webpack_require__(93),STObject = _require10.STObject;var _require11 =\n__webpack_require__(323),UInt16 = _require11.UInt16;var _require12 =\n__webpack_require__(324),UInt32 = _require12.UInt32;var _require13 =\n__webpack_require__(91),UInt64 = _require13.UInt64;var _require14 =\n__webpack_require__(325),UInt8 = _require14.UInt8;var _require15 =\n__webpack_require__(326),Vector256 = _require15.Vector256;\n\nvar coreTypes = {\n  AccountID: AccountID,\n  Amount: Amount,\n  Blob: Blob,\n  Currency: Currency,\n  Hash128: Hash128,\n  Hash160: Hash160,\n  Hash256: Hash256,\n  PathSet: PathSet,\n  STArray: STArray,\n  STObject: STObject,\n  UInt8: UInt8,\n  UInt16: UInt16,\n  UInt32: UInt32,\n  UInt64: UInt64,\n  Vector256: Vector256 };\n\n\nField.values.forEach(function (field) {\n  field.associatedType = coreTypes[field.type];\n});\n\nField.TransactionType.associatedType = enums.TransactionType;\nField.TransactionResult.associatedType = enums.TransactionResult;\nField.LedgerEntryType.associatedType = enums.LedgerEntryType;\n\nmodule.exports = coreTypes;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/index.js\n// module id = 27\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/index.js?");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var enums = __webpack_require__(35);var \nField = enums.Field;var _require = \n__webpack_require__(66);var AccountID = _require.AccountID;var _require2 = \n__webpack_require__(348);var Amount = _require2.Amount;var _require3 = \n__webpack_require__(349);var Blob = _require3.Blob;var _require4 = \n__webpack_require__(70);var Currency = _require4.Currency;var _require5 = \n__webpack_require__(350);var Hash128 = _require5.Hash128;var _require6 = \n__webpack_require__(67);var Hash160 = _require6.Hash160;var _require7 = \n__webpack_require__(99);var Hash256 = _require7.Hash256;var _require8 = \n__webpack_require__(351);var PathSet = _require8.PathSet;var _require9 = \n__webpack_require__(352);var STArray = _require9.STArray;var _require10 = \n__webpack_require__(100);var STObject = _require10.STObject;var _require11 = \n__webpack_require__(353);var UInt16 = _require11.UInt16;var _require12 = \n__webpack_require__(354);var UInt32 = _require12.UInt32;var _require13 = \n__webpack_require__(98);var UInt64 = _require13.UInt64;var _require14 = \n__webpack_require__(355);var UInt8 = _require14.UInt8;var _require15 = \n__webpack_require__(356);var Vector256 = _require15.Vector256;\n\nvar coreTypes = { \n  AccountID: AccountID, \n  Amount: Amount, \n  Blob: Blob, \n  Currency: Currency, \n  Hash128: Hash128, \n  Hash160: Hash160, \n  Hash256: Hash256, \n  PathSet: PathSet, \n  STArray: STArray, \n  STObject: STObject, \n  UInt8: UInt8, \n  UInt16: UInt16, \n  UInt32: UInt32, \n  UInt64: UInt64, \n  Vector256: Vector256 };\n\n\nField.values.forEach(function (field) {\n  field.associatedType = coreTypes[field.type];});\n\n\nField.TransactionType.associatedType = enums.TransactionType;\nField.TransactionResult.associatedType = enums.TransactionResult;\nField.LedgerEntryType.associatedType = enums.LedgerEntryType;\n\nmodule.exports = coreTypes;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/index.js\n// module id = 28\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/index.js?");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = __webpack_require__(36);\nconst browserHacks = __webpack_require__(110);\nclass RippleError extends Error {\n    constructor(message = '', data) {\n        super(message);\n        this.name = browserHacks.getConstructorName(this);\n        this.message = message;\n        this.data = data;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    toString() {\n        let result = '[' + this.name + '(' + this.message;\n        if (this.data) {\n            result += ', ' + util_1.inspect(this.data);\n        }\n        result += ')]';\n        return result;\n    }\n    /* console.log in node uses util.inspect on object, and util.inspect allows\n    us to customize its output:\n    https://nodejs.org/api/util.html#util_custom_inspect_function_on_objects */\n    inspect() {\n        return this.toString();\n    }\n}\nexports.RippleError = RippleError;\nclass RippledError extends RippleError {\n}\nexports.RippledError = RippledError;\nclass UnexpectedError extends RippleError {\n}\nexports.UnexpectedError = UnexpectedError;\nclass LedgerVersionError extends RippleError {\n}\nexports.LedgerVersionError = LedgerVersionError;\nclass ConnectionError extends RippleError {\n}\nexports.ConnectionError = ConnectionError;\nclass NotConnectedError extends ConnectionError {\n}\nexports.NotConnectedError = NotConnectedError;\nclass DisconnectedError extends ConnectionError {\n}\nexports.DisconnectedError = DisconnectedError;\nclass RippledNotInitializedError extends ConnectionError {\n}\nexports.RippledNotInitializedError = RippledNotInitializedError;\nclass TimeoutError extends ConnectionError {\n}\nexports.TimeoutError = TimeoutError;\nclass ResponseFormatError extends ConnectionError {\n}\nexports.ResponseFormatError = ResponseFormatError;\nclass ValidationError extends RippleError {\n}\nexports.ValidationError = ValidationError;\nclass NotFoundError extends RippleError {\n    constructor(message = 'Not found') {\n        super(message);\n    }\n}\nexports.NotFoundError = NotFoundError;\nclass MissingLedgerHistoryError extends RippleError {\n    constructor(message) {\n        super(message || 'Server is missing ledger history in the specified range');\n    }\n}\nexports.MissingLedgerHistoryError = MissingLedgerHistoryError;\nclass PendingLedgerVersionError extends RippleError {\n    constructor(message) {\n        super(message || 'maxLedgerVersion is greater than server\\'s most recent' +\n            ' validated ledger');\n    }\n}\nexports.PendingLedgerVersionError = PendingLedgerVersionError;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/errors.ts\n// module id = 29\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/errors.ts?");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hashjs = __webpack_require__(25);\nvar apiFactory = __webpack_require__(126);\n\nvar NODE_PUBLIC = 28;\nvar NODE_PRIVATE = 32;\nvar ACCOUNT_ID = 0;\nvar FAMILY_SEED = 33;\nvar ED25519_SEED = [0x01, 0xE1, 0x4B];\n\nmodule.exports = apiFactory({\n  sha256: function(bytes) {\n    return hashjs.sha256().update(bytes).digest();\n  },\n  defaultAlphabet: 'ripple',\n  codecMethods: {\n    EdSeed: {\n      expectedLength: 16,\n      version: ED25519_SEED\n    },\n    Seed: {\n      // TODO: Use a map, not a parallel array\n      versionTypes: ['ed25519', 'secp256k1'],\n      versions: [ED25519_SEED, FAMILY_SEED],\n      expectedLength: 16\n    },\n    AccountID: {version: ACCOUNT_ID, expectedLength: 20},\n    Address: {version: ACCOUNT_ID, expectedLength: 20},\n    NodePublic: {version: NODE_PUBLIC, expectedLength: 33},\n    NodePrivate: {version: NODE_PRIVATE, expectedLength: 32},\n    K256Seed: {version: FAMILY_SEED, expectedLength: 16}}\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-address-codec/src/index.js\n// module id = 30\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-address-codec/src/index.js?");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // eslint-disable-line strict\n\nvar assert = __webpack_require__(2);\nvar brorand = __webpack_require__(78);\nvar hashjs = __webpack_require__(25);\nvar elliptic = __webpack_require__(13);\nvar Ed25519 = elliptic.eddsa('ed25519');\nvar Secp256k1 = elliptic.ec('secp256k1');\nvar addressCodec = __webpack_require__(30);\nvar derivePrivateKey = __webpack_require__(79).derivePrivateKey;\nvar accountPublicFromPublicGenerator = __webpack_require__(79).accountPublicFromPublicGenerator;\nvar utils = __webpack_require__(152);\nvar hexToBytes = utils.hexToBytes;\nvar bytesToHex = utils.bytesToHex;\n\nfunction generateSeed() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  assert(!options.entropy || options.entropy.length >= 16, 'entropy too short');\n  var entropy = options.entropy ? options.entropy.slice(0, 16) : brorand(16);\n  var type = options.algorithm === 'ed25519' ? 'ed25519' : 'secp256k1';\n  return addressCodec.encodeSeed(entropy, type);\n}\n\nfunction hash(message) {\n  return hashjs.sha512().update(message).digest().slice(0, 32);\n}\n\nvar secp256k1 = {\n  deriveKeypair: function deriveKeypair(entropy, options) {\n    var prefix = '00';\n    var privateKey = prefix + derivePrivateKey(entropy, options).toString(16, 64).toUpperCase();\n    var publicKey = bytesToHex(Secp256k1.keyFromPrivate(privateKey.slice(2)).getPublic().encodeCompressed());\n    return { privateKey: privateKey, publicKey: publicKey };\n  },\n  sign: function sign(message, privateKey) {\n    return bytesToHex(Secp256k1.sign(hash(message), hexToBytes(privateKey), { canonical: true }).toDER());\n  },\n  verify: function verify(message, signature, publicKey) {\n    return Secp256k1.verify(hash(message), signature, hexToBytes(publicKey));\n  }\n};\n\nvar ed25519 = {\n  deriveKeypair: function deriveKeypair(entropy) {\n    var prefix = 'ED';\n    var rawPrivateKey = hash(entropy);\n    var privateKey = prefix + bytesToHex(rawPrivateKey);\n    var publicKey = prefix + bytesToHex(Ed25519.keyFromSecret(rawPrivateKey).pubBytes());\n    return { privateKey: privateKey, publicKey: publicKey };\n  },\n  sign: function sign(message, privateKey) {\n    // caution: Ed25519.sign interprets all strings as hex, stripping\n    // any non-hex characters without warning\n    assert(Array.isArray(message), 'message must be array of octets');\n    return bytesToHex(Ed25519.sign(message, hexToBytes(privateKey).slice(1)).toBytes());\n  },\n  verify: function verify(message, signature, publicKey) {\n    return Ed25519.verify(message, hexToBytes(signature), hexToBytes(publicKey).slice(1));\n  }\n};\n\nfunction select(algorithm) {\n  var methods = { 'ecdsa-secp256k1': secp256k1, ed25519: ed25519 };\n  return methods[algorithm];\n}\n\nfunction deriveKeypair(seed, options) {\n  var decoded = addressCodec.decodeSeed(seed);\n  var algorithm = decoded.type === 'ed25519' ? 'ed25519' : 'ecdsa-secp256k1';\n  var method = select(algorithm);\n  var keypair = method.deriveKeypair(decoded.bytes, options);\n  var messageToVerify = hash('This test message should verify.');\n  var signature = method.sign(messageToVerify, keypair.privateKey);\n  if (method.verify(messageToVerify, signature, keypair.publicKey) !== true) {\n    throw new Error('derived keypair did not generate verifiable signature');\n  }\n  return keypair;\n}\n\nfunction getAlgorithmFromKey(key) {\n  var bytes = hexToBytes(key);\n  return bytes.length === 33 && bytes[0] === 0xED ? 'ed25519' : 'ecdsa-secp256k1';\n}\n\nfunction sign(messageHex, privateKey) {\n  var algorithm = getAlgorithmFromKey(privateKey);\n  return select(algorithm).sign(hexToBytes(messageHex), privateKey);\n}\n\nfunction verify(messageHex, signature, publicKey) {\n  var algorithm = getAlgorithmFromKey(publicKey);\n  return select(algorithm).verify(hexToBytes(messageHex), signature, publicKey);\n}\n\nfunction deriveAddressFromBytes(publicKeyBytes) {\n  return addressCodec.encodeAccountID(utils.computePublicKeyHash(publicKeyBytes));\n}\n\nfunction deriveAddress(publicKey) {\n  return deriveAddressFromBytes(hexToBytes(publicKey));\n}\n\nfunction deriveNodeAddress(publicKey) {\n  var generatorBytes = addressCodec.decodeNodePublic(publicKey);\n  var accountPublicBytes = accountPublicFromPublicGenerator(generatorBytes);\n  return deriveAddressFromBytes(accountPublicBytes);\n}\n\nmodule.exports = {\n  generateSeed: generateSeed,\n  deriveKeypair: deriveKeypair,\n  sign: sign,\n  verify: verify,\n  deriveAddress: deriveAddress,\n  deriveNodeAddress: deriveNodeAddress\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/distrib/npm/index.js\n// module id = 31\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/distrib/npm/index.js?");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar _ = __webpack_require__(1)\nvar BigNumber = __webpack_require__(7)\n\n// drops is a bignumber.js BigNumber\nfunction dropsToXRP(drops) {\n  return drops.dividedBy(1000000)\n}\n\nfunction normalizeNode(affectedNode) {\n  var diffType = Object.keys(affectedNode)[0]\n  var node = affectedNode[diffType]\n  return Object.assign({}, node, {\n    diffType: diffType,\n    entryType: node.LedgerEntryType,\n    ledgerIndex: node.LedgerIndex,\n    newFields: node.NewFields || {},\n    finalFields: node.FinalFields || {},\n    previousFields: node.PreviousFields || {}\n  })\n}\n\nfunction normalizeNodes(metadata) {\n  if (!metadata.AffectedNodes) {\n    return []\n  }\n  return metadata.AffectedNodes.map(normalizeNode)\n}\n\nfunction parseCurrencyAmount(currencyAmount) {\n  if (currencyAmount === undefined) {\n    return undefined\n  }\n  if (typeof currencyAmount === 'string') {\n    return {\n      currency: 'XRP',\n      value: dropsToXRP(new BigNumber(currencyAmount)).toString()\n    }\n  }\n\n  return {\n    currency: currencyAmount.currency,\n    counterparty: currencyAmount.issuer,\n    value: currencyAmount.value\n  }\n}\n\nfunction isAccountField(fieldName) {\n  var fieldNames = ['Account', 'Owner', 'Destination', 'Issuer', 'Target']\n  return _.includes(fieldNames, fieldName)\n}\n\nfunction isAmountFieldAffectingIssuer(fieldName) {\n  var fieldNames = ['LowLimit', 'HighLimit', 'TakerPays', 'TakerGets']\n  return _.includes(fieldNames, fieldName)\n}\n\nfunction getAffectedAccounts(metadata) {\n  var accounts = []\n  _.forEach(normalizeNodes(metadata), function(node) {\n    var fields = node.diffType === 'CreatedNode' ?\n      node.newFields : node.finalFields\n    _.forEach(fields, function(fieldValue, fieldName) {\n      if (isAccountField(fieldName)) {\n        accounts.push(fieldValue)\n      } else if (isAmountFieldAffectingIssuer(fieldName) && fieldValue.issuer) {\n        accounts.push(fieldValue.issuer)\n      }\n    })\n  })\n  return _.uniq(accounts)\n}\n\n\nmodule.exports = {\n  dropsToXRP: dropsToXRP,\n  normalizeNodes: normalizeNodes,\n  parseCurrencyAmount: parseCurrencyAmount,\n  getAffectedAccounts: getAffectedAccounts\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-lib-transactionparser/src/utils.js\n// module id = 32\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-lib-transactionparser/src/utils.js?");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _slicedToArray = function () {function sliceIterator(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"]) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}return function (arr, i) {if (Array.isArray(arr)) {return arr;} else if (Symbol.iterator in Object(arr)) {return sliceIterator(arr, i);} else {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();var assert = __webpack_require__(2);\nvar _ = __webpack_require__(1);var _require =\n__webpack_require__(11),parseBytes = _require.parseBytes,serializeUIntN = _require.serializeUIntN;\nvar makeClass = __webpack_require__(5);\nvar enums = __webpack_require__(316);\n\nfunction transformWith(func, obj) {\n  return _.transform(obj, func);\n}\n\nfunction biMap(obj, valueKey) {\n  return _.transform(obj, function (result, value, key) {\n    result[key] = value;\n    result[value[valueKey]] = value;\n  });\n}\n\nvar EnumType = makeClass({\n  EnumType: function EnumType(definition) {\n    _.assign(this, definition);\n    // At minimum\n    assert(this.bytes instanceof Uint8Array);\n    assert(typeof this.ordinal === 'number');\n    assert(typeof this.name === 'string');\n  },\n  toString: function toString() {\n    return this.name;\n  },\n  toJSON: function toJSON() {\n    return this.name;\n  },\n  toBytesSink: function toBytesSink(sink) {\n    sink.put(this.bytes);\n  },\n  statics: {\n    ordinalByteWidth: 1,\n    fromParser: function fromParser(parser) {\n      return this.from(parser.readUIntN(this.ordinalByteWidth));\n    },\n    from: function from(val) {\n      var ret = val instanceof this ? val : this[val];\n      if (!ret) {\n        throw new Error(\n        val + ' is not a valid name or ordinal for ' + this.enumName);\n      }\n      return ret;\n    },\n    valuesByName: function valuesByName() {var _this = this;\n      return _.transform(this.initVals, function (result, ordinal, name) {\n        var bytes = serializeUIntN(ordinal, _this.ordinalByteWidth);\n        var type = new _this({ name: name, ordinal: ordinal, bytes: bytes });\n        result[name] = type;\n      });\n    },\n    init: function init() {\n      var mapped = this.valuesByName();\n      _.assign(this, biMap(mapped, 'ordinal'));\n      this.values = _.values(mapped);\n      return this;\n    } } });\n\n\n\nfunction makeEnum(name, definition) {\n  return makeClass({\n    inherits: EnumType,\n    statics: _.assign(definition, { enumName: name }) });\n\n}\n\nfunction makeEnums(to, definition, name) {\n  to[name] = makeEnum(name, definition);\n}\n\nvar Enums = transformWith(makeEnums, {\n  Type: {\n    initVals: enums.TYPES },\n\n  LedgerEntryType: {\n    initVals: enums.LEDGER_ENTRY_TYPES, ordinalByteWidth: 2 },\n\n  TransactionType: {\n    initVals: enums.TRANSACTION_TYPES, ordinalByteWidth: 2 },\n\n  TransactionResult: {\n    initVals: enums.TRANSACTION_RESULTS, ordinalByteWidth: 1 } });\n\n\n\nEnums.Field = makeClass({\n  inherits: EnumType,\n  statics: {\n    enumName: 'Field',\n    initVals: enums.FIELDS,\n    valuesByName: function valuesByName() {var _this2 = this;\n      var fields = _.map(this.initVals, function (_ref) {var _ref2 = _slicedToArray(_ref, 2),name = _ref2[0],definition = _ref2[1];\n        var type = Enums.Type[definition.type];\n        var bytes = _this2.header(type.ordinal, definition.nth);\n        var ordinal = type.ordinal << 16 | definition.nth;\n        var extra = { ordinal: ordinal, name: name, type: type, bytes: bytes };\n        return new _this2(_.assign(definition, extra));\n      });\n      return _.keyBy(fields, 'name');\n    },\n    header: function header(type, nth) {\n      var name = nth;\n      var header = [];\n      var push = header.push.bind(header);\n      if (type < 16) {\n        if (name < 16) {\n          push(type << 4 | name);\n        } else {\n          push(type << 4, name);\n        }\n      } else if (name < 16) {\n        push(name, type);\n      } else {\n        push(0, type, name);\n      }\n      return parseBytes(header, Uint8Array);\n    } } });\n\n\n\nmodule.exports = Enums;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/enums/index.js\n// module id = 33\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/enums/index.js?");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(21).Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/hash.js\n// module id = 34\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/hash.js?");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _slicedToArray = function () {function sliceIterator(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"]) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}return function (arr, i) {if (Array.isArray(arr)) {return arr;} else if (Symbol.iterator in Object(arr)) {return sliceIterator(arr, i);} else {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();var assert = __webpack_require__(2);\nvar _ = __webpack_require__(1);var _require = \n__webpack_require__(12);var parseBytes = _require.parseBytes;var serializeUIntN = _require.serializeUIntN;\nvar makeClass = __webpack_require__(6);\nvar enums = __webpack_require__(347);\n\nfunction transformWith(func, obj) {\n  return _.transform(obj, func);}\n\n\nfunction biMap(obj, valueKey) {\n  return _.transform(obj, function (result, value, key) {\n    result[key] = value;\n    result[value[valueKey]] = value;});}\n\n\n\nvar EnumType = makeClass({ \n  EnumType: function EnumType(definition) {\n    _.assign(this, definition);\n    // At minimum\n    assert(this.bytes instanceof Uint8Array);\n    assert(typeof this.ordinal === 'number');\n    assert(typeof this.name === 'string');}, \n\n  toString: function toString() {\n    return this.name;}, \n\n  toJSON: function toJSON() {\n    return this.name;}, \n\n  toBytesSink: function toBytesSink(sink) {\n    sink.put(this.bytes);}, \n\n  statics: { \n    ordinalByteWidth: 1, \n    fromParser: function fromParser(parser) {\n      return this.from(parser.readUIntN(this.ordinalByteWidth));}, \n\n    from: function from(val) {\n      var ret = val instanceof this ? val : this[val];\n      if (!ret) {\n        throw new Error(\n        val + ' is not a valid name or ordinal for ' + this.enumName);}\n\n      return ret;}, \n\n    valuesByName: function valuesByName() {var _this = this;\n      return _.transform(this.initVals, function (result, ordinal, name) {\n        var bytes = serializeUIntN(ordinal, _this.ordinalByteWidth);\n        var type = new _this({ name: name, ordinal: ordinal, bytes: bytes });\n        result[name] = type;});}, \n\n\n    init: function init() {\n      var mapped = this.valuesByName();\n      _.assign(this, biMap(mapped, 'ordinal'));\n      this.values = _.values(mapped);\n      return this;} } });\n\n\n\n\nfunction makeEnum(name, definition) {\n  return makeClass({ \n    inherits: EnumType, \n    statics: _.assign(definition, { enumName: name }) });}\n\n\n\nfunction makeEnums(to, definition, name) {\n  to[name] = makeEnum(name, definition);}\n\n\nvar Enums = transformWith(makeEnums, { \n  Type: { \n    initVals: enums.TYPES }, \n\n  LedgerEntryType: { \n    initVals: enums.LEDGER_ENTRY_TYPES, ordinalByteWidth: 2 }, \n\n  TransactionType: { \n    initVals: enums.TRANSACTION_TYPES, ordinalByteWidth: 2 }, \n\n  TransactionResult: { \n    initVals: enums.TRANSACTION_RESULTS, ordinalByteWidth: 1 } });\n\n\n\nEnums.Field = makeClass({ \n  inherits: EnumType, \n  statics: { \n    enumName: 'Field', \n    initVals: enums.FIELDS, \n    valuesByName: function valuesByName() {var _this2 = this;\n      var fields = _.map(this.initVals, function (_ref) {var _ref2 = _slicedToArray(_ref, 2);var name = _ref2[0];var definition = _ref2[1];\n        var type = Enums.Type[definition.type];\n        var bytes = _this2.header(type.ordinal, definition.nth);\n        var ordinal = type.ordinal << 16 | definition.nth;\n        var extra = { ordinal: ordinal, name: name, type: type, bytes: bytes };\n        return new _this2(_.assign(definition, extra));});\n\n      return _.keyBy(fields, 'name');}, \n\n    header: function header(type, nth) {\n      var name = nth;\n      var header = [];\n      var push = header.push.bind(header);\n      if (type < 16) {\n        if (name < 16) {\n          push(type << 4 | name);} else \n        {\n          push(type << 4, name);}} else \n\n      if (name < 16) {\n        push(name, type);} else \n      {\n        push(0, type, name);}\n\n      return parseBytes(header, Uint8Array);} } });\n\n\n\n\nmodule.exports = Enums;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/enums/index.js\n// module id = 35\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/enums/index.js?");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(108);\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(109);\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(17)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/util.js\n// module id = 36\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/util/util.js?");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar uri = __webpack_require__(24);\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, propertyPath, name, argument) {\n  if (propertyPath) {\n    this.property = propertyPath;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    if (schema.id) {\n      this.schema = schema.id;\n    } else {\n      this.schema = schema;\n    }\n  }\n  if (instance) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.propertyPath);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.propertyPath, detail.name, detail.argument);\n  }\n\n  if (this.throwError) {\n    throw err;\n  }\n  this.errors.push(err);\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    Array.prototype.push.apply(this.errors, res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  { constructor: {value: SchemaError, enumerable: false}\n  , name: {value: 'SchemaError', enumerable: false}\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, propertyPath, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  this.propertyPath = propertyPath;\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var propertyPath = (propertyName===undefined) ? this.propertyPath : this.propertyPath+makeSuffix(propertyName);\n  var base = uri.resolve(this.base, schema.id||'');\n  var ctx = new SchemaContext(schema, this.options, propertyPath, base, Object.create(this.schemas));\n  if(schema.id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n}\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n  'uri': /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\\s]*$/,\n\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n  'style': /\\s*(.+?):\\s*([^;]+);?/g,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a instanceof Array) {\n    if (!(b instanceof Array)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e)\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e)\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key])\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n};\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n\t// ~ must be encoded explicitly because hacks\n\t// the slash is encoded by encodeURIComponent\n\treturn a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsonschema/lib/helpers.js\n// module id = 37\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/jsonschema/lib/helpers.js?");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

eval("module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/minimalistic-assert/index.js\n// module id = 38\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/minimalistic-assert/index.js?");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar assert = __webpack_require__(38);\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/common.js\n// module id = 39\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/common.js?");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(84);\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(56);\nexports.Duplex = __webpack_require__(26);\nexports.Transform = __webpack_require__(87);\nexports.PassThrough = __webpack_require__(282);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/readable-browser.js\n// module id = 40\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/readable-browser.js?");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-util-is/lib/util.js\n// module id = 41\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/core-util-is/lib/util.js?");

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var assert = __webpack_require__(2);\nvar coreTypes = __webpack_require__(315);var\nquality =\n\n\n\n\n\n\ncoreTypes.quality,_coreTypes$binary = coreTypes.binary,bytesToHex = _coreTypes$binary.bytesToHex,signingData = _coreTypes$binary.signingData,signingClaimData = _coreTypes$binary.signingClaimData,multiSigningData = _coreTypes$binary.multiSigningData,binaryToJSON = _coreTypes$binary.binaryToJSON,serializeObject = _coreTypes$binary.serializeObject,BinaryParser = _coreTypes$binary.BinaryParser;\n\nfunction decodeLedgerData(binary) {\n  assert(typeof binary === 'string', 'binary must be a hex string');\n  var parser = new BinaryParser(binary);\n  return {\n    ledger_index: parser.readUInt32(),\n    total_coins: parser.readType(coreTypes.UInt64).valueOf().toString(),\n    parent_hash: parser.readType(coreTypes.Hash256).toHex(),\n    transaction_hash: parser.readType(coreTypes.Hash256).toHex(),\n    account_hash: parser.readType(coreTypes.Hash256).toHex(),\n    parent_close_time: parser.readUInt32(),\n    close_time: parser.readUInt32(),\n    close_time_resolution: parser.readUInt8(),\n    close_flags: parser.readUInt8() };\n\n}\n\nfunction decode(binary) {\n  assert(typeof binary === 'string', 'binary must be a hex string');\n  return binaryToJSON(binary);\n}\n\nfunction encode(json) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  return bytesToHex(serializeObject(json));\n}\n\nfunction encodeForSigning(json) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  return bytesToHex(signingData(json));\n}\n\nfunction encodeForSigningClaim(json) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  return bytesToHex(signingClaimData(json));\n}\n\nfunction encodeForMultisigning(json, signer) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  assert.equal(json.SigningPubKey, '');\n  return bytesToHex(multiSigningData(json, signer));\n}\n\nfunction encodeQuality(value) {\n  assert(typeof value === 'string');\n  return bytesToHex(quality.encode(value));\n}\n\nfunction decodeQuality(value) {\n  assert(typeof value === 'string');\n  return quality.decode(value).toString();\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  encodeForSigning: encodeForSigning,\n  encodeForSigningClaim: encodeForSigningClaim,\n  encodeForMultisigning: encodeForMultisigning,\n  encodeQuality: encodeQuality,\n  decodeQuality: decodeQuality,\n  decodeLedgerData: decodeLedgerData };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/index.js\n// module id = 42\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/index.js?");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _require = __webpack_require__(11),serializeUIntN = _require.serializeUIntN;\n\nfunction bytes(uint32) {\n  return serializeUIntN(uint32, 4);\n}\n\nvar HashPrefix = {\n  transactionID: bytes(0x54584E00),\n  // transaction plus metadata\n  transaction: bytes(0x534E4400),\n  // account state\n  accountStateEntry: bytes(0x4D4C4E00),\n  // inner node in tree\n  innerNode: bytes(0x4D494E00),\n  // ledger master data for signing\n  ledgerHeader: bytes(0x4C575200),\n  // inner transaction to sign\n  transactionSig: bytes(0x53545800),\n  // inner transaction to sign\n  transactionMultiSig: bytes(0x534D5400),\n  // validation for signing\n  validation: bytes(0x56414C00),\n  // proposal for signing\n  proposal: bytes(0x50525000),\n  // payment channel claim\n  paymentChannelClaim: bytes(0x434C4D00) };\n\n\nmodule.exports = {\n  HashPrefix: HashPrefix };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/hash-prefixes.js\n// module id = 43\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/hash-prefixes.js?");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _require = __webpack_require__(12);var serializeUIntN = _require.serializeUIntN;\n\nfunction bytes(uint32) {\n  return serializeUIntN(uint32, 4);}\n\n\nvar HashPrefix = { \n  transactionID: bytes(0x54584E00), \n  // transaction plus metadata\n  transaction: bytes(0x534E4400), \n  // account state\n  accountStateEntry: bytes(0x4D4C4E00), \n  // inner node in tree\n  innerNode: bytes(0x4D494E00), \n  // ledger master data for signing\n  ledgerHeader: bytes(0x4C575200), \n  // inner transaction to sign\n  transactionSig: bytes(0x53545800), \n  // inner transaction to sign\n  transactionMultiSig: bytes(0x534D5400), \n  // validation for signing\n  validation: bytes(0x56414C00), \n  // proposal for signing\n  proposal: bytes(0x50525000), \n  // payment channel claim\n  paymentChannelClaim: bytes(0x434C4D00) };\n\n\nmodule.exports = { \n  HashPrefix: HashPrefix };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/hash-prefixes.js\n// module id = 44\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/hash-prefixes.js?");

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = exports;\n\ncurve.base = __webpack_require__(134);\ncurve.short = __webpack_require__(135);\ncurve.mont = __webpack_require__(136);\ncurve.edwards = __webpack_require__(137);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/index.js\n// module id = 45\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/index.js?");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process-nextick-args/index.js\n// module id = 46\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/process-nextick-args/index.js?");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*! decimal.js v5.0.8 https://github.com/MikeMcl/decimal.js/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v5.0.8\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2016 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // The base 88 alphabet used by `toJSON` and `fromJSON`.\r\n    // 7 printable ASCII characters omitted (space) \\ \" & ' < >\r\n    NUMERALS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: void 0                         // true/false/undefined\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    inexact, noConflict, quadrant,\r\n    cryptoObject = typeof crypto != 'undefined' ? crypto : null,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toJSON\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * Math.pow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = Math.pow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = Math.pow(4, -k).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(Math.pow(5, -k));\r\n\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = r.length; !r[--i];) r.pop();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the exact value of this Decimal in a compact base-88 based format.\r\n   *\r\n   * The number of characters of the string will always be equal to or less than the number of\r\n   * characters returned by `toString` or `toExponential` - usually just over half as many.\r\n   *\r\n   * The original Decimal value can be recreated by passing the string to `Decimal.fromJSON`.\r\n   *\r\n   * Base 88 alphabet:\r\n   * 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~\r\n   *\r\n   * The following 7 printable ASCII characters are not used\r\n   * (space) \\ \" & ' < >\r\n   * so the return value is safe for strings, HTML, JSON, and XML.\r\n   *\r\n   *     0   0     g  16    w  32    M  48    $  64    ]  80\r\n   *     1   1     h  17    x  33    N  49    %  65    ^  81\r\n   *     2   2     i  18    y  34    O  50    (  66    _  82\r\n   *     3   3     j  19    z  35    P  51    )  67    `  83\r\n   *     4   4     k  20    A  36    Q  52    *  68    {  84\r\n   *     5   5     l  21    B  37    R  53    +  69    |  85\r\n   *     6   6     m  22    C  38    S  54    ,  70    }  86\r\n   *     7   7     n  23    D  39    T  55    -  71    ~  87\r\n   *     8   8     o  24    E  40    U  56    .  72\r\n   *     9   9     p  25    F  41    V  57    /  73\r\n   *     a  10     q  26    G  42    W  58    :  74\r\n   *     b  11     r  27    H  43    X  59    ;  75\r\n   *     c  12     s  28    I  44    Y  60    =  76\r\n   *     d  13     t  29    J  45    Z  61    ?  77\r\n   *     e  14     u  30    K  46    !  62    @  78\r\n   *     f  15     v  31    L  47    #  63    [  79\r\n   *\r\n   * If the return value is just one character, it represents:\r\n   * 0-81  [[0, 40][-0, -40]]\r\n   * 82    -Infinity\r\n   * 83    +Infinity\r\n   * 84    NaN\r\n   * 85-87 free\r\n   *\r\n   *   64 32 16  8  4  2  1\r\n   *    1  0  1  0  1  1  1 = 87\r\n   *\r\n   */\r\n   P.toJSON = function () {\r\n    var arr, e, i, k, len, n, r, str,\r\n      x = this,\r\n      isNeg = x.s < 0;\r\n\r\n    // -Infinity/Infinity/NaN.\r\n    if (!x.d) return NUMERALS.charAt(x.s ? isNeg ? 82 : 83 : 84);\r\n    e = x.e;\r\n\r\n    // Small integer.\r\n    if (x.d.length === 1 && e < 4 && e >= 0) {\r\n      n = x.d[0];\r\n\r\n      if (n < 2857) {\r\n\r\n        // One character.\r\n        // [[0, 40][-0, -40]]\r\n        if (n < 41) return NUMERALS.charAt(isNeg ? n + 41 : n);\r\n\r\n        // Two characters. High bit of first character unset.\r\n        // 0XXXXXX\r\n        // 63*88 + 87 = 5631 = 5632 values, 5632/2 = 2816\r\n        // [[0, 2815][2816, 5631]]  (2816 * 2 = 5632 values)\r\n        // [[0, 2815][-0, -2815]]\r\n        // [[41, 2856][-41, -2856]]\r\n        n -= 41;\r\n        if (isNeg) n += 2816;\r\n        k = n / 88 | 0;\r\n\r\n        return NUMERALS.charAt(k) + NUMERALS.charAt(n - k * 88);\r\n      }\r\n    }\r\n\r\n    str = digitsToString(x.d);\r\n    r = '';\r\n\r\n    // Values with a small exponent. Set high bit.\r\n    // Positive value: 100XXXX\r\n    // 1 0 0 {exponent [0, 15] -> [-7, 8]}\r\n    if (!isNeg && e <= 8 && e >= -7) {\r\n      k = 64 + e + 7;\r\n\r\n    // Negative value: 1010XXX\r\n    // 1 0 1 0 {exponent [0, 7] -> [-3, 4]}\r\n    } else if (isNeg && e <= 4 && e >= -3) {\r\n      k = 64 + 16 + e + 3;\r\n\r\n    // Integer without trailing zeros: 0X00000\r\n    // 0 {is negative} 0 0 0 0 0\r\n    } else if (str.length === e + 1) {\r\n      k = 32 * isNeg;\r\n\r\n    // All remaining values: 0XXXXXX\r\n    // Result will have at least 3 characters.\r\n    // 0 {is negative} {is exponent negative} {exponent character count [1, 15]}\r\n    } else {\r\n      k = 32 * isNeg + 16 * (e < 0);\r\n      e = Math.abs(e);\r\n\r\n      // One character to represent the exponent.\r\n      if (e < 88)  {\r\n        k += 1;\r\n        r = NUMERALS.charAt(e);\r\n\r\n      // Two characters to represent the exponent.\r\n      // 87*88 + 87 = 7743\r\n      } else if (e < 7744) {\r\n        k += 2;\r\n        n = e / 88 | 0;\r\n        r = NUMERALS.charAt(n) + NUMERALS.charAt(e - n * 88);\r\n\r\n      // More than two characters to represent the exponent.\r\n      } else {\r\n        arr = convertBase(String(e), 10, 88);\r\n        len = arr.length;\r\n        k += len;\r\n        for (i = 0; i < len; i++) r += NUMERALS.charAt(arr[i]);\r\n      }\r\n    }\r\n\r\n    // At this point r contains the characters in base 88 representing the exponent value.\r\n    // Prepend the first character, which describes the sign, the exponent sign, and the number of\r\n    // characters that follow which represent the exponent value.\r\n    r = NUMERALS.charAt(k) + r;\r\n    arr = convertBase(str, 10, 88);\r\n    len = arr.length;\r\n\r\n    // Add the base 88 characters that represent the significand.\r\n    for (i = 0; i < len; i++) r += NUMERALS.charAt(arr[i]);\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of the magnitude of `y` to the value\r\n   * of this Decimal.\r\n   *\r\n   * If the value of this Decimal is equidistant from two multiples of `y`, the rounding mode `rm`,\r\n   * or `Decimal.rounding` if `rm` is omitted, determines the direction of the nearest multiple.\r\n   *\r\n   * In the context of this method, rounding mode 4 (ROUND_HALF_UP) is the same as rounding mode 0\r\n   * (ROUND_UP), and so on.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm !== void 0) checkInt32(rm, 0, 8);\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      if (rm < 4) rm = [4, 5, 7, 8][rm];\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return  new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n      if (sign < 0) return new Ctor(NaN);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? sign / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n\r\n    r.s = sign;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toJSON,\r\n   *                           P.toPower, finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              P.toJSON, toStringBinary, fromJSON, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, fromJSON, parseOther, random, Decimal           *\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = Math.pow(4, -k).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n\r\n    // First get the number of digits of the first word of the digits array.\r\n    for (var i = 1, w = digits[0]; w >= 10; w /= 10) i++;\r\n    return i + e * LOG_BASE - 1;\r\n  }\r\n\r\n\r\n   function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? Math.pow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    // Max k before Math.pow precision loss is 22\r\n    x = x.times(Math.pow(5, -k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  fromJSON\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number|undefined}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (obj.hasOwnProperty(p = 'crypto')) {\r\n      if ((v = obj[p]) === void 0) {\r\n        this[p] = v;\r\n      } else if (v === true || v === false || v === 0 || v === 1) {\r\n        this[p] = !!(v && cryptoObject &&\r\n            (cryptoObject.getRandomValues || cryptoObject.randomBytes));\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n        x.e = v.e;\r\n        x.d = (v = v.d) ? v.slice() : v;\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n          x.e = e;\r\n          x.d = [v];\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (v.charCodeAt(0) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = config;\r\n    Decimal.clone = clone;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.fromJSON = fromJSON;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal from `str`, a string value created by `toJSON`.\r\n   *\r\n   * Base 88 alphabet:\r\n   * 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~\r\n   *\r\n   * If `str` is just one character:\r\n   * 0-81  [[0, 40][-0, -40]]\r\n   * 82    -Infinity\r\n   * 83    +Infinity\r\n   * 84    NaN\r\n   *\r\n   *   64 32 16  8  4  2  1\r\n   *    1  0  1  0  1  1  1 = 87\r\n   *\r\n   */\r\n  function fromJSON(str) {\r\n    var e, isNeg, k, n;\r\n\r\n    if (typeof str !== 'string' || !str) throw Error(invalidArgument + str);\r\n    k = str.length;\r\n    n = NUMERALS.indexOf(str.charAt(0));\r\n\r\n    //  [0, 81] -> [[0, 40][-0, -40]]\r\n    if (k === 1) {\r\n      return new this(n > 81 ? [-1 / 0, 1 / 0, 0 / 0][n - 82] : n > 40 ? -(n - 41) : n);\r\n    } else if (n & 64) {\r\n      isNeg = n & 16;\r\n\r\n      // e = isNeg ? [-3, 4] : [-7, 8]\r\n      e = isNeg ? (n & 7) - 3 : (n & 15) - 7;\r\n      k = 1;\r\n    } else if (k === 2) {\r\n      n = n * 88 + NUMERALS.indexOf(str.charAt(1));\r\n\r\n      // [0, 5631] -> [[0, 2815][-0, -2815]] -> [[41, 2856][-41, -2856]]\r\n      return new this(n >= 2816 ? -(n - 2816) - 41 : n + 41);\r\n    } else {\r\n\r\n      // 0XXXXXX\r\n      // 0 {is negative} {is exponent negative} {exponent digit count [0, 15]}\r\n      isNeg = n & 32;\r\n\r\n      // Has an exponent been specified?\r\n      if (n & 31) {\r\n        e = n & 15;    // Exponent character count [1, 15]\r\n        k = e + 1;     // Index of first character of the significand.\r\n\r\n        if (e === 1)  {\r\n          e = NUMERALS.indexOf(str.charAt(1));\r\n        } else if (e === 2) {\r\n          e = NUMERALS.indexOf(str.charAt(1)) * 88 +\r\n            NUMERALS.indexOf(str.charAt(2));\r\n        } else {\r\n          e = +convertBase(str.slice(1, k), 88, 10).join('');\r\n        }\r\n\r\n        // Negative exponent?\r\n        if (n & 16) e = -e;\r\n      } else {\r\n\r\n        // Integer without trailing zeros.\r\n        // 0X00000\r\n        // 0 {is negative} 0 0 0 0 0\r\n        str = convertBase(str.slice(1), 88, 10).join('');\r\n        return new this(isNeg ? '-' + str : str);\r\n      }\r\n    }\r\n\r\n    str = convertBase(str.slice(k), 88, 10).join('');\r\n    e = e - str.length + 1;\r\n    str = str + 'e' + e;\r\n\r\n    return new this(isNeg ? '-' + str : str);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (this.crypto === false) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (cryptoObject && cryptoObject.getRandomValues) {\r\n      d = cryptoObject.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = cryptoObject.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (cryptoObject && cryptoObject.randomBytes) {\r\n\r\n      // buffer\r\n      d = cryptoObject.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          cryptoObject.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else if (this.crypto) {\r\n      throw Error(decimalError + 'crypto unavailable');\r\n    } else {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n      return Decimal;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    if (!cryptoObject) {\r\n      try {\r\n        cryptoObject = require('cry' + 'pto');\r\n      } catch (e) {\r\n        // Ignore.\r\n      }\r\n    }\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/decimal.js/decimal.js\n// module id = 47\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/decimal.js/decimal.js?");

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar BN = __webpack_require__(15);\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(20),Comparable = _require.Comparable,SerializedType = _require.SerializedType;var _require2 =\n__webpack_require__(11),serializeUIntN = _require2.serializeUIntN;\nvar MAX_VALUES = [0, 255, 65535, 16777215, 4294967295];\n\nfunction signum(a, b) {\n  return a < b ? -1 : a === b ? 0 : 1;\n}\n\nvar UInt = makeClass({\n  mixins: [Comparable, SerializedType],\n  UInt: function UInt() {var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var max = MAX_VALUES[this.constructor.width];\n    if (val < 0 || !(val <= max)) {\n      throw new Error(val + ' not in range 0 <= $val <= ' + max);\n    }\n    this.val = val;\n  },\n  statics: {\n    width: 0,\n    fromParser: function fromParser(parser) {\n      var val = this.width > 4 ? parser.read(this.width) :\n      parser.readUIntN(this.width);\n      return new this(val);\n    },\n    from: function from(val) {\n      return val instanceof this ? val : new this(val);\n    } },\n\n  toJSON: function toJSON() {\n    return this.val;\n  },\n  valueOf: function valueOf() {\n    return this.val;\n  },\n  compareTo: function compareTo(other) {\n    var thisValue = this.valueOf();\n    var otherValue = other.valueOf();\n    if (thisValue instanceof BN) {\n      return otherValue instanceof BN ?\n      thisValue.cmp(otherValue) :\n      thisValue.cmpn(otherValue);\n    } else if (otherValue instanceof BN) {\n      return -other.compareTo(this);\n    }\n    assert(typeof otherValue === 'number');\n    return signum(thisValue, otherValue);\n  },\n  toBytesSink: function toBytesSink(sink) {\n    sink.put(this.toBytes());\n  },\n  toBytes: function toBytes() {\n    return serializeUIntN(this.val, this.constructor.width);\n  } });\n\n\nmodule.exports = {\n  UInt: UInt };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/uint.js\n// module id = 48\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/uint.js?");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(43),HashPrefix = _require.HashPrefix;var _require2 =\n__webpack_require__(27),Hash256 = _require2.Hash256;var _require3 =\n__webpack_require__(11),parseBytes = _require3.parseBytes;\nvar createHash = __webpack_require__(65);\n\nvar Sha512Half = makeClass({\n  Sha512Half: function Sha512Half() {\n    this.hash = createHash('sha512');\n  },\n  statics: {\n    put: function put(bytes) {\n      return new this().put(bytes);\n    } },\n\n  put: function put(bytes) {\n    this.hash.update(parseBytes(bytes, Buffer));\n    return this;\n  },\n  finish256: function finish256() {\n    var bytes = this.hash.digest();\n    return bytes.slice(0, 32);\n  },\n  finish: function finish() {\n    return new Hash256(this.finish256());\n  } });\n\n\nfunction sha512Half() {\n  var hash = new Sha512Half();for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}\n  args.forEach(function (a) {return hash.put(a);});\n  return parseBytes(hash.finish256(), Uint8Array);\n}\n\nfunction transactionID(serialized) {\n  return new Hash256(sha512Half(HashPrefix.transactionID, serialized));\n}\n\nmodule.exports = {\n  Sha512Half: Sha512Half,\n  sha512Half: sha512Half,\n  transactionID: transactionID };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/hashes.js\n// module id = 49\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/hashes.js?");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar BigNumber = __webpack_require__(7);\nvar decodeAddress = __webpack_require__(30).decodeAddress;\nvar binary = __webpack_require__(345);\nvar hashprefixes = __webpack_require__(102);\nvar SHAMap = __webpack_require__(103).SHAMap;\nvar SHAMapTreeNode = __webpack_require__(103).SHAMapTreeNode;\nvar ledgerspaces = __webpack_require__(361);\nvar sha512half = __webpack_require__(104);\n\nfunction hash(hex) {\n  return sha512half(new Buffer(hex, 'hex'));\n}\n\nfunction padLeftZero(string, length) {\n  return Array(length - string.length + 1).join('0') + string;\n}\n\nfunction intToHex(integer, byteLength) {\n  return padLeftZero(Number(integer).toString(16), byteLength * 2);\n}\n\nfunction bytesToHex(bytes) {\n  return (new Buffer(bytes)).toString('hex');\n}\n\nfunction bigintToHex(integerString, byteLength) {\n  var hex = (new BigNumber(integerString)).toString(16);\n  return padLeftZero(hex, byteLength * 2);\n}\n\nfunction ledgerSpaceHex(name) {\n  return intToHex(ledgerspaces[name].charCodeAt(0), 2);\n}\n\nfunction addressToHex(address) {\n  return (new Buffer(decodeAddress(address))).toString('hex');\n}\n\nfunction currencyToHex(currency) {\n  if (currency.length === 3) {\n    var bytes = new Array(20 + 1).join('0').split('').map(parseFloat);\n    bytes[12] = currency.charCodeAt(0) & 0xff;\n    bytes[13] = currency.charCodeAt(1) & 0xff;\n    bytes[14] = currency.charCodeAt(2) & 0xff;\n    return bytesToHex(bytes);\n  }\n  return currency;\n}\n\nfunction addLengthPrefix(hex) {\n  var length = hex.length / 2;\n  if (length <= 192) {\n    return bytesToHex([length]) + hex;\n  } else if (length <= 12480) {\n    var x = length - 193;\n    return bytesToHex([193 + (x >>> 8), x & 0xff]) + hex;\n  } else if (length <= 918744) {\n    var x = length - 12481;\n    return bytesToHex([241 + (x >>> 16), x >>> 8 & 0xff, x & 0xff]) + hex;\n  }\n  throw new Error('Variable integer overflow.');\n}\n\nfunction computeBinaryTransactionHash(txBlobHex) {\n  var prefix = hashprefixes.HASH_TX_ID.toString(16).toUpperCase();\n  return hash(prefix + txBlobHex);\n}\n\nfunction computeTransactionHash(txJSON) {\n  return computeBinaryTransactionHash(binary.encode(txJSON));\n}\n\nfunction computeBinaryTransactionSigningHash(txBlobHex) {\n  var prefix = hashprefixes.HASH_TX_SIGN.toString(16).toUpperCase();\n  return hash(prefix + txBlobHex);\n}\n\nfunction computeTransactionSigningHash(txJSON) {\n  return computeBinaryTransactionSigningHash(binary.encode(txJSON));\n}\n\nfunction computeAccountHash(address) {\n  return hash(ledgerSpaceHex('account') + addressToHex(address));\n}\n\nfunction computeSignerListHash(address) {\n  return hash(ledgerSpaceHex('signerList') +\n              addressToHex(address) +\n              '00000000' /* uint32(0) signer list index */);\n}\n\nfunction computeOrderHash(address, sequence) {\n  var prefix = '00' + intToHex(ledgerspaces.offer.charCodeAt(0), 1);\n  return hash(prefix + addressToHex(address) + intToHex(sequence, 4));\n}\n\nfunction computeTrustlineHash(address1, address2, currency) {\n  var address1Hex = addressToHex(address1);\n  var address2Hex = addressToHex(address2);\n\n  var swap = (new BigNumber(address1Hex, 16)).greaterThan(\n    new BigNumber(address2Hex, 16));\n  var lowAddressHex = swap ? address2Hex : address1Hex;\n  var highAddressHex = swap ? address1Hex : address2Hex;\n\n  var prefix = ledgerSpaceHex('rippleState');\n  return hash(prefix + lowAddressHex + highAddressHex +\n              currencyToHex(currency));\n}\n\nfunction computeTransactionTreeHash(transactions) {\n  var shamap = new SHAMap();\n\n  transactions.forEach(function(txJSON) {\n    var txBlobHex = binary.encode(txJSON);\n    var metaHex = binary.encode(txJSON.metaData);\n    var txHash = computeBinaryTransactionHash(txBlobHex);\n    var data = addLengthPrefix(txBlobHex) + addLengthPrefix(metaHex);\n    shamap.add_item(txHash, data, SHAMapTreeNode.TYPE_TRANSACTION_MD);\n  });\n\n  return shamap.hash();\n}\n\nfunction computeStateTreeHash(entries) {\n  var shamap = new SHAMap();\n\n  entries.forEach(function(ledgerEntry) {\n    var data = binary.encode(ledgerEntry);\n    shamap.add_item(ledgerEntry.index, data, SHAMapTreeNode.TYPE_ACCOUNT_STATE);\n  });\n\n  return shamap.hash();\n}\n\n// see rippled Ledger::updateHash()\nfunction computeLedgerHash(ledgerHeader) {\n  var prefix = hashprefixes.HASH_LEDGER.toString(16).toUpperCase();\n  return hash(prefix +\n    intToHex(ledgerHeader.ledger_index, 4) +\n    bigintToHex(ledgerHeader.total_coins, 8) +\n    ledgerHeader.parent_hash +\n    ledgerHeader.transaction_hash +\n    ledgerHeader.account_hash +\n    intToHex(ledgerHeader.parent_close_time, 4) +\n    intToHex(ledgerHeader.close_time, 4) +\n    intToHex(ledgerHeader.close_time_resolution, 1) +\n    intToHex(ledgerHeader.close_flags, 1)\n  );\n}\n\nfunction computeEscrowHash(address, sequence) {\n  return hash(ledgerSpaceHex('escrow') + addressToHex(address) +\n    intToHex(sequence, 4));\n}\n\nfunction computePaymentChannelHash(address, dstAddress, sequence) {\n  return hash(ledgerSpaceHex('paychan') + addressToHex(address) +\n    addressToHex(dstAddress) + intToHex(sequence, 4));\n}\n\nmodule.exports = {\n  computeTransactionHash: computeTransactionHash,\n  computeBinaryTransactionHash: computeBinaryTransactionHash,\n  computeTransactionSigningHash: computeTransactionSigningHash,\n  computeBinaryTransactionSigningHash: computeBinaryTransactionSigningHash,\n  computeAccountHash: computeAccountHash,\n  computeOrderHash: computeOrderHash,\n  computeTrustlineHash: computeTrustlineHash,\n  computeSignerListHash: computeSignerListHash,\n  computeStateTreeHash: computeStateTreeHash,\n  computeTransactionTreeHash: computeTransactionTreeHash,\n  computeLedgerHash: computeLedgerHash,\n  computeEscrowHash: computeEscrowHash,\n  computePaymentChannelHash: computePaymentChannelHash\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/src/index.js\n// module id = 50\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/src/index.js?");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar BN = __webpack_require__(15);\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(22);var Comparable = _require.Comparable;var SerializedType = _require.SerializedType;var _require2 = \n__webpack_require__(12);var serializeUIntN = _require2.serializeUIntN;\nvar MAX_VALUES = [0, 255, 65535, 16777215, 4294967295];\n\nfunction signum(a, b) {\n  return a < b ? -1 : a === b ? 0 : 1;}\n\n\nvar UInt = makeClass({ \n  mixins: [Comparable, SerializedType], \n  UInt: function UInt() {var val = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n    var max = MAX_VALUES[this.constructor.width];\n    if (val < 0 || !(val <= max)) {\n      throw new Error(val + ' not in range 0 <= $val <= ' + max);}\n\n    this.val = val;}, \n\n  statics: { \n    width: 0, \n    fromParser: function fromParser(parser) {\n      var val = this.width > 4 ? parser.read(this.width) : \n      parser.readUIntN(this.width);\n      return new this(val);}, \n\n    from: function from(val) {\n      return val instanceof this ? val : new this(val);} }, \n\n\n  toJSON: function toJSON() {\n    return this.val;}, \n\n  valueOf: function valueOf() {\n    return this.val;}, \n\n  compareTo: function compareTo(other) {\n    var thisValue = this.valueOf();\n    var otherValue = other.valueOf();\n    if (thisValue instanceof BN) {\n      return otherValue instanceof BN ? \n      thisValue.cmp(otherValue) : \n      thisValue.cmpn(otherValue);} else \n    if (otherValue instanceof BN) {\n      return -other.compareTo(this);}\n\n    assert(typeof otherValue === 'number');\n    return signum(thisValue, otherValue);}, \n\n  toBytesSink: function toBytesSink(sink) {\n    sink.put(this.toBytes());}, \n\n  toBytes: function toBytes() {\n    return serializeUIntN(this.val, this.constructor.width);} });\n\n\n\nmodule.exports = { \n  UInt: UInt };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint.js\n// module id = 51\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint.js?");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(44);var HashPrefix = _require.HashPrefix;var _require2 = \n__webpack_require__(28);var Hash256 = _require2.Hash256;var _require3 = \n__webpack_require__(12);var parseBytes = _require3.parseBytes;\nvar createHash = __webpack_require__(65);\n\nvar Sha512Half = makeClass({ \n  Sha512Half: function Sha512Half() {\n    this.hash = createHash('sha512');}, \n\n  statics: { \n    put: function put(bytes) {\n      return new this().put(bytes);} }, \n\n\n  put: function put(bytes) {\n    this.hash.update(parseBytes(bytes, Buffer));\n    return this;}, \n\n  finish256: function finish256() {\n    var bytes = this.hash.digest();\n    return bytes.slice(0, 32);}, \n\n  finish: function finish() {\n    return new Hash256(this.finish256());} });\n\n\n\nfunction sha512Half() {\n  var hash = new Sha512Half();for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}\n  args.forEach(function (a) {return hash.put(a);});\n  return parseBytes(hash.finish256(), Uint8Array);}\n\n\nfunction transactionID(serialized) {\n  return new Hash256(sha512Half(HashPrefix.transactionID, serialized));}\n\n\nmodule.exports = { \n  Sha512Half: Sha512Half, \n  sha512Half: sha512Half, \n  transactionID: transactionID };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/hashes.js\n// module id = 52\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/hashes.js?");

/***/ }),
/* 53 */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 53\n// module chunks = 0\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst bignumber_js_1 = __webpack_require__(7);\nconst ripple_keypairs_1 = __webpack_require__(31);\nconst errors_1 = __webpack_require__(29);\nfunction isValidSecret(secret) {\n    try {\n        ripple_keypairs_1.deriveKeypair(secret);\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\nexports.isValidSecret = isValidSecret;\nfunction dropsToXrp(drops) {\n    if (typeof drops === 'string') {\n        if (!drops.match(/^-?[0-9]*\\.?[0-9]*$/)) {\n            throw new errors_1.ValidationError(`dropsToXrp: invalid value '${drops}',` +\n                ` should be a number matching (^-?[0-9]*\\.?[0-9]*$).`);\n        }\n        else if (drops === '.') {\n            throw new errors_1.ValidationError(`dropsToXrp: invalid value '${drops}',` +\n                ` should be a BigNumber or string-encoded number.`);\n        }\n    }\n    // Converting to BigNumber and then back to string should remove any\n    // decimal point followed by zeros, e.g. '1.00'.\n    // Important: specify base 10 to avoid exponential notation, e.g. '1e-7'.\n    drops = (new bignumber_js_1.default(drops)).toString(10);\n    // drops are only whole units\n    if (drops.includes('.')) {\n        throw new errors_1.ValidationError(`dropsToXrp: value '${drops}' has` +\n            ` too many decimal places.`);\n    }\n    // This should never happen; the value has already been\n    // validated above. This just ensures BigNumber did not do\n    // something unexpected.\n    if (!drops.match(/^-?[0-9]+$/)) {\n        throw new errors_1.ValidationError(`dropsToXrp: failed sanity check -` +\n            ` value '${drops}',` +\n            ` does not match (^-?[0-9]+$).`);\n    }\n    return (new bignumber_js_1.default(drops)).dividedBy(1000000.0).toString(10);\n}\nexports.dropsToXrp = dropsToXrp;\nfunction xrpToDrops(xrp) {\n    if (typeof xrp === 'string') {\n        if (!xrp.match(/^-?[0-9]*\\.?[0-9]*$/)) {\n            throw new errors_1.ValidationError(`xrpToDrops: invalid value '${xrp}',` +\n                ` should be a number matching (^-?[0-9]*\\.?[0-9]*$).`);\n        }\n        else if (xrp === '.') {\n            throw new errors_1.ValidationError(`xrpToDrops: invalid value '${xrp}',` +\n                ` should be a BigNumber or string-encoded number.`);\n        }\n    }\n    // Important: specify base 10 to avoid exponential notation, e.g. '1e-7'.\n    xrp = (new bignumber_js_1.default(xrp)).toString(10);\n    // This should never happen; the value has already been\n    // validated above. This just ensures BigNumber did not do\n    // something unexpected.\n    if (!xrp.match(/^-?[0-9.]+$/)) {\n        throw new errors_1.ValidationError(`xrpToDrops: failed sanity check -` +\n            ` value '${xrp}',` +\n            ` does not match (^-?[0-9.]+$).`);\n    }\n    const components = xrp.split('.');\n    if (components.length > 2) {\n        throw new errors_1.ValidationError(`xrpToDrops: failed sanity check -` +\n            ` value '${xrp}' has` +\n            ` too many decimal points.`);\n    }\n    const fraction = components[1] || '0';\n    if (fraction.length > 6) {\n        throw new errors_1.ValidationError(`xrpToDrops: value '${xrp}' has` +\n            ` too many decimal places.`);\n    }\n    return (new bignumber_js_1.default(xrp)).times(1000000.0).floor().toString(10);\n}\nexports.xrpToDrops = xrpToDrops;\nfunction toRippledAmount(amount) {\n    if (amount.currency === 'XRP') {\n        return xrpToDrops(amount.value);\n    }\n    if (amount.currency === 'drops') {\n        return amount.value;\n    }\n    return {\n        currency: amount.currency,\n        issuer: amount.counterparty ? amount.counterparty :\n            (amount.issuer ? amount.issuer : undefined),\n        value: amount.value\n    };\n}\nexports.toRippledAmount = toRippledAmount;\nfunction convertKeysFromSnakeCaseToCamelCase(obj) {\n    if (typeof obj === 'object') {\n        let newKey;\n        return _.reduce(obj, (result, value, key) => {\n            newKey = key;\n            // taking this out of function leads to error in PhantomJS\n            const FINDSNAKE = /([a-zA-Z]_[a-zA-Z])/g;\n            if (FINDSNAKE.test(key)) {\n                newKey = key.replace(FINDSNAKE, r => r[0] + r[2].toUpperCase());\n            }\n            result[newKey] = convertKeysFromSnakeCaseToCamelCase(value);\n            return result;\n        }, {});\n    }\n    return obj;\n}\nexports.convertKeysFromSnakeCaseToCamelCase = convertKeysFromSnakeCaseToCamelCase;\nfunction removeUndefined(obj) {\n    return _.omitBy(obj, _.isUndefined);\n}\nexports.removeUndefined = removeUndefined;\n/**\n * @param {Number} rpepoch (seconds since 1/1/2000 GMT)\n * @return {Number} ms since unix epoch\n *\n */\nfunction rippleToUnixTimestamp(rpepoch) {\n    return (rpepoch + 0x386D4380) * 1000;\n}\n/**\n * @param {Number|Date} timestamp (ms since unix epoch)\n * @return {Number} seconds since ripple epoch (1/1/2000 GMT)\n */\nfunction unixToRippleTimestamp(timestamp) {\n    return Math.round(timestamp / 1000) - 0x386D4380;\n}\nfunction rippleTimeToISO8601(rippleTime) {\n    return new Date(rippleToUnixTimestamp(rippleTime)).toISOString();\n}\nexports.rippleTimeToISO8601 = rippleTimeToISO8601;\n/**\n * @param {string} iso8601 international standard date format\n * @return {number} seconds since ripple epoch (1/1/2000 GMT)\n */\nfunction iso8601ToRippleTime(iso8601) {\n    return unixToRippleTimestamp(Date.parse(iso8601));\n}\nexports.iso8601ToRippleTime = iso8601ToRippleTime;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/utils.ts\n// module id = 54\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/utils.ts?");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(4)\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/node_modules/safe-buffer/index.js\n// module id = 55\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/node_modules/safe-buffer/index.js?");

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(46);\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(41);\nutil.inherits = __webpack_require__(3);\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(280)\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(85);\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(55).Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(86);\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(26);\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(26);\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17), __webpack_require__(278).setImmediate, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_writable.js\n// module id = 56\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_writable.js?");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(281).Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js\n// module id = 57\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js?");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst payment_1 = __webpack_require__(297);\nconst trustline_1 = __webpack_require__(298);\nconst order_1 = __webpack_require__(299);\nconst cancellation_1 = __webpack_require__(300);\nconst settings_1 = __webpack_require__(301);\nconst escrow_creation_1 = __webpack_require__(302);\nconst escrow_execution_1 = __webpack_require__(303);\nconst escrow_cancellation_1 = __webpack_require__(304);\nconst check_create_1 = __webpack_require__(305);\nconst check_cash_1 = __webpack_require__(306);\nconst check_cancel_1 = __webpack_require__(307);\nconst deposit_preauth_1 = __webpack_require__(308);\nconst payment_channel_create_1 = __webpack_require__(309);\nconst payment_channel_fund_1 = __webpack_require__(310);\nconst payment_channel_claim_1 = __webpack_require__(311);\nconst fee_update_1 = __webpack_require__(312);\nconst amendment_1 = __webpack_require__(313);\nfunction parseTransactionType(type) {\n    // Ordering matches https://developers.ripple.com/transaction-types.html\n    const mapping = {\n        AccountSet: 'settings',\n        CheckCancel: 'checkCancel',\n        CheckCash: 'checkCash',\n        CheckCreate: 'checkCreate',\n        DepositPreauth: 'depositPreauth',\n        EscrowCancel: 'escrowCancellation',\n        EscrowCreate: 'escrowCreation',\n        EscrowFinish: 'escrowExecution',\n        OfferCancel: 'orderCancellation',\n        OfferCreate: 'order',\n        Payment: 'payment',\n        PaymentChannelClaim: 'paymentChannelClaim',\n        PaymentChannelCreate: 'paymentChannelCreate',\n        PaymentChannelFund: 'paymentChannelFund',\n        SetRegularKey: 'settings',\n        SignerListSet: 'settings',\n        TrustSet: 'trustline',\n        EnableAmendment: 'amendment',\n        SetFee: 'feeUpdate' // pseudo-transaction\n    };\n    return mapping[type] || null;\n}\n// includeRawTransaction: undefined by default (getTransaction)\nfunction parseTransaction(tx, includeRawTransaction) {\n    const type = parseTransactionType(tx.TransactionType);\n    const mapping = {\n        'payment': payment_1.default,\n        'trustline': trustline_1.default,\n        'order': order_1.default,\n        'orderCancellation': cancellation_1.default,\n        'settings': settings_1.default,\n        'escrowCreation': escrow_creation_1.default,\n        'escrowExecution': escrow_execution_1.default,\n        'escrowCancellation': escrow_cancellation_1.default,\n        'checkCreate': check_create_1.default,\n        'checkCash': check_cash_1.default,\n        'checkCancel': check_cancel_1.default,\n        'depositPreauth': deposit_preauth_1.default,\n        'paymentChannelCreate': payment_channel_create_1.default,\n        'paymentChannelFund': payment_channel_fund_1.default,\n        'paymentChannelClaim': payment_channel_claim_1.default,\n        'feeUpdate': fee_update_1.default,\n        'amendment': amendment_1.default\n    };\n    const parser = mapping[type];\n    const specification = parser ? parser(tx) : {\n        UNAVAILABLE: 'Unrecognized transaction type.',\n        SEE_RAW_TRANSACTION: 'Since this type is unrecognized, `rawTransaction` is included in this response.'\n    };\n    if (!parser) {\n        includeRawTransaction = true;\n    }\n    const outcome = utils_1.parseOutcome(tx);\n    return common_1.removeUndefined({\n        type: type,\n        address: tx.Account,\n        sequence: tx.Sequence,\n        id: tx.hash,\n        specification: common_1.removeUndefined(specification),\n        outcome: outcome ? common_1.removeUndefined(outcome) : undefined,\n        rawTransaction: includeRawTransaction ? JSON.stringify(tx) : undefined\n    });\n}\nexports.default = parseTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/transaction.ts\n// module id = 58\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/transaction.ts?");

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(30),decodeAccountID = _require.decodeAccountID,encodeAccountID = _require.encodeAccountID;var _require2 =\n__webpack_require__(60),Hash160 = _require2.Hash160;\n\nvar AccountID = makeClass({\n  AccountID: function AccountID(bytes) {\n    Hash160.call(this, bytes);\n  },\n  inherits: Hash160,\n  statics: {\n    from: function from(value) {\n      return value instanceof this ? value :\n      /^r/.test(value) ? this.fromBase58(value) :\n      new this(value);\n    },\n    cache: {},\n    fromCache: function fromCache(base58) {\n      var cached = this.cache[base58];\n      if (!cached) {\n        cached = this.cache[base58] = this.fromBase58(base58);\n      }\n      return cached;\n    },\n    fromBase58: function fromBase58(value) {\n      var acc = new this(decodeAccountID(value));\n      acc._toBase58 = value;\n      return acc;\n    } },\n\n  toJSON: function toJSON() {\n    return this.toBase58();\n  },\n  cached: {\n    toBase58: function toBase58() {\n      return encodeAccountID(this._bytes);\n    } } });\n\n\n\nmodule.exports = {\n  AccountID: AccountID };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/account-id.js\n// module id = 59\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/account-id.js?");

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(61),Hash = _require.Hash;\n\nvar Hash160 = makeClass({\n  inherits: Hash,\n  statics: { width: 20 } });\n\n\nmodule.exports = {\n  Hash160: Hash160 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/hash-160.js\n// module id = 60\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/hash-160.js?");

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(20),Comparable = _require.Comparable,SerializedType = _require.SerializedType;var _require2 =\n__webpack_require__(11),compareBytes = _require2.compareBytes,parseBytes = _require2.parseBytes;\n\nvar Hash = makeClass({\n  Hash: function Hash(bytes) {\n    var width = this.constructor.width;\n    this._bytes = bytes ? parseBytes(bytes, Uint8Array) :\n    new Uint8Array(width);\n    assert.equal(this._bytes.length, width);\n  },\n  mixins: [Comparable, SerializedType],\n  statics: {\n    width: NaN,\n    from: function from(value) {\n      if (value instanceof this) {\n        return value;\n      }\n      return new this(parseBytes(value));\n    },\n    fromParser: function fromParser(parser, hint) {\n      return new this(parser.read(hint || this.width));\n    } },\n\n  compareTo: function compareTo(other) {\n    return compareBytes(this._bytes, this.constructor.from(other)._bytes);\n  },\n  toString: function toString() {\n    return this.toHex();\n  },\n  nibblet: function nibblet(depth) {\n    var byte_ix = depth > 0 ? depth / 2 | 0 : 0;\n    var b = this._bytes[byte_ix];\n    if (depth % 2 === 0) {\n      b = (b & 0xF0) >>> 4;\n    } else {\n      b = b & 0x0F;\n    }\n    return b;\n  } });\n\n\nmodule.exports = {\n  Hash: Hash };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/hash.js\n// module id = 61\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/hash.js?");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);var _require =\n__webpack_require__(11),parseBytes = _require.parseBytes,bytesToHex = _require.bytesToHex;\nvar makeClass = __webpack_require__(5);var _require2 =\n__webpack_require__(33),Type = _require2.Type,Field = _require2.Field;\n\nvar BytesSink = {\n  put: function put() /* bytesSequence */{\n    // any hex string or any object with a `length` and where 0 <= [ix] <= 255\n  } };\n\n\nvar BytesList = makeClass({\n  implementing: BytesSink,\n  BytesList: function BytesList() {\n    this.arrays = [];\n    this.length = 0;\n  },\n  put: function put(bytesArg) {\n    var bytes = parseBytes(bytesArg, Uint8Array);\n    this.length += bytes.length;\n    this.arrays.push(bytes);\n    return this;\n  },\n  toBytesSink: function toBytesSink(sink) {\n    this.arrays.forEach(function (arr) {\n      sink.put(arr);\n    });\n  },\n  toBytes: function toBytes() {\n    var concatenated = new Uint8Array(this.length);\n    var pointer = 0;\n    this.arrays.forEach(function (arr) {\n      concatenated.set(arr, pointer);\n      pointer += arr.length;\n    });\n    return concatenated;\n  },\n  toHex: function toHex() {\n    return bytesToHex(this.toBytes());\n  } });\n\n\nvar BinarySerializer = makeClass({\n  BinarySerializer: function BinarySerializer(sink) {\n    this.sink = sink;\n  },\n  write: function write(value) {\n    value.toBytesSink(this.sink);\n  },\n  put: function put(bytes) {\n    this.sink.put(bytes);\n  },\n  writeType: function writeType(type, value) {\n    this.write(type.from(value));\n  },\n  writeBytesList: function writeBytesList(bl) {\n    bl.toBytesSink(this.sink);\n  },\n  encodeVL: function encodeVL(len) {\n    var length = len;\n    var lenBytes = new Uint8Array(4);\n    if (length <= 192) {\n      lenBytes[0] = length;\n      return lenBytes.subarray(0, 1);\n    } else if (length <= 12480) {\n      length -= 193;\n      lenBytes[0] = 193 + (length >>> 8);\n      lenBytes[1] = length & 0xff;\n      return lenBytes.subarray(0, 2);\n    } else if (length <= 918744) {\n      length -= 12481;\n      lenBytes[0] = 241 + (length >>> 16);\n      lenBytes[1] = length >> 8 & 0xff;\n      lenBytes[2] = length & 0xff;\n      return lenBytes.subarray(0, 3);\n    }\n    throw new Error('Overflow error');\n  },\n  writeFieldAndValue: function writeFieldAndValue(field, _value) {\n    var sink = this.sink;\n    var value = field.associatedType.from(_value);\n    assert(value.toBytesSink, field);\n    sink.put(field.bytes);\n\n    if (field.isVLEncoded) {\n      this.writeLengthEncoded(value);\n    } else {\n      value.toBytesSink(sink);\n      if (field.type === Type.STObject) {\n        sink.put(Field.ObjectEndMarker.bytes);\n      } else if (field.type === Type.STArray) {\n        sink.put(Field.ArrayEndMarker.bytes);\n      }\n    }\n  },\n  writeLengthEncoded: function writeLengthEncoded(value) {\n    var bytes = new BytesList();\n    value.toBytesSink(bytes);\n    this.put(this.encodeVL(bytes.length));\n    this.writeBytesList(bytes);\n  } });\n\n\nmodule.exports = {\n  BytesList: BytesList,\n  BinarySerializer: BinarySerializer };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/serdes/binary-serializer.js\n// module id = 62\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/serdes/binary-serializer.js?");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _ = __webpack_require__(1);\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(11),slice = _require.slice;var _require2 =\n__webpack_require__(60),Hash160 = _require2.Hash160;\nvar ISO_REGEX = /^[A-Z0-9]{3}$/;\nvar HEX_REGEX = /^[A-F0-9]{40}$/;\n\nfunction isoToBytes(iso) {\n  var bytes = new Uint8Array(20);\n  if (iso !== 'XRP') {\n    var isoBytes = iso.split('').map(function (c) {return c.charCodeAt(0);});\n    bytes.set(isoBytes, 12);\n  }\n  return bytes;\n}\n\nfunction isISOCode(val) {\n  return val.length === 3; // ISO_REGEX.test(val);\n}\n\nfunction isHex(val) {\n  return HEX_REGEX.test(val);\n}\n\nfunction isStringRepr(val) {\n  return _.isString(val) && (isISOCode(val) || isHex(val));\n}\n\nfunction isBytesArray(val) {\n  return val.length === 20;\n}\n\nfunction isValidRepr(val) {\n  return isStringRepr(val) || isBytesArray(val);\n}\n\nfunction bytesFromRepr(val) {\n  if (isValidRepr(val)) {\n    // We assume at this point that we have an object with a length, either 3,\n    // 20 or 40.\n    return val.length === 3 ? isoToBytes(val) : val;\n  }\n  throw new Error('Unsupported Currency repr: ' + val);\n}\n\nvar $uper = Hash160.prototype;\nvar Currency = makeClass({\n  inherits: Hash160,\n  getters: ['isNative', 'iso'],\n  statics: {\n    init: function init() {\n      this.XRP = new this(new Uint8Array(20));\n    },\n    from: function from(val) {\n      return val instanceof this ? val : new this(bytesFromRepr(val));\n    } },\n\n  Currency: function Currency(bytes) {\n    Hash160.call(this, bytes);\n    this.classify();\n  },\n  classify: function classify() {\n    // We only have a non null iso() property available if the currency can be\n    // losslessly represented by the 3 letter iso code. If none is available a\n    // hex encoding of the full 20 bytes is the canonical representation.\n    var onlyISO = true;\n\n    var bytes = this._bytes;\n    var code = slice(this._bytes, 12, 15, Array);\n    var iso = code.map(function (c) {return String.fromCharCode(c);}).join('');\n\n    for (var i = bytes.length - 1; i >= 0; i--) {\n      if (bytes[i] !== 0 && !(i === 12 || i === 13 || i === 14)) {\n        onlyISO = false;\n        break;\n      }\n    }\n    var lossLessISO = onlyISO && iso !== 'XRP' && ISO_REGEX.test(iso);\n    this._isNative = onlyISO && _.isEqual(code, [0, 0, 0]);\n    this._iso = this._isNative ? 'XRP' : lossLessISO ? iso : null;\n  },\n  toJSON: function toJSON() {\n    if (this.iso()) {\n      return this.iso();\n    }\n    return $uper.toJSON.call(this);\n  } });\n\n\nmodule.exports = {\n  Currency: Currency };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/currency.js\n// module id = 63\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/currency.js?");

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" /* eslint-disable func-style */\n\nvar BN = __webpack_require__(15);\nvar types = __webpack_require__(27);var _require =\n__webpack_require__(43),HashPrefix = _require.HashPrefix;var _require2 =\n__webpack_require__(327),BinaryParser = _require2.BinaryParser;var _require3 =\n__webpack_require__(62),BinarySerializer = _require3.BinarySerializer,BytesList = _require3.BytesList;var _require4 =\n__webpack_require__(11),bytesToHex = _require4.bytesToHex,slice = _require4.slice,parseBytes = _require4.parseBytes;var _require5 =\n\n__webpack_require__(49),sha512Half = _require5.sha512Half,transactionID = _require5.transactionID;\n\nvar makeParser = function makeParser(bytes) {return new BinaryParser(bytes);};\nvar readJSON = function readJSON(parser) {return parser.readType(types.STObject).toJSON();};\nvar binaryToJSON = function binaryToJSON(bytes) {return readJSON(makeParser(bytes));};\n\nfunction serializeObject(object) {var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var\n  prefix = opts.prefix,suffix = opts.suffix,_opts$signingFieldsOn = opts.signingFieldsOnly,signingFieldsOnly = _opts$signingFieldsOn === undefined ? false : _opts$signingFieldsOn;\n  var bytesList = new BytesList();\n  if (prefix) {\n    bytesList.put(prefix);\n  }\n  var filter = signingFieldsOnly ? function (f) {return f.isSigningField;} : undefined;\n  types.STObject.from(object).toBytesSink(bytesList, filter);\n  if (suffix) {\n    bytesList.put(suffix);\n  }\n  return bytesList.toBytes();\n}\n\nfunction signingData(tx) {var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : HashPrefix.transactionSig;\n  return serializeObject(tx, { prefix: prefix, signingFieldsOnly: true });\n}\n\nfunction signingClaimData(claim) {\n  var prefix = HashPrefix.paymentChannelClaim;\n  var channel = types.Hash256.from(claim.channel).toBytes();\n  var amount = new types.UInt64(new BN(claim.amount)).toBytes();\n\n  var bytesList = new BytesList();\n\n  bytesList.put(prefix);\n  bytesList.put(channel);\n  bytesList.put(amount);\n  return bytesList.toBytes();\n}\n\nfunction multiSigningData(tx, signingAccount) {\n  var prefix = HashPrefix.transactionMultiSig;\n  var suffix = types.AccountID.from(signingAccount).toBytes();\n  return serializeObject(tx, { prefix: prefix, suffix: suffix, signingFieldsOnly: true });\n}\n\nmodule.exports = {\n  BinaryParser: BinaryParser,\n  BinarySerializer: BinarySerializer,\n  BytesList: BytesList,\n  makeParser: makeParser,\n  serializeObject: serializeObject,\n  readJSON: readJSON,\n  bytesToHex: bytesToHex,\n  parseBytes: parseBytes,\n  multiSigningData: multiSigningData,\n  signingData: signingData,\n  signingClaimData: signingClaimData,\n  binaryToJSON: binaryToJSON,\n  sha512Half: sha512Half,\n  transactionID: transactionID,\n  slice: slice };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/binary.js\n// module id = 64\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/binary.js?");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar inherits = __webpack_require__(3)\nvar md5 = __webpack_require__(328)\nvar RIPEMD160 = __webpack_require__(330)\nvar sha = __webpack_require__(336)\n\nvar Base = __webpack_require__(341)\n\nfunction HashNoConstructor (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n  this.buffers = []\n}\n\ninherits(HashNoConstructor, Base)\n\nHashNoConstructor.prototype._update = function (data) {\n  this.buffers.push(data)\n}\n\nHashNoConstructor.prototype._final = function () {\n  var buf = Buffer.concat(this.buffers)\n  var r = this._hash(buf)\n  this.buffers = null\n\n  return r\n}\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new HashNoConstructor(md5)\n  if (alg === 'rmd160' || alg === 'ripemd160') return new Hash(new RIPEMD160())\n\n  return new Hash(sha(alg))\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/create-hash/browser.js\n// module id = 65\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/create-hash/browser.js?");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(30);var decodeAccountID = _require.decodeAccountID;var encodeAccountID = _require.encodeAccountID;var _require2 = \n__webpack_require__(67);var Hash160 = _require2.Hash160;\n\nvar AccountID = makeClass({ \n  AccountID: function AccountID(bytes) {\n    Hash160.call(this, bytes);}, \n\n  inherits: Hash160, \n  statics: { \n    from: function from(value) {\n      return value instanceof this ? value : \n      /^r/.test(value) ? this.fromBase58(value) : \n      new this(value);}, \n\n    cache: {}, \n    fromCache: function fromCache(base58) {\n      var cached = this.cache[base58];\n      if (!cached) {\n        cached = this.cache[base58] = this.fromBase58(base58);}\n\n      return cached;}, \n\n    fromBase58: function fromBase58(value) {\n      var acc = new this(decodeAccountID(value));\n      acc._toBase58 = value;\n      return acc;} }, \n\n\n  toJSON: function toJSON() {\n    return this.toBase58();}, \n\n  cached: { \n    toBase58: function toBase58() {\n      return encodeAccountID(this._bytes);} } });\n\n\n\n\nmodule.exports = { \n  AccountID: AccountID };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/account-id.js\n// module id = 66\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/account-id.js?");

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(68);var Hash = _require.Hash;\n\nvar Hash160 = makeClass({ \n  inherits: Hash, \n  statics: { width: 20 } });\n\n\nmodule.exports = { \n  Hash160: Hash160 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash-160.js\n// module id = 67\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash-160.js?");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(22);var Comparable = _require.Comparable;var SerializedType = _require.SerializedType;var _require2 = \n__webpack_require__(12);var compareBytes = _require2.compareBytes;var parseBytes = _require2.parseBytes;\n\nvar Hash = makeClass({ \n  Hash: function Hash(bytes) {\n    var width = this.constructor.width;\n    this._bytes = bytes ? parseBytes(bytes, Uint8Array) : \n    new Uint8Array(width);\n    assert.equal(this._bytes.length, width);}, \n\n  mixins: [Comparable, SerializedType], \n  statics: { \n    width: NaN, \n    from: function from(value) {\n      if (value instanceof this) {\n        return value;}\n\n      return new this(parseBytes(value));}, \n\n    fromParser: function fromParser(parser, hint) {\n      return new this(parser.read(hint || this.width));} }, \n\n\n  compareTo: function compareTo(other) {\n    return compareBytes(this._bytes, this.constructor.from(other)._bytes);}, \n\n  toString: function toString() {\n    return this.toHex();}, \n\n  nibblet: function nibblet(depth) {\n    var byte_ix = depth > 0 ? depth / 2 | 0 : 0;\n    var b = this._bytes[byte_ix];\n    if (depth % 2 === 0) {\n      b = (b & 0xF0) >>> 4;} else \n    {\n      b = b & 0x0F;}\n\n    return b;} });\n\n\n\nmodule.exports = { \n  Hash: Hash };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash.js\n// module id = 68\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash.js?");

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);var _require = \n__webpack_require__(12);var parseBytes = _require.parseBytes;var bytesToHex = _require.bytesToHex;\nvar makeClass = __webpack_require__(6);var _require2 = \n__webpack_require__(35);var Type = _require2.Type;var Field = _require2.Field;\n\nvar BytesSink = { \n  put: function put() /* bytesSequence */{\n    // any hex string or any object with a `length` and where 0 <= [ix] <= 255\n  } };\n\n\nvar BytesList = makeClass({ \n  implementing: BytesSink, \n  BytesList: function BytesList() {\n    this.arrays = [];\n    this.length = 0;}, \n\n  put: function put(bytesArg) {\n    var bytes = parseBytes(bytesArg, Uint8Array);\n    this.length += bytes.length;\n    this.arrays.push(bytes);\n    return this;}, \n\n  toBytesSink: function toBytesSink(sink) {\n    this.arrays.forEach(function (arr) {\n      sink.put(arr);});}, \n\n\n  toBytes: function toBytes() {\n    var concatenated = new Uint8Array(this.length);\n    var pointer = 0;\n    this.arrays.forEach(function (arr) {\n      concatenated.set(arr, pointer);\n      pointer += arr.length;});\n\n    return concatenated;}, \n\n  toHex: function toHex() {\n    return bytesToHex(this.toBytes());} });\n\n\n\nvar BinarySerializer = makeClass({ \n  BinarySerializer: function BinarySerializer(sink) {\n    this.sink = sink;}, \n\n  write: function write(value) {\n    value.toBytesSink(this.sink);}, \n\n  put: function put(bytes) {\n    this.sink.put(bytes);}, \n\n  writeType: function writeType(type, value) {\n    this.write(type.from(value));}, \n\n  writeBytesList: function writeBytesList(bl) {\n    bl.toBytesSink(this.sink);}, \n\n  encodeVL: function encodeVL(len) {\n    var length = len;\n    var lenBytes = new Uint8Array(4);\n    if (length <= 192) {\n      lenBytes[0] = length;\n      return lenBytes.subarray(0, 1);} else \n    if (length <= 12480) {\n      length -= 193;\n      lenBytes[0] = 193 + (length >>> 8);\n      lenBytes[1] = length & 0xff;\n      return lenBytes.subarray(0, 2);} else \n    if (length <= 918744) {\n      length -= 12481;\n      lenBytes[0] = 241 + (length >>> 16);\n      lenBytes[1] = length >> 8 & 0xff;\n      lenBytes[2] = length & 0xff;\n      return lenBytes.subarray(0, 3);}\n\n    throw new Error('Overflow error');}, \n\n  writeFieldAndValue: function writeFieldAndValue(field, _value) {\n    var sink = this.sink;\n    var value = field.associatedType.from(_value);\n    assert(value.toBytesSink, field);\n    sink.put(field.bytes);\n\n    if (field.isVLEncoded) {\n      this.writeLengthEncoded(value);} else \n    {\n      value.toBytesSink(sink);\n      if (field.type === Type.STObject) {\n        sink.put(Field.ObjectEndMarker.bytes);} else \n      if (field.type === Type.STArray) {\n        sink.put(Field.ArrayEndMarker.bytes);}}}, \n\n\n\n  writeLengthEncoded: function writeLengthEncoded(value) {\n    var bytes = new BytesList();\n    value.toBytesSink(bytes);\n    this.put(this.encodeVL(bytes.length));\n    this.writeBytesList(bytes);} });\n\n\n\nmodule.exports = { \n  BytesList: BytesList, \n  BinarySerializer: BinarySerializer };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/serdes/binary-serializer.js\n// module id = 69\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/serdes/binary-serializer.js?");

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _ = __webpack_require__(1);\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(12);var slice = _require.slice;var _require2 = \n__webpack_require__(67);var Hash160 = _require2.Hash160;\nvar ISO_REGEX = /^[A-Z0-9]{3}$/;\nvar HEX_REGEX = /^[A-F0-9]{40}$/;\n\nfunction isoToBytes(iso) {\n  var bytes = new Uint8Array(20);\n  if (iso !== 'XRP') {\n    var isoBytes = iso.split('').map(function (c) {return c.charCodeAt(0);});\n    bytes.set(isoBytes, 12);}\n\n  return bytes;}\n\n\nfunction isISOCode(val) {\n  return val.length === 3; // ISO_REGEX.test(val);\n}\n\nfunction isHex(val) {\n  return HEX_REGEX.test(val);}\n\n\nfunction isStringRepr(val) {\n  return _.isString(val) && (isISOCode(val) || isHex(val));}\n\n\nfunction isBytesArray(val) {\n  return val.length === 20;}\n\n\nfunction isValidRepr(val) {\n  return isStringRepr(val) || isBytesArray(val);}\n\n\nfunction bytesFromRepr(val) {\n  if (isValidRepr(val)) {\n    // We assume at this point that we have an object with a length, either 3,\n    // 20 or 40.\n    return val.length === 3 ? isoToBytes(val) : val;}\n\n  throw new Error('Unsupported Currency repr: ' + val);}\n\n\nvar $uper = Hash160.prototype;\nvar Currency = makeClass({ \n  inherits: Hash160, \n  getters: ['isNative', 'iso'], \n  statics: { \n    init: function init() {\n      this.XRP = new this(new Uint8Array(20));}, \n\n    from: function from(val) {\n      return val instanceof this ? val : new this(bytesFromRepr(val));} }, \n\n\n  Currency: function Currency(bytes) {\n    Hash160.call(this, bytes);\n    this.classify();}, \n\n  classify: function classify() {\n    // We only have a non null iso() property available if the currency can be\n    // losslessly represented by the 3 letter iso code. If none is available a\n    // hex encoding of the full 20 bytes is the canonical representation.\n    var onlyISO = true;\n\n    var bytes = this._bytes;\n    var code = slice(this._bytes, 12, 15, Array);\n    var iso = code.map(function (c) {return String.fromCharCode(c);}).join('');\n\n    for (var i = bytes.length - 1; i >= 0; i--) {\n      if (bytes[i] !== 0 && !(i === 12 || i === 13 || i === 14)) {\n        onlyISO = false;\n        break;}}\n\n\n    var lossLessISO = onlyISO && iso !== 'XRP' && ISO_REGEX.test(iso);\n    this._isNative = onlyISO && _.isEqual(code, [0, 0, 0]);\n    this._iso = this._isNative ? 'XRP' : lossLessISO ? iso : null;}, \n\n  toJSON: function toJSON() {\n    if (this.iso()) {\n      return this.iso();}\n\n    return $uper.toJSON.call(this);} });\n\n\n\nmodule.exports = { \n  Currency: Currency };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/currency.js\n// module id = 70\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/currency.js?");

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" /* eslint-disable func-style */\n\nvar BN = __webpack_require__(15);\nvar types = __webpack_require__(28);var _require = \n__webpack_require__(44);var HashPrefix = _require.HashPrefix;var _require2 = \n__webpack_require__(357);var BinaryParser = _require2.BinaryParser;var _require3 = \n__webpack_require__(69);var BinarySerializer = _require3.BinarySerializer;var BytesList = _require3.BytesList;var _require4 = \n__webpack_require__(12);var bytesToHex = _require4.bytesToHex;var slice = _require4.slice;var parseBytes = _require4.parseBytes;var _require5 = \n\n__webpack_require__(52);var sha512Half = _require5.sha512Half;var transactionID = _require5.transactionID;\n\nvar makeParser = function makeParser(bytes) {return new BinaryParser(bytes);};\nvar readJSON = function readJSON(parser) {return parser.readType(types.STObject).toJSON();};\nvar binaryToJSON = function binaryToJSON(bytes) {return readJSON(makeParser(bytes));};\n\nfunction serializeObject(object) {var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];var \n  prefix = opts.prefix;var suffix = opts.suffix;var _opts$signingFieldsOn = opts.signingFieldsOnly;var signingFieldsOnly = _opts$signingFieldsOn === undefined ? false : _opts$signingFieldsOn;\n  var bytesList = new BytesList();\n  if (prefix) {\n    bytesList.put(prefix);}\n\n  var filter = signingFieldsOnly ? function (f) {return f.isSigningField;} : undefined;\n  types.STObject.from(object).toBytesSink(bytesList, filter);\n  if (suffix) {\n    bytesList.put(suffix);}\n\n  return bytesList.toBytes();}\n\n\nfunction signingData(tx) {var prefix = arguments.length <= 1 || arguments[1] === undefined ? HashPrefix.transactionSig : arguments[1];\n  return serializeObject(tx, { prefix: prefix, signingFieldsOnly: true });}\n\n\nfunction signingClaimData(claim) {\n  var prefix = HashPrefix.paymentChannelClaim;\n  var channel = types.Hash256.from(claim.channel).toBytes();\n  var amount = new types.UInt64(new BN(claim.amount)).toBytes();\n\n  var bytesList = new BytesList();\n\n  bytesList.put(prefix);\n  bytesList.put(channel);\n  bytesList.put(amount);\n  return bytesList.toBytes();}\n\n\nfunction multiSigningData(tx, signingAccount) {\n  var prefix = HashPrefix.transactionMultiSig;\n  var suffix = types.AccountID.from(signingAccount).toBytes();\n  return serializeObject(tx, { prefix: prefix, suffix: suffix, signingFieldsOnly: true });}\n\n\nmodule.exports = { \n  BinaryParser: BinaryParser, \n  BinarySerializer: BinarySerializer, \n  BytesList: BytesList, \n  makeParser: makeParser, \n  serializeObject: serializeObject, \n  readJSON: readJSON, \n  bytesToHex: bytesToHex, \n  parseBytes: parseBytes, \n  multiSigningData: multiSigningData, \n  signingData: signingData, \n  signingClaimData: signingClaimData, \n  binaryToJSON: binaryToJSON, \n  sha512Half: sha512Half, \n  transactionID: transactionID, \n  slice: slice };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/binary.js\n// module id = 71\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/binary.js?");

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = __webpack_require__(23);\nconst common_1 = __webpack_require__(0);\nconst server_1 = __webpack_require__(292);\nconst transaction_1 = __webpack_require__(88);\nconst transactions_1 = __webpack_require__(314);\nconst trustlines_1 = __webpack_require__(362);\nconst balances_1 = __webpack_require__(364);\nconst balance_sheet_1 = __webpack_require__(365);\nconst pathfind_1 = __webpack_require__(366);\nconst orders_1 = __webpack_require__(368);\nconst orderbook_1 = __webpack_require__(370);\nconst settings_1 = __webpack_require__(372);\nconst accountinfo_1 = __webpack_require__(373);\nconst accountobjects_1 = __webpack_require__(374);\nconst payment_channel_1 = __webpack_require__(375);\nconst payment_1 = __webpack_require__(377);\nconst trustline_1 = __webpack_require__(378);\nconst order_1 = __webpack_require__(379);\nconst ordercancellation_1 = __webpack_require__(380);\nconst escrow_creation_1 = __webpack_require__(381);\nconst escrow_execution_1 = __webpack_require__(382);\nconst escrow_cancellation_1 = __webpack_require__(383);\nconst payment_channel_create_1 = __webpack_require__(384);\nconst payment_channel_fund_1 = __webpack_require__(385);\nconst payment_channel_claim_1 = __webpack_require__(386);\nconst check_create_1 = __webpack_require__(387);\nconst check_cancel_1 = __webpack_require__(388);\nconst check_cash_1 = __webpack_require__(389);\nconst settings_2 = __webpack_require__(390);\nconst sign_1 = __webpack_require__(391);\nconst combine_1 = __webpack_require__(392);\nconst submit_1 = __webpack_require__(393);\nconst generate_address_1 = __webpack_require__(394);\nconst derive_1 = __webpack_require__(395);\nconst ledgerhash_1 = __webpack_require__(396);\nconst sign_payment_channel_claim_1 = __webpack_require__(397);\nconst verify_payment_channel_claim_1 = __webpack_require__(398);\nconst ledger_1 = __webpack_require__(399);\nconst rangeset_1 = __webpack_require__(81);\nconst ledgerUtils = __webpack_require__(19);\nconst transactionUtils = __webpack_require__(8);\nconst schemaValidator = __webpack_require__(74);\nconst serverinfo_1 = __webpack_require__(80);\nconst utils_1 = __webpack_require__(19);\n/**\n * Get the response key / property name that contains the listed data for a\n * command. This varies from command to command, but we need to know it to\n * properly count across many requests.\n */\nfunction getCollectKeyFromCommand(command) {\n    switch (command) {\n        case 'account_offers':\n        case 'book_offers':\n            return 'offers';\n        case 'account_lines':\n            return 'lines';\n        default:\n            return undefined;\n    }\n}\nclass RippleAPI extends events_1.EventEmitter {\n    constructor(options = {}) {\n        super();\n        this.connect = server_1.connect;\n        this.disconnect = server_1.disconnect;\n        this.isConnected = server_1.isConnected;\n        this.getServerInfo = serverinfo_1.getServerInfo;\n        this.getFee = serverinfo_1.getFee;\n        this.getLedgerVersion = server_1.getLedgerVersion;\n        this.getTransaction = transaction_1.default;\n        this.getTransactions = transactions_1.default;\n        this.getTrustlines = trustlines_1.default;\n        this.getBalances = balances_1.default;\n        this.getBalanceSheet = balance_sheet_1.default;\n        this.getPaths = pathfind_1.default;\n        this.getOrderbook = orderbook_1.getOrderbook;\n        this.getOrders = orders_1.default;\n        this.getSettings = settings_1.getSettings;\n        this.getAccountInfo = accountinfo_1.default;\n        this.getAccountObjects = accountobjects_1.default;\n        this.getPaymentChannel = payment_channel_1.default;\n        this.getLedger = ledger_1.default;\n        this.parseAccountFlags = settings_1.parseAccountFlags;\n        this.preparePayment = payment_1.default;\n        this.prepareTrustline = trustline_1.default;\n        this.prepareOrder = order_1.default;\n        this.prepareOrderCancellation = ordercancellation_1.default;\n        this.prepareEscrowCreation = escrow_creation_1.default;\n        this.prepareEscrowExecution = escrow_execution_1.default;\n        this.prepareEscrowCancellation = escrow_cancellation_1.default;\n        this.preparePaymentChannelCreate = payment_channel_create_1.default;\n        this.preparePaymentChannelFund = payment_channel_fund_1.default;\n        this.preparePaymentChannelClaim = payment_channel_claim_1.default;\n        this.prepareCheckCreate = check_create_1.default;\n        this.prepareCheckCash = check_cash_1.default;\n        this.prepareCheckCancel = check_cancel_1.default;\n        this.prepareSettings = settings_2.default;\n        this.sign = sign_1.default;\n        this.combine = combine_1.default;\n        this.submit = submit_1.default;\n        this.generateAddress = generate_address_1.generateAddressAPI;\n        this.deriveKeypair = derive_1.deriveKeypair;\n        this.deriveAddress = derive_1.deriveAddress;\n        this.computeLedgerHash = ledgerhash_1.default;\n        this.signPaymentChannelClaim = sign_payment_channel_claim_1.default;\n        this.verifyPaymentChannelClaim = verify_payment_channel_claim_1.default;\n        this.errors = common_1.errors;\n        this.xrpToDrops = common_1.xrpToDrops;\n        this.dropsToXrp = common_1.dropsToXrp;\n        this.iso8601ToRippleTime = common_1.iso8601ToRippleTime;\n        this.txFlags = common_1.txFlags;\n        this.isValidAddress = schemaValidator.isValidAddress;\n        this.isValidSecret = schemaValidator.isValidSecret;\n        common_1.validate.apiOptions(options);\n        this._feeCushion = options.feeCushion || 1.2;\n        this._maxFeeXRP = options.maxFeeXRP || '2';\n        const serverURL = options.server;\n        if (serverURL !== undefined) {\n            this.connection = new common_1.Connection(serverURL, options);\n            this.connection.on('ledgerClosed', message => {\n                this.emit('ledger', server_1.formatLedgerClose(message));\n            });\n            this.connection.on('error', (errorCode, errorMessage, data) => {\n                this.emit('error', errorCode, errorMessage, data);\n            });\n            this.connection.on('connected', () => {\n                this.emit('connected');\n            });\n            this.connection.on('disconnected', code => {\n                this.emit('disconnected', code);\n            });\n        }\n        else {\n            // use null object pattern to provide better error message if user\n            // tries to call a method that requires a connection\n            this.connection = new common_1.Connection(null, options);\n        }\n    }\n    request(command, params = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.connection.request(Object.assign({}, params, { command }));\n        });\n    }\n    /**\n     * Returns true if there are more pages of data.\n     *\n     * When there are more results than contained in the response, the response\n     * includes a `marker` field.\n     *\n     * See https://ripple.com/build/rippled-apis/#markers-and-pagination\n     */\n    hasNextPage(currentResponse) {\n        return !!currentResponse.marker;\n    }\n    requestNextPage(command, params = {}, currentResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!currentResponse.marker) {\n                return Promise.reject(new common_1.errors.NotFoundError('response does not have a next page'));\n            }\n            const nextPageParams = Object.assign({}, params, {\n                marker: currentResponse.marker\n            });\n            return this.request(command, nextPageParams);\n        });\n    }\n    /**\n     * Prepare a transaction.\n     *\n     * You can later submit the transaction with `submit()`.\n     */\n    prepareTransaction(txJSON, instructions = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return transactionUtils.prepareTransaction(txJSON, this, instructions);\n        });\n    }\n    /**\n     * Convert a string to hex.\n     *\n     * This can be used to generate `MemoData`, `MemoType`, and `MemoFormat`.\n     *\n     * @param string string to convert to hex\n     */\n    convertStringToHex(string) {\n        return transactionUtils.convertStringToHex(string);\n    }\n    _requestAll(command, params = {}, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The data under collection is keyed based on the command. Fail if command\n            // not recognized and collection key not provided.\n            const collectKey = options.collect || getCollectKeyFromCommand(command);\n            if (!collectKey) {\n                throw new common_1.errors.ValidationError(`no collect key for command ${command}`);\n            }\n            // If limit is not provided, fetches all data over multiple requests.\n            // NOTE: This may return much more than needed. Set limit when possible.\n            const countTo = (params.limit !== undefined) ? params.limit : Infinity;\n            let count = 0;\n            let marker = params.marker;\n            let lastBatchLength;\n            const results = [];\n            do {\n                const countRemaining = utils_1.clamp(countTo - count, 10, 400);\n                const repeatProps = Object.assign({}, params, { limit: countRemaining, marker });\n                const singleResult = yield this.request(command, repeatProps);\n                const collectedData = singleResult[collectKey];\n                marker = singleResult['marker'];\n                results.push(singleResult);\n                // Make sure we handle when no data (not even an empty array) is returned.\n                const isExpectedFormat = Array.isArray(collectedData);\n                if (isExpectedFormat) {\n                    count += collectedData.length;\n                    lastBatchLength = collectedData.length;\n                }\n                else {\n                    lastBatchLength = 0;\n                }\n            } while (!!marker && count < countTo && lastBatchLength !== 0);\n            return results;\n        });\n    }\n}\n// these are exposed only for use by unit tests; they are not part of the API.\nRippleAPI._PRIVATE = {\n    validate: common_1.validate,\n    RangeSet: rangeset_1.default,\n    ledgerUtils,\n    schemaValidator\n};\nRippleAPI.renameCounterpartyToIssuer = utils_1.renameCounterpartyToIssuer;\nRippleAPI.formatBidsAndAsks = orderbook_1.formatBidsAndAsks;\nexports.RippleAPI = RippleAPI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api.ts\n// module id = 72\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/api.ts?");

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst txFlags = {\n    // Universal flags can apply to any transaction type\n    Universal: {\n        FullyCanonicalSig: 0x80000000\n    },\n    AccountSet: {\n        RequireDestTag: 0x00010000,\n        OptionalDestTag: 0x00020000,\n        RequireAuth: 0x00040000,\n        OptionalAuth: 0x00080000,\n        DisallowXRP: 0x00100000,\n        AllowXRP: 0x00200000\n    },\n    TrustSet: {\n        SetAuth: 0x00010000,\n        NoRipple: 0x00020000,\n        SetNoRipple: 0x00020000,\n        ClearNoRipple: 0x00040000,\n        SetFreeze: 0x00100000,\n        ClearFreeze: 0x00200000\n    },\n    OfferCreate: {\n        Passive: 0x00010000,\n        ImmediateOrCancel: 0x00020000,\n        FillOrKill: 0x00040000,\n        Sell: 0x00080000\n    },\n    Payment: {\n        NoRippleDirect: 0x00010000,\n        PartialPayment: 0x00020000,\n        LimitQuality: 0x00040000\n    },\n    PaymentChannelClaim: {\n        Renew: 0x00010000,\n        Close: 0x00020000\n    }\n};\nexports.txFlags = txFlags;\n// The following are integer (as opposed to bit) flags\n// that can be set for particular transactions in the\n// SetFlag or ClearFlag field\nconst txFlagIndices = {\n    AccountSet: {\n        asfRequireDest: 1,\n        asfRequireAuth: 2,\n        asfDisallowXRP: 3,\n        asfDisableMaster: 4,\n        asfAccountTxnID: 5,\n        asfNoFreeze: 6,\n        asfGlobalFreeze: 7,\n        asfDefaultRipple: 8,\n        asfDepositAuth: 9\n    }\n};\nexports.txFlagIndices = txFlagIndices;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/txflags.ts\n// module id = 73\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/txflags.ts?");

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst assert = __webpack_require__(2);\nconst { Validator } = __webpack_require__(112);\nconst errors_1 = __webpack_require__(29);\nconst ripple_address_codec_1 = __webpack_require__(30);\nexports.isValidAddress = ripple_address_codec_1.isValidAddress;\nconst utils_1 = __webpack_require__(54);\nexports.isValidSecret = utils_1.isValidSecret;\nfunction loadSchemas() {\n    // listed explicitly for webpack (instead of scanning schemas directory)\n    const schemas = [\n        __webpack_require__(153),\n        __webpack_require__(154),\n        __webpack_require__(155),\n        __webpack_require__(156),\n        __webpack_require__(157),\n        __webpack_require__(158),\n        __webpack_require__(159),\n        __webpack_require__(160),\n        __webpack_require__(161),\n        __webpack_require__(162),\n        __webpack_require__(163),\n        __webpack_require__(164),\n        __webpack_require__(165),\n        __webpack_require__(166),\n        __webpack_require__(167),\n        __webpack_require__(168),\n        __webpack_require__(169),\n        __webpack_require__(170),\n        __webpack_require__(171),\n        __webpack_require__(172),\n        __webpack_require__(173),\n        __webpack_require__(174),\n        __webpack_require__(175),\n        __webpack_require__(176),\n        __webpack_require__(177),\n        __webpack_require__(178),\n        __webpack_require__(179),\n        __webpack_require__(180),\n        __webpack_require__(181),\n        __webpack_require__(182),\n        __webpack_require__(183),\n        __webpack_require__(184),\n        __webpack_require__(185),\n        __webpack_require__(186),\n        __webpack_require__(187),\n        __webpack_require__(188),\n        __webpack_require__(189),\n        __webpack_require__(190),\n        __webpack_require__(191),\n        __webpack_require__(192),\n        __webpack_require__(193),\n        __webpack_require__(194),\n        __webpack_require__(195),\n        __webpack_require__(196),\n        __webpack_require__(197),\n        __webpack_require__(198),\n        __webpack_require__(199),\n        __webpack_require__(200),\n        __webpack_require__(201),\n        __webpack_require__(202),\n        __webpack_require__(203),\n        __webpack_require__(204),\n        __webpack_require__(205),\n        __webpack_require__(206),\n        __webpack_require__(207),\n        __webpack_require__(208),\n        __webpack_require__(209),\n        __webpack_require__(210),\n        __webpack_require__(211),\n        __webpack_require__(212),\n        __webpack_require__(213),\n        __webpack_require__(214),\n        __webpack_require__(215),\n        __webpack_require__(216),\n        __webpack_require__(217),\n        __webpack_require__(218),\n        __webpack_require__(219),\n        __webpack_require__(220),\n        __webpack_require__(221),\n        __webpack_require__(222),\n        __webpack_require__(223),\n        __webpack_require__(224),\n        __webpack_require__(225),\n        __webpack_require__(226),\n        __webpack_require__(227),\n        __webpack_require__(228),\n        __webpack_require__(229),\n        __webpack_require__(230),\n        __webpack_require__(231),\n        __webpack_require__(232),\n        __webpack_require__(233),\n        __webpack_require__(234),\n        __webpack_require__(235),\n        __webpack_require__(236),\n        __webpack_require__(237),\n        __webpack_require__(238),\n        __webpack_require__(239),\n        __webpack_require__(240),\n        __webpack_require__(241),\n        __webpack_require__(242),\n        __webpack_require__(243),\n        __webpack_require__(244),\n        __webpack_require__(245),\n        __webpack_require__(246),\n        __webpack_require__(247),\n        __webpack_require__(248),\n        __webpack_require__(249),\n        __webpack_require__(250),\n        __webpack_require__(251),\n        __webpack_require__(252),\n        __webpack_require__(253),\n        __webpack_require__(254),\n        __webpack_require__(255),\n        __webpack_require__(256),\n        __webpack_require__(257),\n        __webpack_require__(258),\n        __webpack_require__(259),\n        __webpack_require__(260),\n        __webpack_require__(261),\n        __webpack_require__(262)\n    ];\n    const titles = schemas.map(schema => schema.title);\n    const duplicates = _.keys(_.pickBy(_.countBy(titles), count => count > 1));\n    assert(duplicates.length === 0, 'Duplicate schemas for: ' + duplicates);\n    const validator = new Validator();\n    // Register custom format validators that ignore undefined instances\n    // since jsonschema will still call the format validator on a missing\n    // (optional)  property\n    validator.customFormats.address = function (instance) {\n        if (instance === undefined) {\n            return true;\n        }\n        return ripple_address_codec_1.isValidAddress(instance);\n    };\n    validator.customFormats.secret = function (instance) {\n        if (instance === undefined) {\n            return true;\n        }\n        return utils_1.isValidSecret(instance);\n    };\n    // Register under the root URI '/'\n    _.forEach(schemas, schema => validator.addSchema(schema, '/' + schema.title));\n    return validator;\n}\nconst schemaValidator = loadSchemas();\nfunction schemaValidate(schemaName, object) {\n    // Lookup under the root URI '/'\n    const schema = schemaValidator.getSchema('/' + schemaName);\n    if (schema === undefined) {\n        throw new errors_1.ValidationError('no schema for ' + schemaName);\n    }\n    const result = schemaValidator.validate(object, schema);\n    if (!result.valid) {\n        throw new errors_1.ValidationError(result.errors.join());\n    }\n}\nexports.schemaValidate = schemaValidate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schema-validator.ts\n// module id = 74\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schema-validator.ts?");

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/sha/common.js\n// module id = 75\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/sha/common.js?");

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar common = __webpack_require__(39);\nvar shaCommon = __webpack_require__(75);\nvar assert = __webpack_require__(38);\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/sha/256.js\n// module id = 76\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/sha/256.js?");

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar common = __webpack_require__(39);\nvar assert = __webpack_require__(38);\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/sha/512.js\n// module id = 77\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/sha/512.js?");

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

eval("var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = __webpack_require__(130);\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/brorand/index.js\n// module id = 78\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/brorand/index.js?");

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // eslint-disable-line strict\n\nvar elliptic = __webpack_require__(13);\nvar secp256k1 = elliptic.ec('secp256k1');\nvar Sha512 = __webpack_require__(146);\n\nfunction deriveScalar(bytes, discrim) {\n  var order = secp256k1.curve.n;\n  for (var i = 0; i <= 0xFFFFFFFF; i++) {\n    // We hash the bytes to find a 256 bit number, looping until we are sure it\n    // is less than the order of the curve.\n    var hasher = new Sha512().add(bytes);\n    // If the optional discriminator index was passed in, update the hash.\n    if (discrim !== undefined) {\n      hasher.addU32(discrim);\n    }\n    hasher.addU32(i);\n    var key = hasher.first256BN();\n    if (key.cmpn(0) > 0 && key.cmp(order) < 0) {\n      return key;\n    }\n  }\n  throw new Error('impossible unicorn ;)');\n}\n\n/**\n* @param {Array} seed - bytes\n* @param {Object} [opts] - object\n* @param {Number} [opts.accountIndex=0] - the account number to generate\n* @param {Boolean} [opts.validator=false] - generate root key-pair,\n*                                              as used by validators.\n* @return {bn.js} - 256 bit scalar value\n*\n*/\nfunction derivePrivateKey(seed) {\n  var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  var root = opts.validator;\n  var order = secp256k1.curve.n;\n\n  // This private generator represents the `root` private key, and is what's\n  // used by validators for signing when a keypair is generated from a seed.\n  var privateGen = deriveScalar(seed);\n  if (root) {\n    // As returned by validation_create for a given seed\n    return privateGen;\n  }\n  var publicGen = secp256k1.g.mul(privateGen);\n  // A seed can generate many keypairs as a function of the seed and a uint32.\n  // Almost everyone just uses the first account, `0`.\n  var accountIndex = opts.accountIndex || 0;\n  return deriveScalar(publicGen.encodeCompressed(), accountIndex).add(privateGen).mod(order);\n}\n\nfunction accountPublicFromPublicGenerator(publicGenBytes) {\n  var rootPubPoint = secp256k1.curve.decodePoint(publicGenBytes);\n  var scalar = deriveScalar(publicGenBytes, 0);\n  var point = secp256k1.g.mul(scalar);\n  var offset = rootPubPoint.add(point);\n  return offset.encodeCompressed();\n}\n\nmodule.exports = {\n  derivePrivateKey: derivePrivateKey,\n  accountPublicFromPublicGenerator: accountPublicFromPublicGenerator\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/distrib/npm/secp256k1.js\n// module id = 79\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/distrib/npm/secp256k1.js?");

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils_1 = __webpack_require__(54);\nconst bignumber_js_1 = __webpack_require__(7);\nfunction renameKeys(object, mapping) {\n    _.forEach(mapping, (to, from) => {\n        object[to] = object[from];\n        delete object[from];\n    });\n}\nfunction getServerInfo() {\n    return this.request('server_info').then(response => {\n        const info = utils_1.convertKeysFromSnakeCaseToCamelCase(response.info);\n        renameKeys(info, { hostid: 'hostID' });\n        if (info.validatedLedger) {\n            renameKeys(info.validatedLedger, {\n                baseFeeXrp: 'baseFeeXRP',\n                reserveBaseXrp: 'reserveBaseXRP',\n                reserveIncXrp: 'reserveIncrementXRP',\n                seq: 'ledgerVersion'\n            });\n            info.validatedLedger.baseFeeXRP =\n                info.validatedLedger.baseFeeXRP.toString();\n            info.validatedLedger.reserveBaseXRP =\n                info.validatedLedger.reserveBaseXRP.toString();\n            info.validatedLedger.reserveIncrementXRP =\n                info.validatedLedger.reserveIncrementXRP.toString();\n        }\n        return info;\n    });\n}\nexports.getServerInfo = getServerInfo;\n// This is a public API that can be called directly.\n// This is not used by the `prepare*` methods. See `src/transaction/utils.ts`\nfunction getFee(cushion) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (cushion === undefined) {\n            cushion = this._feeCushion;\n        }\n        if (cushion === undefined) {\n            cushion = 1.2;\n        }\n        const serverInfo = (yield this.request('server_info')).info;\n        const baseFeeXrp = new bignumber_js_1.default(serverInfo.validated_ledger.base_fee_xrp);\n        let fee = baseFeeXrp.times(serverInfo.load_factor).times(cushion);\n        // Cap fee to `this._maxFeeXRP`\n        fee = bignumber_js_1.default.min(fee, this._maxFeeXRP);\n        // Round fee to 6 decimal places\n        return (new bignumber_js_1.default(fee.toFixed(6))).toString(10);\n    });\n}\nexports.getFee = getFee;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/serverinfo.ts\n// module id = 80\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/serverinfo.ts?");

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst assert = __webpack_require__(2);\nfunction mergeIntervals(intervals) {\n    const stack = [[-Infinity, -Infinity]];\n    _.sortBy(intervals, x => x[0]).forEach(interval => {\n        const lastInterval = stack.pop();\n        if (interval[0] <= lastInterval[1] + 1) {\n            stack.push([lastInterval[0], Math.max(interval[1], lastInterval[1])]);\n        }\n        else {\n            stack.push(lastInterval);\n            stack.push(interval);\n        }\n    });\n    return stack.slice(1);\n}\nclass RangeSet {\n    constructor() {\n        this.reset();\n    }\n    reset() {\n        this.ranges = [];\n    }\n    serialize() {\n        return this.ranges.map(range => range[0].toString() + '-' + range[1].toString()).join(',');\n    }\n    addRange(start, end) {\n        assert(start <= end, 'invalid range');\n        this.ranges = mergeIntervals(this.ranges.concat([[start, end]]));\n    }\n    addValue(value) {\n        this.addRange(value, value);\n    }\n    parseAndAddRanges(rangesString) {\n        const rangeStrings = rangesString.split(',');\n        _.forEach(rangeStrings, rangeString => {\n            const range = rangeString.split('-').map(Number);\n            this.addRange(range[0], range.length === 1 ? range[0] : range[1]);\n        });\n    }\n    containsRange(start, end) {\n        return _.some(this.ranges, range => range[0] <= start && range[1] >= end);\n    }\n    containsValue(value) {\n        return this.containsRange(value, value);\n    }\n}\nexports.default = RangeSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/rangeset.ts\n// module id = 81\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/rangeset.ts?");

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/capability.js\n// module id = 82\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/stream-http/lib/capability.js?");

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, Buffer, global) {var capability = __webpack_require__(82)\nvar inherits = __webpack_require__(3)\nvar stream = __webpack_require__(40)\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable)\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function(err) {\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17), __webpack_require__(4).Buffer, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/response.js\n// module id = 83\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/stream-http/lib/response.js?");

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(46);\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(274);\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(23).EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(85);\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(55).Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(41);\nutil.inherits = __webpack_require__(3);\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(275);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(276);\nvar destroyImpl = __webpack_require__(86);\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(26);\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(57).StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(26);\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(57).StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(17)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_readable.js\n// module id = 84\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_readable.js?");

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(23).EventEmitter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/stream-browser.js\n// module id = 85\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js?");

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(46);\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/destroy.js\n// module id = 86\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js?");

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(26);\n\n/*<replacement>*/\nvar util = __webpack_require__(41);\nutil.inherits = __webpack_require__(3);\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_transform.js\n// module id = 87\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_transform.js?");

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(19);\nconst transaction_1 = __webpack_require__(58);\nconst common_1 = __webpack_require__(0);\nfunction attachTransactionDate(connection, tx) {\n    if (tx.date) {\n        return Promise.resolve(tx);\n    }\n    const ledgerVersion = tx.ledger_index || tx.LedgerSequence;\n    if (!ledgerVersion) {\n        return new Promise(() => {\n            throw new common_1.errors.NotFoundError('ledger_index and LedgerSequence not found in tx');\n        });\n    }\n    const request = {\n        command: 'ledger',\n        ledger_index: ledgerVersion\n    };\n    return connection.request(request).then(data => {\n        if (typeof data.ledger.close_time === 'number') {\n            return _.assign({ date: data.ledger.close_time }, tx);\n        }\n        throw new common_1.errors.UnexpectedError('Ledger missing close_time');\n    }).catch(error => {\n        if (error instanceof common_1.errors.UnexpectedError) {\n            throw error;\n        }\n        throw new common_1.errors.NotFoundError('Transaction ledger not found');\n    });\n}\nfunction isTransactionInRange(tx, options) {\n    return (!options.minLedgerVersion\n        || tx.ledger_index >= options.minLedgerVersion)\n        && (!options.maxLedgerVersion\n            || tx.ledger_index <= options.maxLedgerVersion);\n}\nfunction convertError(connection, options, error) {\n    const _error = (error.message === 'txnNotFound') ?\n        new common_1.errors.NotFoundError('Transaction not found') : error;\n    if (_error instanceof common_1.errors.NotFoundError) {\n        return utils.hasCompleteLedgerRange(connection, options.minLedgerVersion, options.maxLedgerVersion).then(hasCompleteLedgerRange => {\n            if (!hasCompleteLedgerRange) {\n                return utils.isPendingLedgerVersion(connection, options.maxLedgerVersion)\n                    .then(isPendingLedgerVersion => {\n                    return isPendingLedgerVersion ?\n                        new common_1.errors.PendingLedgerVersionError() :\n                        new common_1.errors.MissingLedgerHistoryError();\n                });\n            }\n            return _error;\n        });\n    }\n    return Promise.resolve(_error);\n}\nfunction formatResponse(options, tx) {\n    if (tx.validated !== true || !isTransactionInRange(tx, options)) {\n        throw new common_1.errors.NotFoundError('Transaction not found');\n    }\n    return transaction_1.default(tx, options.includeRawTransaction);\n}\nfunction getTransaction(id, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        common_1.validate.getTransaction({ id, options });\n        const _options = yield utils.ensureLedgerVersion.call(this, options);\n        try {\n            const tx = yield this.request('tx', {\n                transaction: id,\n                binary: false\n            });\n            const txWithDate = yield attachTransactionDate(this.connection, tx);\n            return formatResponse(_options, txWithDate);\n        }\n        catch (error) {\n            throw (yield convertError(this.connection, _options, error));\n        }\n    });\n}\nexports.default = getTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/transaction.ts\n// module id = 88\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/transaction.ts?");

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _ = __webpack_require__(1)\nvar BigNumber = __webpack_require__(7)\nvar normalizeNodes = __webpack_require__(32).normalizeNodes\nvar dropsToXRP = __webpack_require__(32).dropsToXRP\n\nfunction groupByAddress(balanceChanges) {\n  var grouped = _.groupBy(balanceChanges, function(node) {\n    return node.address\n  })\n  return _.mapValues(grouped, function(group) {\n    return _.map(group, function(node) {\n      return node.balance\n    })\n  })\n}\n\nfunction parseValue(value) {\n  return new BigNumber(value.value || value)\n}\n\nfunction computeBalanceChange(node) {\n  var value = null\n  if (node.newFields.Balance) {\n    value = parseValue(node.newFields.Balance)\n  } else if (node.previousFields.Balance && node.finalFields.Balance) {\n    value = parseValue(node.finalFields.Balance).minus(\n      parseValue(node.previousFields.Balance))\n  }\n  return value === null ? null : value.isZero() ? null : value\n}\n\nfunction parseFinalBalance(node) {\n  if (node.newFields.Balance) {\n    return parseValue(node.newFields.Balance)\n  } else if (node.finalFields.Balance) {\n    return parseValue(node.finalFields.Balance)\n  }\n  return null\n}\n\n\nfunction parseXRPQuantity(node, valueParser) {\n  var value = valueParser(node)\n\n  if (value === null) {\n    return null\n  }\n\n  return {\n    address: node.finalFields.Account || node.newFields.Account,\n    balance: {\n      counterparty: '',\n      currency: 'XRP',\n      value: dropsToXRP(value).toString()\n    }\n  }\n}\n\nfunction flipTrustlinePerspective(quantity) {\n  var negatedBalance = (new BigNumber(quantity.balance.value)).negated()\n  return {\n    address: quantity.balance.counterparty,\n    balance: {\n      counterparty: quantity.address,\n      currency: quantity.balance.currency,\n      value: negatedBalance.toString()\n    }\n  }\n}\n\nfunction parseTrustlineQuantity(node, valueParser) {\n  var value = valueParser(node)\n\n  if (value === null) {\n    return null\n  }\n\n  /*\n   * A trustline can be created with a non-zero starting balance\n   * If an offer is placed to acquire an asset with no existing trustline,\n   * the trustline can be created when the ofer is taken.\n   */\n  var fields = _.isEmpty(node.newFields) ? node.finalFields : node.newFields\n\n  // the balance is always from low node's perspective\n  var result = {\n    address: fields.LowLimit.issuer,\n    balance: {\n      counterparty: fields.HighLimit.issuer,\n      currency: fields.Balance.currency,\n      value: value.toString()\n    }\n  }\n  return [result, flipTrustlinePerspective(result)]\n}\n\nfunction parseQuantities(metadata, valueParser) {\n  var values = normalizeNodes(metadata).map(function(node) {\n    if (node.entryType === 'AccountRoot') {\n      return [parseXRPQuantity(node, valueParser)]\n    } else if (node.entryType === 'RippleState') {\n      return parseTrustlineQuantity(node, valueParser)\n    }\n    return []\n  })\n  return groupByAddress(_.compact(_.flatten(values)))\n}\n\n/**\n *  Computes the complete list of every balance that changed in the ledger\n *  as a result of the given transaction.\n *\n *  @param {Object} metadata Transaction metada\n *  @returns {Object} parsed balance changes\n */\nfunction parseBalanceChanges(metadata) {\n  return parseQuantities(metadata, computeBalanceChange)\n}\n\n\n/**\n *  Computes the complete list of every final balance in the ledger\n *  as a result of the given transaction.\n *\n *  @param {Object} metadata Transaction metada\n *  @returns {Object} parsed balances\n */\nfunction parseFinalBalances(metadata) {\n  return parseQuantities(metadata, parseFinalBalance)\n}\n\nmodule.exports.parseBalanceChanges = parseBalanceChanges\nmodule.exports.parseFinalBalances = parseFinalBalances\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-lib-transactionparser/src/balancechanges.js\n// module id = 89\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-lib-transactionparser/src/balancechanges.js?");

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst bignumber_js_1 = __webpack_require__(7);\nconst common_1 = __webpack_require__(0);\nconst AccountFields = common_1.constants.AccountFields;\nfunction parseField(info, value) {\n    if (info.encoding === 'hex' && !info.length) { // e.g. \"domain\"\n        return new Buffer(value, 'hex').toString('ascii');\n    }\n    if (info.shift) {\n        return (new bignumber_js_1.default(value)).shift(-info.shift).toNumber();\n    }\n    return value;\n}\nfunction parseFields(data) {\n    const settings = {};\n    for (const fieldName in AccountFields) {\n        const fieldValue = data[fieldName];\n        if (fieldValue !== undefined) {\n            const info = AccountFields[fieldName];\n            settings[info.name] = parseField(info, fieldValue);\n        }\n    }\n    if (data.RegularKey) {\n        settings.regularKey = data.RegularKey;\n    }\n    // Since an account can own at most one SignerList,\n    // this array must have exactly one member if it is present.\n    if (data.signer_lists && data.signer_lists.length === 1) {\n        settings.signers = {};\n        if (data.signer_lists[0].SignerQuorum) {\n            settings.signers.threshold = data.signer_lists[0].SignerQuorum;\n        }\n        if (data.signer_lists[0].SignerEntries) {\n            settings.signers.weights = _.map(data.signer_lists[0].SignerEntries, (entry) => {\n                return {\n                    address: entry.SignerEntry.Account,\n                    weight: entry.SignerEntry.SignerWeight\n                };\n            });\n        }\n    }\n    return settings;\n}\nexports.default = parseFields;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/fields.ts\n// module id = 90\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/fields.ts?");

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var assert = __webpack_require__(2);\nvar BN = __webpack_require__(15);\nvar makeClass = __webpack_require__(5);var _require =\n\n__webpack_require__(11),bytesToHex = _require.bytesToHex,parseBytes = _require.parseBytes,serializeUIntN = _require.serializeUIntN;var _require2 =\n__webpack_require__(48),UInt = _require2.UInt;\n\nvar HEX_REGEX = /^[A-F0-9]{16}$/;\n\nvar UInt64 = makeClass({\n  inherits: UInt,\n  statics: { width: 8 },\n  UInt64: function UInt64() {var arg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var argType = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);\n    if (argType === 'number') {\n      assert(arg >= 0);\n      this._bytes = new Uint8Array(8);\n      this._bytes.set(serializeUIntN(arg, 4), 4);\n    } else if (arg instanceof BN) {\n      this._bytes = parseBytes(arg.toArray('be', 8), Uint8Array);\n      this._toBN = arg;\n    } else {\n      if (argType === 'string') {\n        if (!HEX_REGEX.test(arg)) {\n          throw new Error(arg + ' is not a valid UInt64 hex string');\n        }\n      }\n      this._bytes = parseBytes(arg, Uint8Array);\n    }\n    assert(this._bytes.length === 8);\n  },\n  toJSON: function toJSON() {\n    return bytesToHex(this._bytes);\n  },\n  valueOf: function valueOf() {\n    return this.toBN();\n  },\n  cached: {\n    toBN: function toBN() {\n      return new BN(this._bytes);\n    } },\n\n  toBytes: function toBytes() {\n    return this._bytes;\n  } });\n\n\nmodule.exports = {\n  UInt64: UInt64 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/uint-64.js\n// module id = 91\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/uint-64.js?");

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(61),Hash = _require.Hash;\n\nvar Hash256 = makeClass({\n  inherits: Hash,\n  statics: {\n    width: 32,\n    init: function init() {\n      this.ZERO_256 = new this(new Uint8Array(this.width));\n    } } });\n\n\n\nmodule.exports = {\n  Hash256: Hash256 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/hash-256.js\n// module id = 92\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/hash-256.js?");

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};var _ = __webpack_require__(1);\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(33),Field = _require.Field;var _require2 =\n__webpack_require__(62),BinarySerializer = _require2.BinarySerializer;var\nObjectEndMarker = Field.ObjectEndMarker;var _require3 =\n__webpack_require__(20),SerializedType = _require3.SerializedType;\n\nvar STObject = makeClass({\n  mixins: SerializedType,\n  statics: {\n    fromParser: function fromParser(parser, hint) {\n      var end = typeof hint === 'number' ? parser.pos() + hint : null;\n      var so = new this();\n      while (!parser.end(end)) {\n        var field = parser.readField();\n        if (field === ObjectEndMarker) {\n          break;\n        }\n        so[field] = parser.readFieldValue(field);\n      }\n      return so;\n    },\n    from: function from(value) {\n      if (value instanceof this) {\n        return value;\n      }\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n        return _.transform(value, function (so, val, key) {\n          var field = Field[key];\n          if (field) {\n            so[field] = field.associatedType.from(val);\n          } else {\n            so[key] = val;\n          }\n        }, new this());\n      }\n      throw new Error(value + ' is unsupported');\n    } },\n\n  fieldKeys: function fieldKeys() {\n    return Object.keys(this).map(function (k) {return Field[k];}).filter(Boolean);\n  },\n  toJSON: function toJSON() {\n    // Otherwise seemingly result will have same prototype as `this`\n    var accumulator = {}; // of only `own` properties\n    return _.transform(this, function (result, value, key) {\n      result[key] = value && value.toJSON ? value.toJSON() : value;\n    }, accumulator);\n  },\n  toBytesSink: function toBytesSink(sink) {var _this = this;var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {return true;};\n    var serializer = new BinarySerializer(sink);\n    var fields = this.fieldKeys();\n    var sorted = _.sortBy(fields, 'ordinal');\n    sorted.filter(filter).forEach(function (field) {\n      var value = _this[field];\n      if (!field.isSerialized) {\n        return;\n      }\n      serializer.writeFieldAndValue(field, value);\n    });\n  } });\n\n\nmodule.exports = {\n  STObject: STObject };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/st-object.js\n// module id = 93\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/st-object.js?");

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(23).EventEmitter;\nvar inherits = __webpack_require__(3);\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(40);\nStream.Writable = __webpack_require__(332);\nStream.Duplex = __webpack_require__(333);\nStream.Transform = __webpack_require__(334);\nStream.PassThrough = __webpack_require__(335);\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-browserify/index.js\n// module id = 94\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/stream-browserify/index.js?");

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(3)\nvar Hash = __webpack_require__(34)\nvar Buffer = __webpack_require__(21).Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/sha256.js\n// module id = 95\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/sha256.js?");

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(3)\nvar Hash = __webpack_require__(34)\nvar Buffer = __webpack_require__(21).Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/sha512.js\n// module id = 96\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/sha512.js?");

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(27),Hash256 = _require.Hash256;var _require2 =\n__webpack_require__(43),HashPrefix = _require2.HashPrefix;var _require3 =\n__webpack_require__(49),Hasher = _require3.Sha512Half;\n\nvar ShaMapNode = makeClass({\n  virtuals: {\n    hashPrefix: function hashPrefix() {},\n    isLeaf: function isLeaf() {},\n    isInner: function isInner() {} },\n\n  cached: {\n    hash: function hash() {\n      var hasher = Hasher.put(this.hashPrefix());\n      this.toBytesSink(hasher);\n      return hasher.finish();\n    } } });\n\n\n\nvar ShaMapLeaf = makeClass({\n  inherits: ShaMapNode,\n  ShaMapLeaf: function ShaMapLeaf(index, item) {\n    ShaMapNode.call(this);\n    this.index = index;\n    this.item = item;\n  },\n  isLeaf: function isLeaf() {\n    return true;\n  },\n  isInner: function isInner() {\n    return false;\n  },\n  hashPrefix: function hashPrefix() {\n    return this.item.hashPrefix();\n  },\n  toBytesSink: function toBytesSink(sink) {\n    this.item.toBytesSink(sink);\n    this.index.toBytesSink(sink);\n  } });\n\n\nvar $uper = ShaMapNode.prototype;\n\nvar ShaMapInner = makeClass({\n  inherits: ShaMapNode,\n  ShaMapInner: function ShaMapInner() {var depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    ShaMapNode.call(this);\n    this.depth = depth;\n    this.slotBits = 0;\n    this.branches = Array(16);\n  },\n  isInner: function isInner() {\n    return true;\n  },\n  isLeaf: function isLeaf() {\n    return false;\n  },\n  hashPrefix: function hashPrefix() {\n    return HashPrefix.innerNode;\n  },\n  setBranch: function setBranch(slot, branch) {\n    this.slotBits = this.slotBits | 1 << slot;\n    this.branches[slot] = branch;\n  },\n  empty: function empty() {\n    return this.slotBits === 0;\n  },\n  hash: function hash() {\n    if (this.empty()) {\n      return Hash256.ZERO_256;\n    }\n    return $uper.hash.call(this);\n  },\n  toBytesSink: function toBytesSink(sink) {\n    for (var i = 0; i < this.branches.length; i++) {\n      var branch = this.branches[i];\n      var hash = branch ? branch.hash() : Hash256.ZERO_256;\n      hash.toBytesSink(sink);\n    }\n  },\n  addItem: function addItem(index, item, leaf) {\n    assert(index instanceof Hash256);\n    var nibble = index.nibblet(this.depth);\n    var existing = this.branches[nibble];\n    if (!existing) {\n      this.setBranch(nibble, leaf || new ShaMapLeaf(index, item));\n    } else if (existing.isLeaf()) {\n      var newInner = new ShaMapInner(this.depth + 1);\n      newInner.addItem(existing.index, null, existing);\n      newInner.addItem(index, item, leaf);\n      this.setBranch(nibble, newInner);\n    } else if (existing.isInner()) {\n      existing.addItem(index, item, leaf);\n    } else {\n      assert(false);\n    }\n  } });\n\n\nvar ShaMap = makeClass({\n  inherits: ShaMapInner });\n\n\nmodule.exports = {\n  ShaMap: ShaMap };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/shamap.js\n// module id = 97\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/shamap.js?");

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;};var assert = __webpack_require__(2);\nvar BN = __webpack_require__(15);\nvar makeClass = __webpack_require__(6);var _require = \n\n__webpack_require__(12);var bytesToHex = _require.bytesToHex;var parseBytes = _require.parseBytes;var serializeUIntN = _require.serializeUIntN;var _require2 = \n__webpack_require__(51);var UInt = _require2.UInt;\n\nvar HEX_REGEX = /^[A-F0-9]{16}$/;\n\nvar UInt64 = makeClass({ \n  inherits: UInt, \n  statics: { width: 8 }, \n  UInt64: function UInt64() {var arg = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n    var argType = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);\n    if (argType === 'number') {\n      assert(arg >= 0);\n      this._bytes = new Uint8Array(8);\n      this._bytes.set(serializeUIntN(arg, 4), 4);} else \n    if (arg instanceof BN) {\n      this._bytes = parseBytes(arg.toArray('be', 8), Uint8Array);\n      this._toBN = arg;} else \n    {\n      if (argType === 'string') {\n        if (!HEX_REGEX.test(arg)) {\n          throw new Error(arg + ' is not a valid UInt64 hex string');}}\n\n\n      this._bytes = parseBytes(arg, Uint8Array);}\n\n    assert(this._bytes.length === 8);}, \n\n  toJSON: function toJSON() {\n    return bytesToHex(this._bytes);}, \n\n  valueOf: function valueOf() {\n    return this.toBN();}, \n\n  cached: { \n    toBN: function toBN() {\n      return new BN(this._bytes);} }, \n\n\n  toBytes: function toBytes() {\n    return this._bytes;} });\n\n\n\nmodule.exports = { \n  UInt64: UInt64 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-64.js\n// module id = 98\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-64.js?");

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(68);var Hash = _require.Hash;\n\nvar Hash256 = makeClass({ \n  inherits: Hash, \n  statics: { \n    width: 32, \n    init: function init() {\n      this.ZERO_256 = new this(new Uint8Array(this.width));} } });\n\n\n\n\nmodule.exports = { \n  Hash256: Hash256 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash-256.js\n// module id = 99\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash-256.js?");

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;};var _ = __webpack_require__(1);\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(35);var Field = _require.Field;var _require2 = \n__webpack_require__(69);var BinarySerializer = _require2.BinarySerializer;var \nObjectEndMarker = Field.ObjectEndMarker;var _require3 = \n__webpack_require__(22);var SerializedType = _require3.SerializedType;\n\nvar STObject = makeClass({ \n  mixins: SerializedType, \n  statics: { \n    fromParser: function fromParser(parser, hint) {\n      var end = typeof hint === 'number' ? parser.pos() + hint : null;\n      var so = new this();\n      while (!parser.end(end)) {\n        var field = parser.readField();\n        if (field === ObjectEndMarker) {\n          break;}\n\n        so[field] = parser.readFieldValue(field);}\n\n      return so;}, \n\n    from: function from(value) {\n      if (value instanceof this) {\n        return value;}\n\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n        return _.transform(value, function (so, val, key) {\n          var field = Field[key];\n          if (field) {\n            so[field] = field.associatedType.from(val);} else \n          {\n            so[key] = val;}}, \n\n        new this());}\n\n      throw new Error(value + ' is unsupported');} }, \n\n\n  fieldKeys: function fieldKeys() {\n    return Object.keys(this).map(function (k) {return Field[k];}).filter(Boolean);}, \n\n  toJSON: function toJSON() {\n    // Otherwise seemingly result will have same prototype as `this`\n    var accumulator = {}; // of only `own` properties\n    return _.transform(this, function (result, value, key) {\n      result[key] = value && value.toJSON ? value.toJSON() : value;}, \n    accumulator);}, \n\n  toBytesSink: function toBytesSink(sink) {var _this = this;var filter = arguments.length <= 1 || arguments[1] === undefined ? function () {return true;} : arguments[1];\n    var serializer = new BinarySerializer(sink);\n    var fields = this.fieldKeys();\n    var sorted = _.sortBy(fields, 'ordinal');\n    sorted.filter(filter).forEach(function (field) {\n      var value = _this[field];\n      if (!field.isSerialized) {\n        return;}\n\n      serializer.writeFieldAndValue(field, value);});} });\n\n\n\n\nmodule.exports = { \n  STObject: STObject };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/st-object.js\n// module id = 100\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/st-object.js?");

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(28);var Hash256 = _require.Hash256;var _require2 = \n__webpack_require__(44);var HashPrefix = _require2.HashPrefix;var _require3 = \n__webpack_require__(52);var Hasher = _require3.Sha512Half;\n\nvar ShaMapNode = makeClass({ \n  virtuals: { \n    hashPrefix: function hashPrefix() {}, \n    isLeaf: function isLeaf() {}, \n    isInner: function isInner() {} }, \n\n  cached: { \n    hash: function hash() {\n      var hasher = Hasher.put(this.hashPrefix());\n      this.toBytesSink(hasher);\n      return hasher.finish();} } });\n\n\n\n\nvar ShaMapLeaf = makeClass({ \n  inherits: ShaMapNode, \n  ShaMapLeaf: function ShaMapLeaf(index, item) {\n    ShaMapNode.call(this);\n    this.index = index;\n    this.item = item;}, \n\n  isLeaf: function isLeaf() {\n    return true;}, \n\n  isInner: function isInner() {\n    return false;}, \n\n  hashPrefix: function hashPrefix() {\n    return this.item.hashPrefix();}, \n\n  toBytesSink: function toBytesSink(sink) {\n    this.item.toBytesSink(sink);\n    this.index.toBytesSink(sink);} });\n\n\n\nvar $uper = ShaMapNode.prototype;\n\nvar ShaMapInner = makeClass({ \n  inherits: ShaMapNode, \n  ShaMapInner: function ShaMapInner() {var depth = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n    ShaMapNode.call(this);\n    this.depth = depth;\n    this.slotBits = 0;\n    this.branches = Array(16);}, \n\n  isInner: function isInner() {\n    return true;}, \n\n  isLeaf: function isLeaf() {\n    return false;}, \n\n  hashPrefix: function hashPrefix() {\n    return HashPrefix.innerNode;}, \n\n  setBranch: function setBranch(slot, branch) {\n    this.slotBits = this.slotBits | 1 << slot;\n    this.branches[slot] = branch;}, \n\n  empty: function empty() {\n    return this.slotBits === 0;}, \n\n  hash: function hash() {\n    if (this.empty()) {\n      return Hash256.ZERO_256;}\n\n    return $uper.hash.call(this);}, \n\n  toBytesSink: function toBytesSink(sink) {\n    for (var i = 0; i < this.branches.length; i++) {\n      var branch = this.branches[i];\n      var hash = branch ? branch.hash() : Hash256.ZERO_256;\n      hash.toBytesSink(sink);}}, \n\n\n  addItem: function addItem(index, item, leaf) {\n    assert(index instanceof Hash256);\n    var nibble = index.nibblet(this.depth);\n    var existing = this.branches[nibble];\n    if (!existing) {\n      this.setBranch(nibble, leaf || new ShaMapLeaf(index, item));} else \n    if (existing.isLeaf()) {\n      var newInner = new ShaMapInner(this.depth + 1);\n      newInner.addItem(existing.index, null, existing);\n      newInner.addItem(index, item, leaf);\n      this.setBranch(nibble, newInner);} else \n    if (existing.isInner()) {\n      existing.addItem(index, item, leaf);} else \n    {\n      assert(false);}} });\n\n\n\n\nvar ShaMap = makeClass({ \n  inherits: ShaMapInner });\n\n\nmodule.exports = { \n  ShaMap: ShaMap };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/shamap.js\n// module id = 101\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/shamap.js?");

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Prefix for hashing functions.\n *\n * These prefixes are inserted before the source material used to\n * generate various hashes. This is done to put each hash in its own\n * \"space.\" This way, two different types of objects with the\n * same binary data will produce different hashes.\n *\n * Each prefix is a 4-byte value with the last byte set to zero\n * and the first three bytes formed from the ASCII equivalent of\n * some arbitrary string. For example \"TXN\".\n */\n\n// transaction plus signature to give transaction ID\nexports.HASH_TX_ID = 0x54584E00; // 'TXN'\n// transaction plus metadata\nexports.HASH_TX_NODE = 0x534E4400; // 'TND'\n// inner node in tree\nexports.HASH_INNER_NODE = 0x4D494E00; // 'MIN'\n// inner node version 2\nexports.HASH_INNER_NODE_V2 = 0x494E5200; // 'INR'\n// leaf node in tree\nexports.HASH_LEAF_NODE = 0x4D4C4E00; // 'MLN'\n// inner transaction to sign\nexports.HASH_TX_SIGN = 0x53545800; // 'STX'\n// inner transaction to sign (TESTNET)\nexports.HASH_TX_SIGN_TESTNET = 0x73747800; // 'stx'\n// inner transaction to multisign\nexports.HASH_TX_MULTISIGN = 0x534D5400; // 'SMT'\n\nexports.HASH_LEDGER = 0x4C575200;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/src/hashprefixes.js\n// module id = 102\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/src/hashprefixes.js?");

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar util = __webpack_require__(36);\nvar hashprefixes = __webpack_require__(102);\nvar sha512half = __webpack_require__(104);\nvar HEX_ZERO = '00000000000000000000000000000000' +\n               '00000000000000000000000000000000';\n\n/**\n * Abstract class representing a node in a SHAMap tree.\n *\n * Can be either SHAMapTreeNodeInner, SHAMapTreeNodeInnerV2\n * or SHAMapTreeNodeLeaf.\n *\n * @class\n */\nfunction SHAMapTreeNode() { }\n\nSHAMapTreeNode.TYPE_INNER = 1;\nSHAMapTreeNode.TYPE_TRANSACTION_NM = 2;\nSHAMapTreeNode.TYPE_TRANSACTION_MD = 3;\nSHAMapTreeNode.TYPE_ACCOUNT_STATE = 4;\n\nfunction hash(hex) {\n  return sha512half(new Buffer(hex, 'hex'));\n}\n\n/**\n* @param {String} tag (64 hexadecimal characters)\n* @param {SHAMapTreeNode} node\n* @return {void}\n* @virtual\n*/\n/* eslint-disable no-unused-vars*/\nSHAMapTreeNode.prototype.add_item = function(tag, node) {\n  throw new Error(\n    'Called unimplemented virtual method SHAMapTreeNode#add_item.');\n};\n/* eslint-enable no-unused-vars*/\n\nSHAMapTreeNode.prototype.hash = function() {\n  throw new Error('Called unimplemented virtual method SHAMapTreeNode#hash.');\n};\n\n/**\n * Inner (non-leaf) node in a SHAMap tree.\n * @param {Number} depth (i.e. how many parent inner nodes)\n * @class\n */\nfunction SHAMapTreeNodeInner(depth) {\n  SHAMapTreeNode.call(this);\n  this.leaves = {};\n  this.type = SHAMapTreeNode.INNER;\n  this.depth = depth === undefined ? 0 : depth;\n  this.empty = true;\n}\n\nutil.inherits(SHAMapTreeNodeInner, SHAMapTreeNode);\n\n/**\n * @param {String} tag (equates to a ledger entry `index`)\n * @param {SHAMapTreeNode} node (to add)\n * @return {void}\n */\nSHAMapTreeNodeInner.prototype.add_item = function(tag, node) {\n  var depth = this.depth;\n  var existing_node = this.get_node(tag[depth]);\n\n  if (existing_node) {\n    // A node already exists in this slot\n    if (existing_node instanceof SHAMapTreeNodeInner) {\n      // There is an inner node, so we need to go deeper\n      existing_node.add_item(tag, node);\n    } else if (existing_node.tag === tag) {\n      // Collision\n      throw new Error(\n          'Tried to add a node to a SHAMap that was already in there.');\n    } else {\n      // Turn it into an inner node\n      var new_inner_node = new SHAMapTreeNodeInner(depth + 1);\n\n      // Parent new and existing node\n      new_inner_node.add_item(existing_node.tag, existing_node);\n      new_inner_node.add_item(tag, node);\n\n      // And place the newly created inner node in the slot\n      this.set_node(tag[depth], new_inner_node);\n    }\n  } else {\n    // Neat, we have a nice open spot for the new node\n    this.set_node(tag[depth], node);\n  }\n};\n\n/**\n * Overwrite the node that is currently in a given slot.\n * @param {String} slot (a character 0-F)\n * @param {SHAMapTreeNode} node (to place)\n * @return {void}\n */\nSHAMapTreeNodeInner.prototype.set_node = function(slot, node) {\n  this.leaves[slot] = node;\n  this.empty = false;\n};\n\nSHAMapTreeNodeInner.prototype.get_node = function(slot) {\n  return this.leaves[slot];\n};\n\nSHAMapTreeNodeInner.prototype.hash = function() {\n  if (this.empty) {\n    return HEX_ZERO;\n  }\n\n  var hex = '';\n  for (var i = 0; i < 16; i++) {\n    var slot = i.toString(16).toUpperCase();\n    hex += this.leaves[slot] ? this.leaves[slot].hash() : HEX_ZERO;\n  }\n\n  var prefix = hashprefixes.HASH_INNER_NODE.toString(16);\n  return hash(prefix + hex);\n};\n\n/**\n * V2 inner (non-leaf) node in a SHAMap tree.\n * @param {Number} depth ()\n * @class\n */\nfunction SHAMapTreeNodeInnerV2(depth) {\n  SHAMapTreeNodeInner.call(this, depth);\n  this.common = '';\n}\n\nutil.inherits(SHAMapTreeNodeInnerV2, SHAMapTreeNodeInner);\n\n/**\n * @param {String} key (equates to a ledger entry `index`)\n * @return {Number} (common prefix depth)\n */\nSHAMapTreeNodeInnerV2.prototype.get_common_prefix = function(key) {\n  var depth = 0;\n  for (var i = 0; i < this.depth; i++) {\n    if (this.common[i] === key[i]) {\n      depth++\n    }\n  }\n\n  return depth;\n};\n\n/**\n * @param {String} key (equates to a ledger entry `index`)\n * @return {bool} (returns true if common prefix exists)\n */\nSHAMapTreeNodeInnerV2.prototype.has_common_prefix = function(key) {\n  for (var i = 0; i < this.depth; i++) {\n    if (this.common[i] !== key[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param {String} tag (equates to a ledger entry `index`)\n * @param {SHAMapTreeNode} node (to add)\n * @return {void}\n */\nSHAMapTreeNodeInnerV2.prototype.add_item = function(tag, node) {\n  var depth = this.depth;\n  var existing_node = this.get_node(tag[depth]);\n\n  if (existing_node) {\n    // A node already exists in this slot\n    if (existing_node instanceof SHAMapTreeNodeInnerV2) {\n      if (existing_node.has_common_prefix(tag)) {\n        // There is an inner node, so we need to go deeper\n        existing_node.add_item(tag, node);\n      } else {\n        // Create new inner node and move existing node under it\n        var new_depth = existing_node.get_common_prefix(tag);\n        var new_inner_node = new SHAMapTreeNodeInnerV2(new_depth);\n        new_inner_node.common = tag.slice(0, new_depth - 64);\n\n        // Parent new and existing node\n        new_inner_node.set_node(existing_node.common[new_depth], existing_node);\n        new_inner_node.add_item(tag, node);\n\n        // And place the newly created inner node in the slot\n        this.set_node(tag[depth], new_inner_node);\n      }\n    } else if (existing_node.tag === tag) {\n      // Collision\n      throw new Error(\n          'Tried to add a node to a SHAMap that was already in there.');\n    } else {\n      // Turn it into an inner node\n      var new_inner_node = new SHAMapTreeNodeInnerV2(0);\n\n      for (var i = 0; tag[i] === existing_node.tag[i]; i++) {\n        new_inner_node.common += tag[i];\n        new_inner_node.depth++;\n      }\n\n      // Parent new and existing node\n      new_inner_node.add_item(existing_node.tag, existing_node);\n      new_inner_node.add_item(tag, node);\n\n      // And place the newly created inner node in the slot\n      this.set_node(tag[depth], new_inner_node);\n    }\n  } else {\n    // Neat, we have a nice open spot for the new node\n    this.set_node(tag[depth], node);\n  }\n};\n\nSHAMapTreeNodeInnerV2.prototype.hash = function() {\n  if (this.empty) {\n    return HEX_ZERO;\n  }\n\n  var hex = '';\n  for (var i = 0; i < 16; i++) {\n    var slot = i.toString(16).toUpperCase();\n    hex += this.leaves[slot] ? this.leaves[slot].hash() : HEX_ZERO;\n  }\n\n  if (this.depth < 16) {\n    hex += '0';\n  }\n  hex += this.depth.toString(16).toUpperCase();\n\n  hex += this.common;\n  if (this.common.length % 2) {\n    hex += '0';\n  }\n\n  var prefix = hashprefixes.HASH_INNER_NODE_V2.toString(16);\n\n  return hash(prefix + hex);\n};\n\n/**\n * Leaf node in a SHAMap tree.\n * @param {String} tag (equates to a ledger entry `index`)\n * @param {String} data (hex of account state, transaction etc)\n * @param {Number} type (one of TYPE_ACCOUNT_STATE, TYPE_TRANSACTION_MD etc)\n * @class\n */\nfunction SHAMapTreeNodeLeaf(tag, data, type) {\n  SHAMapTreeNode.call(this);\n\n  if (typeof tag !== 'string') {\n    throw new Error('Tag is unexpected type.');\n  }\n\n  this.tag = tag;\n  this.type = type;\n  this.data = data;\n}\n\nutil.inherits(SHAMapTreeNodeLeaf, SHAMapTreeNode);\n\nSHAMapTreeNodeLeaf.prototype.hash = function() {\n  switch (this.type) {\n    case SHAMapTreeNode.TYPE_ACCOUNT_STATE:\n      var leafPrefix = hashprefixes.HASH_LEAF_NODE.toString(16);\n      return hash(leafPrefix + this.data + this.tag);\n    case SHAMapTreeNode.TYPE_TRANSACTION_NM:\n      var txPrefix = hashprefixes.HASH_TX_ID.toString(16);\n      return hash(txPrefix + this.data);\n    case SHAMapTreeNode.TYPE_TRANSACTION_MD:\n      var txPrefix = hashprefixes.HASH_TX_NODE.toString(16);\n      return hash(txPrefix + this.data + this.tag);\n    default:\n      throw new Error('Tried to hash a SHAMap node of unknown type.');\n  }\n};\n\n/**\n * SHAMap tree.\n * @param {Number} version (inner node version number)\n * @class\n */\nfunction SHAMap(version) {\n  this.version = version === undefined ? 1 : version;\n  this.root = this.version === 1 ? new SHAMapTreeNodeInner(0) :\n    new SHAMapTreeNodeInnerV2(0);\n}\n\nSHAMap.prototype.add_item = function(tag, data, type) {\n  this.root.add_item(tag, new SHAMapTreeNodeLeaf(tag, data, type));\n};\n\nSHAMap.prototype.hash = function() {\n  return this.root.hash();\n};\n\nexports.SHAMap = SHAMap;\nexports.SHAMapTreeNode = SHAMapTreeNode;\nexports.SHAMapTreeNodeInner = SHAMapTreeNodeInner;\nexports.SHAMapTreeNodeInnerV2 = SHAMapTreeNodeInnerV2;\nexports.SHAMapTreeNodeLeaf = SHAMapTreeNodeLeaf;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/src/shamap.js\n// module id = 103\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/src/shamap.js?");

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar createHash = __webpack_require__(65);\n\n// For a hash function, rippled uses SHA-512 and then truncates the result\n// to the first 256 bytes. This algorithm, informally called SHA-512Half,\n// provides an output that has comparable security to SHA-256, but runs\n// faster on 64-bit processors.\nfunction sha512half(buffer) {\n  var sha512 = createHash('sha512');\n  return sha512.update(buffer).digest('hex').toUpperCase().slice(0, 64);\n}\n\nmodule.exports = sha512half;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/src/sha512half.js\n// module id = 104\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/src/sha512half.js?");

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst orderFlags = {\n    Passive: 0x00010000,\n    Sell: 0x00020000 // offer was placed as a sell\n};\nexports.orderFlags = orderFlags;\nconst trustlineFlags = {\n    LowReserve: 0x00010000,\n    HighReserve: 0x00020000,\n    LowAuth: 0x00040000,\n    HighAuth: 0x00080000,\n    LowNoRipple: 0x00100000,\n    HighNoRipple: 0x00200000,\n    LowFreeze: 0x00400000,\n    HighFreeze: 0x00800000\n};\nexports.trustlineFlags = trustlineFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/flags.ts\n// module id = 105\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/flags.ts?");

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar api_1 = __webpack_require__(72);\nexports.RippleAPI = api_1.RippleAPI;\n// Broadcast api is experimental\nvar broadcast_1 = __webpack_require__(401);\nexports.RippleAPIBroadcast = broadcast_1.RippleAPIBroadcast;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 106\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst txflags_1 = __webpack_require__(73);\n// Ordering from https://developers.ripple.com/accountroot.html\nconst accountRootFlags = {\n    // lsfDefaultRipple:\n    // Enable rippling on trust lines by default.\n    // Required for issuing addresses; discouraged for others.\n    DefaultRipple: 0x00800000,\n    // lsfDepositAuth:\n    // Require account to auth deposits.\n    // This account can only receive funds from transactions it sends,\n    // or preauthorized accounts.\n    DepositAuth: 0x01000000,\n    // lsfDisableMaster:\n    // Force regular key.\n    // Disallows use of the master key.\n    DisableMaster: 0x00100000,\n    // lsfDisallowXRP:\n    // Disallow sending XRP.\n    // Not enforced by rippled; client applications should check.\n    DisallowXRP: 0x00080000,\n    // lsfGlobalFreeze:\n    // Trustlines globally frozen.\n    GlobalFreeze: 0x00400000,\n    // lsfNoFreeze:\n    // Permanently disallowed freezing trustlines.\n    // Once enabled, cannot be disabled.\n    NoFreeze: 0x00200000,\n    // lsfPasswordSpent:\n    // Password set fee is spent.\n    // The account has used its free SetRegularKey transaction.\n    PasswordSpent: 0x00010000,\n    // lsfRequireAuth:\n    // Require authorization to hold IOUs (issuances).\n    RequireAuth: 0x00040000,\n    // lsfRequireDestTag:\n    // Require a DestinationTag for incoming payments.\n    RequireDestTag: 0x00020000\n};\nconst AccountFlags = {\n    passwordSpent: accountRootFlags.PasswordSpent,\n    requireDestinationTag: accountRootFlags.RequireDestTag,\n    requireAuthorization: accountRootFlags.RequireAuth,\n    depositAuth: accountRootFlags.DepositAuth,\n    disallowIncomingXRP: accountRootFlags.DisallowXRP,\n    disableMasterKey: accountRootFlags.DisableMaster,\n    noFreeze: accountRootFlags.NoFreeze,\n    globalFreeze: accountRootFlags.GlobalFreeze,\n    defaultRipple: accountRootFlags.DefaultRipple\n};\nexports.AccountFlags = AccountFlags;\nconst AccountFlagIndices = {\n    requireDestinationTag: txflags_1.txFlagIndices.AccountSet.asfRequireDest,\n    requireAuthorization: txflags_1.txFlagIndices.AccountSet.asfRequireAuth,\n    depositAuth: txflags_1.txFlagIndices.AccountSet.asfDepositAuth,\n    disallowIncomingXRP: txflags_1.txFlagIndices.AccountSet.asfDisallowXRP,\n    disableMasterKey: txflags_1.txFlagIndices.AccountSet.asfDisableMaster,\n    enableTransactionIDTracking: txflags_1.txFlagIndices.AccountSet.asfAccountTxnID,\n    noFreeze: txflags_1.txFlagIndices.AccountSet.asfNoFreeze,\n    globalFreeze: txflags_1.txFlagIndices.AccountSet.asfGlobalFreeze,\n    defaultRipple: txflags_1.txFlagIndices.AccountSet.asfDefaultRipple\n};\nexports.AccountFlagIndices = AccountFlagIndices;\nconst AccountFields = {\n    EmailHash: { name: 'emailHash', encoding: 'hex',\n        length: 32, defaults: '0' },\n    MessageKey: { name: 'messageKey' },\n    Domain: { name: 'domain', encoding: 'hex' },\n    TransferRate: { name: 'transferRate', defaults: 0, shift: 9 }\n};\nexports.AccountFields = AccountFields;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/constants.ts\n// module id = 107\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/constants.ts?");

/***/ }),
/* 108 */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/support/isBufferBrowser.js\n// module id = 108\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?");

/***/ }),
/* 109 */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/node_modules/inherits/inherits_browser.js\n// module id = 109\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js?");

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction setPrototypeOf(object, prototype) {\n    // Object.setPrototypeOf not supported on Internet Explorer 9\n    Object.setPrototypeOf ? Object.setPrototypeOf(object, prototype) :\n        // @ts-ignore: Specifically a fallback for IE9\n        object.__proto__ = prototype;\n}\nexports.setPrototypeOf = setPrototypeOf;\nfunction getConstructorName(object) {\n    // hack for internet explorer\n    if (!object.constructor.name) {\n        return object.constructor.toString().match(/^function\\s+([^(]*)/)[1];\n    }\n    return object.constructor.name;\n}\nexports.getConstructorName = getConstructorName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/browser-hacks.ts\n// module id = 110\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/browser-hacks.ts?");

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst errors_1 = __webpack_require__(29);\nconst schema_validator_1 = __webpack_require__(74);\nfunction error(text) {\n    return new errors_1.ValidationError(text);\n}\nfunction validateLedgerRange(options) {\n    if (!_.isUndefined(options) && !_.isUndefined(options.minLedgerVersion)\n        && !_.isUndefined(options.maxLedgerVersion)) {\n        if (Number(options.minLedgerVersion) > Number(options.maxLedgerVersion)) {\n            throw error('minLedgerVersion must not be greater than maxLedgerVersion');\n        }\n    }\n}\nfunction validateOptions(schema, instance) {\n    schema_validator_1.schemaValidate(schema, instance);\n    validateLedgerRange(instance.options);\n}\nexports.getPaths = _.partial(schema_validator_1.schemaValidate, 'getPathsParameters');\nexports.getTransactions = _.partial(validateOptions, 'getTransactionsParameters');\nexports.getSettings = _.partial(validateOptions, 'getSettingsParameters');\nexports.getAccountInfo = _.partial(validateOptions, 'getAccountInfoParameters');\nexports.getTrustlines = _.partial(validateOptions, 'getTrustlinesParameters');\nexports.getBalances = _.partial(validateOptions, 'getBalancesParameters');\nexports.getBalanceSheet = _.partial(validateOptions, 'getBalanceSheetParameters');\nexports.getOrders = _.partial(validateOptions, 'getOrdersParameters');\nexports.getOrderbook = _.partial(validateOptions, 'getOrderbookParameters');\nexports.getTransaction = _.partial(validateOptions, 'getTransactionParameters');\nexports.getPaymentChannel = _.partial(validateOptions, 'getPaymentChannelParameters');\nexports.getLedger = _.partial(validateOptions, 'getLedgerParameters');\nexports.preparePayment = _.partial(schema_validator_1.schemaValidate, 'preparePaymentParameters');\nexports.prepareOrder = _.partial(schema_validator_1.schemaValidate, 'prepareOrderParameters');\nexports.prepareOrderCancellation = _.partial(schema_validator_1.schemaValidate, 'prepareOrderCancellationParameters');\nexports.prepareTrustline = _.partial(schema_validator_1.schemaValidate, 'prepareTrustlineParameters');\nexports.prepareSettings = _.partial(schema_validator_1.schemaValidate, 'prepareSettingsParameters');\nexports.prepareEscrowCreation = _.partial(schema_validator_1.schemaValidate, 'prepareEscrowCreationParameters');\nexports.prepareEscrowCancellation = _.partial(schema_validator_1.schemaValidate, 'prepareEscrowCancellationParameters');\nexports.prepareEscrowExecution = _.partial(schema_validator_1.schemaValidate, 'prepareEscrowExecutionParameters');\nexports.preparePaymentChannelCreate = _.partial(schema_validator_1.schemaValidate, 'preparePaymentChannelCreateParameters');\nexports.preparePaymentChannelFund = _.partial(schema_validator_1.schemaValidate, 'preparePaymentChannelFundParameters');\nexports.preparePaymentChannelClaim = _.partial(schema_validator_1.schemaValidate, 'preparePaymentChannelClaimParameters');\nexports.prepareCheckCreate = _.partial(schema_validator_1.schemaValidate, 'prepareCheckCreateParameters');\nexports.prepareCheckCash = _.partial(schema_validator_1.schemaValidate, 'prepareCheckCashParameters');\nexports.prepareCheckCancel = _.partial(schema_validator_1.schemaValidate, 'prepareCheckCancelParameters');\nexports.sign = _.partial(schema_validator_1.schemaValidate, 'signParameters');\nexports.combine = _.partial(schema_validator_1.schemaValidate, 'combineParameters');\nexports.submit = _.partial(schema_validator_1.schemaValidate, 'submitParameters');\nexports.computeLedgerHash = _.partial(schema_validator_1.schemaValidate, 'computeLedgerHashParameters');\nexports.generateAddress = _.partial(schema_validator_1.schemaValidate, 'generateAddressParameters');\nexports.signPaymentChannelClaim = _.partial(schema_validator_1.schemaValidate, 'signPaymentChannelClaimParameters');\nexports.verifyPaymentChannelClaim = _.partial(schema_validator_1.schemaValidate, 'verifyPaymentChannelClaimParameters');\nexports.apiOptions = _.partial(schema_validator_1.schemaValidate, 'api-options');\nexports.instructions = _.partial(schema_validator_1.schemaValidate, 'instructions');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/validate.ts\n// module id = 111\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/validate.ts?");

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Validator = module.exports.Validator = __webpack_require__(113);\n\nmodule.exports.ValidatorResult = __webpack_require__(37).ValidatorResult;\nmodule.exports.ValidationError = __webpack_require__(37).ValidationError;\nmodule.exports.SchemaError = __webpack_require__(37).SchemaError;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsonschema/lib/index.js\n// module id = 112\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/jsonschema/lib/index.js?");

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar urilib = __webpack_require__(24);\n\nvar attribute = __webpack_require__(119);\nvar helpers = __webpack_require__(37);\nvar ValidatorResult = helpers.ValidatorResult;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, uri) {\n  if (!schema) {\n    return null;\n  }\n  var ourUri = uri || schema.id;\n  this.addSubSchema(ourUri, schema);\n  if (ourUri) {\n    this.schemas[ourUri] = schema;\n  }\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchema = function addSubSchema(baseuri, schema) {\n  if(!schema || typeof schema!='object') return;\n  // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n  if(schema.$ref){\n    var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n    // Only mark unknown schemas as unresolved\n    if (this.schemas[resolvedUri] === undefined) {\n      this.schemas[resolvedUri] = null;\n      this.unresolvedRefs.push(resolvedUri);\n    }\n    return;\n  }\n  var ourUri = schema.id && urilib.resolve(baseuri, schema.id);\n  var ourBase = ourUri || baseuri;\n  if (ourUri) {\n    if(this.schemas[ourUri]){\n      if(!helpers.deepCompareStrict(this.schemas[ourUri], schema)){\n        throw new Error('Schema <'+schema+'> already exists with different definition');\n      }\n      return this.schemas[ourUri];\n    }\n    this.schemas[ourUri] = schema;\n    var documentUri = ourUri.replace(/^([^#]*)#$/, '$1');\n    this.schemas[documentUri] = schema;\n  }\n  this.addSubSchemaArray(ourBase, ((schema.items instanceof Array)?schema.items:[schema.items]));\n  this.addSubSchemaArray(ourBase, ((schema.extends instanceof Array)?schema.extends:[schema.extends]));\n  this.addSubSchema(ourBase, schema.additionalItems);\n  this.addSubSchemaObject(ourBase, schema.properties);\n  this.addSubSchema(ourBase, schema.additionalProperties);\n  this.addSubSchemaObject(ourBase, schema.definitions);\n  this.addSubSchemaObject(ourBase, schema.patternProperties);\n  this.addSubSchemaObject(ourBase, schema.dependencies);\n  this.addSubSchemaArray(ourBase, schema.disallow);\n  this.addSubSchemaArray(ourBase, schema.allOf);\n  this.addSubSchemaArray(ourBase, schema.anyOf);\n  this.addSubSchemaArray(ourBase, schema.oneOf);\n  this.addSubSchema(ourBase, schema.not);\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!(schemas instanceof Array)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if (!options) {\n    options = {};\n  }\n  var propertyName = options.propertyName || 'instance';\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var base = urilib.resolve(options.base||'/', schema.id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, propertyName, base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n  }\n  if (schema) {\n    var result = this.validateSchema(instance, schema, options, ctx);\n    if (!result) {\n      throw new Error('Result undefined');\n    }\n    return result;\n  }\n  throw new SchemaError('no schema specified', schema);\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema) {\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (schema['extends'] instanceof Array) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  var switchSchema;\n  if (switchSchema = shouldResolve(schema)) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.propertyPath, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n}\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref;\n  if(ref = shouldResolve(schema)) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n}\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance) === 'object' && !(instance instanceof Array) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsonschema/lib/validator.js\n// module id = 113\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/jsonschema/lib/validator.js?");

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn punycode;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(53)(module), __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/punycode/punycode.js\n// module id = 114\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/punycode/punycode.js?");

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/util.js\n// module id = 115\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/url/util.js?");

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.decode = exports.parse = __webpack_require__(117);\nexports.encode = exports.stringify = __webpack_require__(118);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/index.js\n// module id = 116\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/querystring-es3/index.js?");

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/decode.js\n// module id = 117\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/querystring-es3/decode.js?");

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/encode.js\n// module id = 118\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/querystring-es3/encode.js?");

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar helpers = __webpack_require__(37);\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'exclusiveMinimum': true,\n  'exclusiveMaximum': true,\n  'additionalItems': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      return v.id && ('<' + v.id + '>') || (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchema(instance, options, ctx, callback, schema){\n  var res = this.validateSchema(instance, schema, options, ctx);\n  if (! res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchema.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n      ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var msg = (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchema.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n      ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(instance === undefined || !(instance instanceof Object)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, properties[property], options, ctx);\n    }\n\n    var prop = (instance || undefined) && instance[property];\n    var res = this.validateSchema(prop, properties[property], options, ctx.makeChild(properties[property], property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existance tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"additionalProperty \" + JSON.stringify(property) + \" exists in instance when not allowed\",\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(instance === undefined) return;\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var expr = new RegExp(pattern);\n      if (!expr.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, patternProperties[pattern], options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], patternProperties[pattern], options, ctx.makeChild(patternProperties[pattern], property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(instance === undefined) return;\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!instance || typeof instance !== 'object') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    })\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!instance || typeof instance !== 'object') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var self = this;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined || !schema.items) {\n    return result;\n  }\n  instance.every(function (value, i) {\n    var items = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (typeof instance !== 'number') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = true;\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    valid = instance > schema.minimum;\n  } else {\n    valid = instance >= schema.minimum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'minimum',\n      argument: schema.minimum,\n      message: \"must have a minimum value of \" + schema.minimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (typeof instance !== 'number') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid;\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    valid = instance < schema.maximum;\n  } else {\n    valid = instance <= schema.maximum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'maximum',\n      argument: schema.maximum,\n      message: \"must have a maximum value of \" + schema.maximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (typeof instance !== 'number') {\n    return null;\n  }\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument)\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n return validateMultipleOfOrDivisbleBy(instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy(instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatability with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\"\n    });\n  } else if (instance && typeof instance==='object' && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(instance[n]===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (typeof instance !== 'string') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.match(schema.pattern)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!(typeof instance === 'string')) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!(typeof instance === 'string')) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates that every item in an instance array is unique, when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(instance)) {\n    return result;\n  }\n  function testArrays (v, i, a) {\n    for (var j = i + 1; j < a.length; j++) if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n    return true;\n  }\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (!Array.isArray(instance)) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!instance || typeof instance != 'object') {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var schemaId = type && type.id && ('<' + type.id + '>') || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsonschema/lib/attribute.js\n// module id = 119\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/jsonschema/lib/attribute.js?");

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.sha1 = __webpack_require__(121);\nexports.sha224 = __webpack_require__(122);\nexports.sha256 = __webpack_require__(76);\nexports.sha384 = __webpack_require__(123);\nexports.sha512 = __webpack_require__(77);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/sha.js\n// module id = 120\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/sha.js?");

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar common = __webpack_require__(39);\nvar shaCommon = __webpack_require__(75);\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/sha/1.js\n// module id = 121\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/sha/1.js?");

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar SHA256 = __webpack_require__(76);\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/sha/224.js\n// module id = 122\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/sha/224.js?");

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\n\nvar SHA512 = __webpack_require__(77);\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/sha/384.js\n// module id = 123\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/sha/384.js?");

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar common = __webpack_require__(39);\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/ripemd.js\n// module id = 124\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/ripemd.js?");

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(18);\nvar assert = __webpack_require__(38);\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash.js/lib/hash/hmac.js\n// module id = 125\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash.js/lib/hash/hmac.js?");

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar codecFactory = __webpack_require__(127);\n\nvar ALPHABETS = {\n  bitcoin: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  ripple: 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz',\n  tipple: 'RPShNAF39wBUDnEGHJKLM4pQrsT7VWXYZ2bcdeCg65jkm8ofqi1tuvaxyz',\n  stellar: 'gsphnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCr65jkm8oFqi1tuvAxyz'\n};\n\nfunction addMethods(codecMethods, api) {\n  function addVersion(name, opts) {\n    function add(operation) {\n      var encode = operation === 'encode';\n      var func = api[operation + name] = function (arg, arg2) {\n        var params = opts;\n        if (arg2 && encode) {\n          params = {\n            expectedLength: opts.expectedLength,\n            version: opts.versions[opts.versionTypes.indexOf(arg2)]\n          };\n        }\n        return api[operation](arg, params);\n      };\n      return func;\n    }\n    var decode = add('decode');\n    add('encode');\n    api['isValid' + name] = function (arg) {\n      try {\n        decode(arg);\n      } catch (e) {\n        return false;\n      }\n      return true;\n    };\n  }\n  for (var k in codecMethods) {\n    addVersion(k, codecMethods[k]);\n  }\n  return api;\n}\n\nfunction buildCodecsMap(alphabets, Codec) {\n  var codecs = {};\n  for (var _name in ALPHABETS) {\n    codecs[_name] = new Codec(ALPHABETS[_name]);\n  }if (alphabets !== ALPHABETS) {\n    for (var _name2 in alphabets) {\n      codecs[_name2] = new Codec(alphabets[_name2]);\n    }\n  }\n  return codecs;\n}\n\nfunction apiFactory(options) {\n  var _options$alphabets = options.alphabets;\n  var alphabets = _options$alphabets === undefined ? ALPHABETS : _options$alphabets;\n  var _options$codecMethods = options.codecMethods;\n  var codecMethods = _options$codecMethods === undefined ? {} : _options$codecMethods;\n  var _options$defaultAlphabet = options.defaultAlphabet;\n  var defaultAlphabet = _options$defaultAlphabet === undefined ? Object.keys(alphabets)[0] : _options$defaultAlphabet;\n\n  var Codec = codecFactory(options);\n  var codecs = buildCodecsMap(alphabets, Codec);\n\n  return addMethods(codecMethods, {\n    Codec: Codec,\n    codecs: codecs,\n    decode: function decode(string) {\n      var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      var _opts$alphabet = opts.alphabet;\n      var alphabet = _opts$alphabet === undefined ? defaultAlphabet : _opts$alphabet;\n\n      return codecs[alphabet].decode(string, opts);\n    },\n    encode: function encode(bytes) {\n      var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      var _opts$alphabet2 = opts.alphabet;\n      var alphabet = _opts$alphabet2 === undefined ? defaultAlphabet : _opts$alphabet2;\n\n      return codecs[alphabet].encode(bytes, opts);\n    }\n  });\n}\n\nmodule.exports = apiFactory;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/x-address-codec/dist/npm/index.js\n// module id = 126\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/x-address-codec/dist/npm/index.js?");

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar baseCodec = __webpack_require__(128);\n\nvar _require = __webpack_require__(129);\n\nvar seqEqual = _require.seqEqual;\nvar concatArgs = _require.concatArgs;\nvar isSet = _require.isSet;\n\n/* --------------------------------- ENCODER -------------------------------- */\n\nfunction codecFactory(injected) {\n\n  /* eslint-disable indent */\n  var sha256 = injected.sha256;\n\n  var AddressCodec = (function () {\n    /* eslint-enable indent */\n\n    function AddressCodec(alphabet) {\n      _classCallCheck(this, AddressCodec);\n\n      this.alphabet = alphabet;\n      this.codec = baseCodec(alphabet);\n      this.base = alphabet.length;\n    }\n\n    /* eslint-disable indent */\n\n    _createClass(AddressCodec, [{\n      key: 'encode',\n      value: function encode(bytes) {\n        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n        var version = opts.version;\n\n        return isSet(version) ? this.encodeVersioned(bytes, version, opts.expectedLength) : opts.checked ? this.encodeChecked(bytes) : this.encodeRaw(bytes);\n      }\n    }, {\n      key: 'decode',\n      value: function decode(string) {\n        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n        var version = opts.version;\n        var versions = opts.versions;\n\n        return isSet(versions) ? this.decodeMultiVersioned(string, versions, opts.expectedLength, opts.versionTypes) : isSet(version) ? this.decodeVersioned(string, version, opts.expectedLength) : opts.checked ? this.decodeChecked(string) : this.decodeRaw(string);\n      }\n    }, {\n      key: 'encodeRaw',\n      value: function encodeRaw(bytes) {\n        return this.codec.encode(bytes);\n      }\n    }, {\n      key: 'decodeRaw',\n      value: function decodeRaw(string) {\n        return this.codec.decode(string);\n      }\n    }, {\n      key: 'encodeChecked',\n      value: function encodeChecked(buffer) {\n        var check = sha256(sha256(buffer)).slice(0, 4);\n        return this.encodeRaw(concatArgs(buffer, check));\n      }\n    }, {\n      key: 'decodeChecked',\n      value: function decodeChecked(encoded) {\n        var buf = this.decodeRaw(encoded);\n        if (buf.length < 5) {\n          throw new Error('invalid_input_size');\n        }\n        if (!this.verifyCheckSum(buf)) {\n          throw new Error('checksum_invalid');\n        }\n        return buf.slice(0, -4);\n      }\n    }, {\n      key: 'encodeVersioned',\n      value: function encodeVersioned(bytes, version, expectedLength) {\n        if (expectedLength && bytes.length !== expectedLength) {\n          throw new Error('unexpected_payload_length');\n        }\n        return this.encodeChecked(concatArgs(version, bytes));\n      }\n    }, {\n      key: 'decodeVersioned',\n      value: function decodeVersioned(string, version, expectedLength) {\n        return this.decodeMultiVersioned(string, [version], expectedLength).bytes;\n      }\n\n      /**\n      * @param {String} encoded - base58 checksum encoded data string\n      * @param {Array} possibleVersions - array of possible versions.\n      *                                   Each element could be a single byte or an\n      *                                   array of bytes.\n      * @param {Number} [expectedLength] - of decoded bytes minus checksum\n      *\n      * @param {Array} [types] - parrallel array of names matching possibleVersions\n      *\n      * @return {Object} -\n      */\n    }, {\n      key: 'decodeMultiVersioned',\n      value: function decodeMultiVersioned(encoded, possibleVersions, expectedLength, types) {\n        var withoutSum = this.decodeChecked(encoded);\n        var ret = { version: null, bytes: null };\n\n        if (possibleVersions.length > 1 && !expectedLength) {\n          throw new Error('must pass expectedLengthgth > 1 possibleVersions');\n        }\n\n        var versionLenGuess = possibleVersions[0].length || 1; // Number.length\n        var payloadLength = expectedLength || withoutSum.length - versionLenGuess;\n        var versionBytes = withoutSum.slice(0, -payloadLength);\n        var payload = withoutSum.slice(-payloadLength);\n\n        var foundVersion = possibleVersions.some(function (version, i) {\n          var asArray = Array.isArray(version) ? version : [version];\n          if (seqEqual(versionBytes, asArray)) {\n            ret.version = version;\n            ret.bytes = payload;\n            if (types) {\n              ret.type = types[i];\n            }\n            return true;\n          }\n        });\n\n        if (!foundVersion) {\n          throw new Error('version_invalid');\n        }\n        if (expectedLength && ret.bytes.length !== expectedLength) {\n          throw new Error('unexpected_payload_length');\n        }\n\n        return ret;\n      }\n    }, {\n      key: 'verifyCheckSum',\n      value: function verifyCheckSum(bytes) {\n        var computed = sha256(sha256(bytes.slice(0, -4))).slice(0, 4);\n        var checksum = bytes.slice(-4);\n        return seqEqual(computed, checksum);\n      }\n\n      /**\n      * @param {String} desiredPrefix - desired prefix when base58 encoded with\n      *                                 checksum\n      * @param {Number} payloadLength - number of bytes encoded not incl checksum\n      * @return {Array} version\n      */\n    }, {\n      key: 'findPrefix',\n      value: function findPrefix(desiredPrefix, payloadLength) {\n        if (this.base !== 58) {\n          throw new Error('Only works for base58');\n        }\n        var totalLength = payloadLength + 4; // for checksum\n        var chars = Math.log(Math.pow(256, totalLength)) / Math.log(this.base);\n        // (x, x.8] -> x+1, (x.8, x+1) -> x+2\n        var requiredChars = Math.ceil(chars + 0.2);\n        var padding = this.alphabet[Math.floor(this.alphabet.length / 2) - 1];\n        var template = desiredPrefix + new Array(requiredChars + 1).join(padding);\n        var bytes = this.decodeRaw(template);\n        var version = bytes.slice(0, -totalLength);\n        return version;\n      }\n    }]);\n\n    return AddressCodec;\n  })();\n\n  return AddressCodec;\n  /* eslint-enable indent */\n}\n/* ------------------------------- END ENCODER ------------------------------ */\n\nmodule.exports = codecFactory;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/x-address-codec/dist/npm/address-codec.js\n// module id = 127\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/x-address-codec/dist/npm/address-codec.js?");

/***/ }),
/* 128 */
/***/ (function(module, exports) {

eval("// base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nmodule.exports = function base (ALPHABET) {\n  var ALPHABET_MAP = {}\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n\n  // pre-compute lookup table\n  for (var i = 0; i < ALPHABET.length; i++) {\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i\n  }\n\n  function encode (source) {\n    if (source.length === 0) return ''\n\n    var digits = [0]\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8\n        digits[j] = carry % BASE\n        carry = (carry / BASE) | 0\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE)\n        carry = (carry / BASE) | 0\n      }\n    }\n\n    var string = ''\n\n    // deal with leading zeros\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += ALPHABET[0]\n    // convert digits to a string\n    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]\n\n    return string\n  }\n\n  function decodeUnsafe (string) {\n    if (string.length === 0) return []\n\n    var bytes = [0]\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]]\n      if (value === undefined) return\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE\n        bytes[j] = carry & 0xff\n        carry >>= 8\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff)\n        carry >>= 8\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0)\n    }\n\n    return bytes.reverse()\n  }\n\n  function decode (string) {\n    var array = decodeUnsafe(string)\n    if (array) return array\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base-x/index.js\n// module id = 128\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/base-x/index.js?");

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction seqEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isSequence(val) {\n  return val.length !== undefined;\n}\n\n/**\n* Concatenates all `arguments` into a single array. Each argument can be either\n* a single element or a sequence, which has a `length` property and supports\n* element retrieval via sequence[ix].\n*\n* > concatArgs(1, [2, 3], new Buffer([4,5]), new Uint8Array([6, 7]));\n*  [1,2,3,4,5,6,7]\n*\n* @return {Array} - concatenated arguments\n*/\nfunction concatArgs() {\n  var ret = [];\n\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  args.forEach(function (arg) {\n    if (isSequence(arg)) {\n      for (var j = 0; j < arg.length; j++) {\n        ret.push(arg[j]);\n      }\n    } else {\n      ret.push(arg);\n    }\n  });\n  return ret;\n}\n\nfunction isSet(o) {\n  return o !== null && o !== undefined;\n}\n\nmodule.exports = {\n  seqEqual: seqEqual,\n  concatArgs: concatArgs,\n  isSet: isSet\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/x-address-codec/dist/npm/utils.js\n// module id = 129\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/x-address-codec/dist/npm/utils.js?");

/***/ }),
/* 130 */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 130\n// module chunks = 0\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ }),
/* 131 */
/***/ (function(module, exports) {

eval("module.exports = {\"name\":\"elliptic\",\"version\":\"5.2.1\",\"description\":\"EC cryptography\",\"main\":\"lib/elliptic.js\",\"scripts\":{\"test\":\"make lint && istanbul test _mocha --reporter=spec test/*-test.js\",\"coveralls\":\"cat ./coverage/lcov.info | coveralls\"},\"repository\":{\"type\":\"git\",\"url\":\"git@github.com:indutny/elliptic\"},\"keywords\":[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],\"author\":\"Fedor Indutny <fedor@indutny.com>\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/indutny/elliptic/issues\"},\"homepage\":\"https://github.com/indutny/elliptic\",\"devDependencies\":{\"browserify\":\"^3.44.2\",\"coveralls\":\"^2.11.3\",\"istanbul\":\"^0.3.17\",\"jscs\":\"^1.11.3\",\"jshint\":\"^2.6.0\",\"mocha\":\"^2.1.0\",\"uglify-js\":\"^2.4.13\"},\"dependencies\":{\"bn.js\":\"^3.1.1\",\"brorand\":\"^1.0.1\",\"hash.js\":\"^1.0.0\",\"inherits\":\"^2.0.1\"}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/package.json\n// module id = 131\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/package.json?");

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = exports;\nvar bn = __webpack_require__(16);\n\nutils.assert = function assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n};\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (!enc) {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  } else if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, computer) {\n  var name = computer.name;\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new bn(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/utils.js\n// module id = 132\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/utils.js?");

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hash = __webpack_require__(25);\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this.reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc);\n  var nonce = utils.toArray(options.nonce, options.nonceEnc);\n  var pers = utils.toArray(options.pers, options.persEnc);\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this.reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toBuffer(entropy, entropyEnc);\n  add = utils.toBuffer(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this.reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this.reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc);\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this.reseed++;\n  return utils.encode(res, enc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/hmac-drbg.js\n// module id = 133\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/hmac-drbg.js?");

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bn = __webpack_require__(16);\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n  return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n  if (bytes[0] === 0x04 && bytes.length - 1 === 2 * len) {\n    return this.point(bytes.slice(1, 1 + len),\n                      bytes.slice(1 + len, 1 + 2 * len));\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/base.js\n// module id = 134\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/base.js?");

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = __webpack_require__(45);\nvar elliptic = __webpack_require__(13);\nvar bn = __webpack_require__(16);\nvar inherits = __webpack_require__(3);\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.sign) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.sign) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.sign) {\n      split.k1.sign = !split.k1.sign;\n      p = p.neg(true);\n    }\n    if (split.k2.sign) {\n      split.k2.sign = !split.k2.sign;\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/short.js\n// module id = 135\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/short.js?");

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = __webpack_require__(45);\nvar bn = __webpack_require__(16);\nvar inherits = __webpack_require__(3);\nvar Base = curve.base;\n\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.i4 = new bn(4).toRed(this.red).redInvm();\n  this.two = new bn(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new bn(x, 16);\n    this.z = new bn(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/mont.js\n// module id = 136\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/mont.js?");

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curve = __webpack_require__(45);\nvar elliptic = __webpack_require__(13);\nvar bn = __webpack_require__(16);\nvar inherits = __webpack_require__(3);\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new bn(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new bn(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new bn(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new bn(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - 1) / (d y^2 + 1)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.one);\n  var rhs = y2.redMul(this.d).redAdd(this.one);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = z ? new bn(z, 16) : this.curve.one;\n    this.t = t && new bn(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/edwards.js\n// module id = 137\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curve/edwards.js?");

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar curves = exports;\n\nvar hash = __webpack_require__(25);\nvar elliptic = __webpack_require__(13);\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '0',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = __webpack_require__(139);\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curves.js\n// module id = 138\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/curves.js?");

/***/ }),
/* 139 */
/***/ (function(module, exports) {

eval("module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js\n// module id = 139\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js?");

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bn = __webpack_require__(16);\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = __webpack_require__(141);\nvar Signature = __webpack_require__(142);\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n  do {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray();\n  for (var i = bkey.length; i < bytes; i++)\n    bkey.unshift(0);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray();\n  for (var i = nonce.length; i < bytes; i++)\n    nonce.unshift(0);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new bn(1));\n  do {\n    var k = new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0)\n      s = this.n.sub(s);\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  } while (true);\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  return p.getX().umod(this.n).cmp(r) === 0;\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  r = this.curve.pointFromX(r, isYOdd);\n  var eNeg = e.neg().umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  var rInv = signature.r.invm(n);\n  return r.mul(s).add(this.g.mul(eNeg)).mul(rInv);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime = this.recoverPubKey(e, signature, i);\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/ec/index.js\n// module id = 140\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/ec/index.js?");

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bn = __webpack_require__(16);\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/ec/key.js\n// module id = 141\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/ec/key.js?");

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bn = __webpack_require__(16);\n\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam !== null)\n    this.recoveryParam = options.recoveryParam;\n  else\n    this.recoveryParam = null;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/ec/signature.js\n// module id = 142\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/ec/signature.js?");

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hash = __webpack_require__(25);\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = __webpack_require__(144);\nvar Signature = __webpack_require__(145);\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/eddsa/index.js\n// module id = 143\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/eddsa/index.js?");

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/eddsa/key.js\n// module id = 144\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/eddsa/key.js?");

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bn = __webpack_require__(16);\nvar elliptic = __webpack_require__(13);\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof bn)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/eddsa/signature.js\n// module id = 145\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/elliptic/lib/elliptic/eddsa/signature.js?");

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // eslint-disable-line strict\n\nvar _createClass = __webpack_require__(147)['default'];\n\nvar _classCallCheck = __webpack_require__(151)['default'];\n\nvar hashjs = __webpack_require__(25);\nvar BigNum = __webpack_require__(16);\n\nmodule.exports = (function () {\n  function Sha512() {\n    _classCallCheck(this, Sha512);\n\n    this.hash = hashjs.sha512();\n  }\n\n  _createClass(Sha512, [{\n    key: 'add',\n    value: function add(bytes) {\n      this.hash.update(bytes);\n      return this;\n    }\n  }, {\n    key: 'addU32',\n    value: function addU32(i) {\n      return this.add([i >>> 24 & 0xFF, i >>> 16 & 0xFF, i >>> 8 & 0xFF, i & 0xFF]);\n    }\n  }, {\n    key: 'finish',\n    value: function finish() {\n      return this.hash.digest();\n    }\n  }, {\n    key: 'first256',\n    value: function first256() {\n      return this.finish().slice(0, 32);\n    }\n  }, {\n    key: 'first256BN',\n    value: function first256BN() {\n      return new BigNum(this.first256());\n    }\n  }]);\n\n  return Sha512;\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/distrib/npm/sha512.js\n// module id = 146\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/distrib/npm/sha512.js?");

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Object$defineProperty = __webpack_require__(148)[\"default\"];\n\nexports[\"default\"] = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n\n      _Object$defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n})();\n\nexports.__esModule = true;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/babel-runtime/helpers/create-class.js\n// module id = 147\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/babel-runtime/helpers/create-class.js?");

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(149), __esModule: true };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/babel-runtime/core-js/object/define-property.js\n// module id = 148\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/babel-runtime/core-js/object/define-property.js?");

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(150);\nmodule.exports = function defineProperty(it, key, desc){\n  return $.setDesc(it, key, desc);\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/core-js/library/fn/object/define-property.js\n// module id = 149\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/core-js/library/fn/object/define-property.js?");

/***/ }),
/* 150 */
/***/ (function(module, exports) {

eval("var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/core-js/library/modules/$.js\n// module id = 150\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/core-js/library/modules/$.js?");

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports[\"default\"] = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexports.__esModule = true;\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/node_modules/babel-runtime/helpers/class-call-check.js\n// module id = 151\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/node_modules/babel-runtime/helpers/class-call-check.js?");

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // eslint-disable-line strict\n\nvar assert = __webpack_require__(2);\nvar hashjs = __webpack_require__(25);\nvar BN = __webpack_require__(16);\n\nfunction bytesToHex(a) {\n  return a.map(function (byteValue) {\n    var hex = byteValue.toString(16).toUpperCase();\n    return hex.length > 1 ? hex : '0' + hex;\n  }).join('');\n}\n\nfunction hexToBytes(a) {\n  assert(a.length % 2 === 0);\n  return new BN(a, 16).toArray(null, a.length / 2);\n}\n\nfunction computePublicKeyHash(publicKeyBytes) {\n  var hash256 = hashjs.sha256().update(publicKeyBytes).digest();\n  var hash160 = hashjs.ripemd160().update(hash256).digest();\n  return hash160;\n}\n\nfunction seedFromPhrase(phrase) {\n  return hashjs.sha512().update(phrase).digest().slice(0, 16);\n}\n\nmodule.exports = {\n  bytesToHex: bytesToHex,\n  hexToBytes: hexToBytes,\n  computePublicKeyHash: computePublicKeyHash,\n  seedFromPhrase: seedFromPhrase\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-keypairs/distrib/npm/utils.js\n// module id = 152\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-keypairs/distrib/npm/utils.js?");

/***/ }),
/* 153 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"tx\",\"link\":\"https://ripple.com/build/transactions/\",\"description\":\"An object in rippled txJSON format\",\"type\":\"object\",\"properties\":{\"Account\":{\"$ref\":\"address\"}},\"required\":[\"Account\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/tx-json.json\n// module id = 153\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/tx-json.json?");

/***/ }),
/* 154 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"transactionType\",\"link\":\"transaction-types\",\"description\":\"The type of the transaction.\",\"type\":\"string\",\"enum\":[\"payment\",\"order\",\"orderCancellation\",\"trustline\",\"settings\",\"escrowCreation\",\"escrowCancellation\",\"escrowExecution\",\"paymentChannelCreate\",\"paymentChannelFund\",\"paymentChannelClaim\",\"checkCreate\",\"checkCancel\",\"checkCash\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/transaction-type.json\n// module id = 154\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/transaction-type.json?");

/***/ }),
/* 155 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"hash128\",\"description\":\"The hexadecimal representation of a 128-bit hash\",\"type\":\"string\",\"pattern\":\"^[A-F0-9]{32}$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/hash128.json\n// module id = 155\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/hash128.json?");

/***/ }),
/* 156 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"hash256\",\"description\":\"The hexadecimal representation of a 256-bit hash\",\"type\":\"string\",\"pattern\":\"^[A-F0-9]{64}$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/hash256.json\n// module id = 156\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/hash256.json?");

/***/ }),
/* 157 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"sequence\",\"link\":\"account-sequence-number\",\"description\":\"An account transaction sequence number\",\"type\":\"integer\",\"minimum\":1}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/sequence.json\n// module id = 157\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/sequence.json?");

/***/ }),
/* 158 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"signature\",\"description\":\"The hexadecimal representation of a signature.\",\"type\":\"string\",\"pattern\":\"^[A-F0-9]+$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/signature.json\n// module id = 158\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/signature.json?");

/***/ }),
/* 159 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"issue\",\"description\":\"A currency-counterparty pair, or just currency if it's XRP\",\"allOf\":[{\"$ref\":\"amountbase\"},{\"not\":{\"required\":[\"value\"]}}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/issue.json\n// module id = 159\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/issue.json?");

/***/ }),
/* 160 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"ledgerVersion\",\"description\":\"A ledger version number\",\"oneOf\":[{\"type\":\"integer\",\"minimum\":1},{\"type\":\"string\",\"enum\":[\"validated\",\"closed\",\"current\"]}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/ledger-version.json\n// module id = 160\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/ledger-version.json?");

/***/ }),
/* 161 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"maxAdjustment\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address to send from.\"},\"maxAmount\":{\"$ref\":\"laxAmount\",\"description\":\"The maximum amount to send. (This field is exclusive with source.amount)\"},\"tag\":{\"$ref\":\"tag\"}},\"required\":[\"address\",\"maxAmount\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/max-adjustment.json\n// module id = 161\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/max-adjustment.json?");

/***/ }),
/* 162 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"memo\",\"description\":\"Memo objects represent arbitrary data that can be included in a transaction\",\"type\":\"object\",\"properties\":{\"type\":{\"pattern\":\"^[A-Za-z0-9\\\\-._~:/?#[\\\\]@!$&'()*+,;=%]*$\",\"description\":\"Conventionally, a unique relation (according to [RFC 5988](http://tools.ietf.org/html/rfc5988#section-4)) that defines the format of this memo. Only characters allowed in URLs are permitted.\"},\"format\":{\"pattern\":\"^[A-Za-z0-9\\\\-._~:/?#[\\\\]@!$&'()*+,;=%]*$\",\"description\":\"Conventionally containing information on how the memo is encoded, for example as a [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml). Only characters allowed in URLs are permitted.\"},\"data\":{\"type\":\"string\",\"description\":\"Arbitrary string, conventionally containing the content of the memo.\"}},\"additionalProperties\":false,\"anyOf\":[{\"required\":[\"data\"]},{\"required\":[\"type\"]}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/memo.json\n// module id = 162\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/memo.json?");

/***/ }),
/* 163 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"memos\",\"link\":\"transaction-memos\",\"description\":\"Array of memos to attach to the transaction.\",\"type\":\"array\",\"items\":{\"$ref\":\"memo\"}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/memos.json\n// module id = 163\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/memos.json?");

/***/ }),
/* 164 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"publicKey\",\"description\":\"The hexadecimal representation of a secp256k1 or Ed25519 public key.\",\"type\":\"string\",\"pattern\":\"^[A-F0-9]+$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/public-key.json\n// module id = 164\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/public-key.json?");

/***/ }),
/* 165 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"privateKey\",\"description\":\"The hexadecimal representation of a secp256k1 or Ed25519 private key.\",\"type\":\"string\",\"pattern\":\"^[A-F0-9]+$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/private-key.json\n// module id = 165\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/private-key.json?");

/***/ }),
/* 166 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"uint32\",\"description\":\"A 32-bit unsigned integer\",\"type\":\"integer\",\"minimum\":0,\"maximum\":4294967295}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/uint32.json\n// module id = 166\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/uint32.json?");

/***/ }),
/* 167 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"value\",\"link\":\"value\",\"description\":\"A string representation of a non-negative floating point number\",\"type\":\"string\",\"pattern\":\"^[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/value.json\n// module id = 167\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/value.json?");

/***/ }),
/* 168 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"sourceAdjustment\",\"type\":\"object\",\"oneOf\":[{\"$ref\":\"sourceExactAdjustment\"},{\"$ref\":\"maxAdjustment\"}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/source-adjustment.json\n// module id = 168\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/source-adjustment.json?");

/***/ }),
/* 169 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"destinationAdjustment\",\"type\":\"object\",\"oneOf\":[{\"$ref\":\"destinationExactAdjustment\"},{\"$ref\":\"minAdjustment\"}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/destination-adjustment.json\n// module id = 169\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/destination-adjustment.json?");

/***/ }),
/* 170 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"tag\",\"description\":\"An arbitrary unsigned 32-bit integer that identifies a reason for payment or a non-Ripple account.\",\"type\":\"integer\",\"$ref\":\"uint32\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/tag.json\n// module id = 170\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/tag.json?");

/***/ }),
/* 171 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"laxAmount\",\"description\":\"Amount where counterparty is optional\",\"link\":\"amount\",\"type\":\"object\",\"properties\":{\"currency\":{\"$ref\":\"currency\"},\"counterparty\":{\"$ref\":\"address\"},\"value\":{\"$ref\":\"value\"}},\"required\":[\"currency\",\"value\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/lax-amount.json\n// module id = 171\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/lax-amount.json?");

/***/ }),
/* 172 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"laxLaxAmount\",\"description\":\"Amount where counterparty and value are optional\",\"link\":\"amount\",\"type\":\"object\",\"properties\":{\"currency\":{\"$ref\":\"currency\"},\"counterparty\":{\"$ref\":\"address\"},\"value\":{\"$ref\":\"value\"}},\"required\":[\"currency\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/lax-lax-amount.json\n// module id = 172\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/lax-lax-amount.json?");

/***/ }),
/* 173 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"minAdjustment\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address to send to.\"},\"minAmount\":{\"$ref\":\"laxAmount\",\"description\":\"The minimum amount to be delivered. (This field is exclusive with destination.amount)\"},\"tag\":{\"$ref\":\"tag\"}},\"required\":[\"address\",\"minAmount\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/min-adjustment.json\n// module id = 173\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/min-adjustment.json?");

/***/ }),
/* 174 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"sourceExactAdjustment\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address to send from.\"},\"amount\":{\"$ref\":\"laxAmount\",\"description\":\"An exact amount to send. If the counterparty is not specified, amounts with any counterparty may be used. (This field is exclusive with source.maxAmount)\"},\"tag\":{\"$ref\":\"tag\"}},\"required\":[\"address\",\"amount\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/source-exact-adjustment.json\n// module id = 174\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/source-exact-adjustment.json?");

/***/ }),
/* 175 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"destinationExactAdjustment\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address to receive at.\"},\"amount\":{\"$ref\":\"laxAmount\",\"description\":\"An exact amount to deliver to the recipient. If the counterparty is not specified, amounts with any counterparty may be used. (This field cannot be used with `destination.minAmount`.)\"},\"tag\":{\"$ref\":\"tag\"}},\"required\":[\"address\",\"amount\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/destination-exact-adjustment.json\n// module id = 175\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/destination-exact-adjustment.json?");

/***/ }),
/* 176 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"destinationAddressTag\",\"description\":\"A destination address and optional tag, with no amount included. When parsing an incoming transaction, the original specification's amount is hidden to prevent misinterpretation. For the amount that the transaction delivered, see `outcome.deliveredAmount`.\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address to receive at.\"},\"tag\":{\"$ref\":\"tag\"}},\"required\":[\"address\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/destination-address-tag.json\n// module id = 176\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/destination-address-tag.json?");

/***/ }),
/* 177 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"transactionHash\",\"link\":\"transaction-id\",\"description\":\"A hash of a transaction used to identify the transaction, represented in hexadecimal.\",\"type\":\"string\",\"pattern\":\"^[A-F0-9]{64}$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/transaction-hash.json\n// module id = 177\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/transaction-hash.json?");

/***/ }),
/* 178 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"address\",\"description\":\"A Ripple account address\",\"type\":\"string\",\"format\":\"address\",\"link\":\"address\",\"pattern\":\"^r[1-9A-HJ-NP-Za-km-z]{25,34}$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/address.json\n// module id = 178\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/address.json?");

/***/ }),
/* 179 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"adjustment\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\"},\"amount\":{\"$ref\":\"amount\"},\"tag\":{\"$ref\":\"tag\"}},\"required\":[\"address\",\"amount\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/adjustment.json\n// module id = 179\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/adjustment.json?");

/***/ }),
/* 180 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"quality\",\"description\":\"Ratio for incoming/outgoing transit fees.\",\"type\":\"number\",\"minimum\":1e-9,\"maximum\":4.294967295}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/quality.json\n// module id = 180\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/quality.json?");

/***/ }),
/* 181 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"amount\",\"link\":\"amount\",\"description\":\"An Amount on the XRP Ledger\",\"allOf\":[{\"$ref\":\"amountbase\"},{\"required\":[\"value\"]}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/amount.json\n// module id = 181\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/amount.json?");

/***/ }),
/* 182 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"amountbase\",\"description\":\"Base class for amount and issue\",\"type\":\"object\",\"properties\":{\"value\":{\"description\":\"The quantity of the currency, denoted as a string to retain floating point precision\",\"$ref\":\"value\"},\"currency\":{\"description\":\"The three-character code or hexadecimal string used to denote currencies, or \\\"drops\\\" for the smallest unit of XRP.\",\"$ref\":\"currency\"},\"counterparty\":{\"description\":\"The Ripple address of the account that owes or is owed the funds (omitted if `currency` is \\\"XRP\\\" or \\\"drops\\\")\",\"$ref\":\"address\"}},\"additionalProperties\":false,\"required\":[\"currency\"],\"oneOf\":[{\"properties\":{\"currency\":{\"not\":{\"enum\":[\"XRP\",\"drops\"]}}},\"required\":[\"counterparty\"]},{\"properties\":{\"currency\":{\"enum\":[\"XRP\",\"drops\"]}},\"not\":{\"required\":[\"counterparty\"]}}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/amountbase.json\n// module id = 182\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/amountbase.json?");

/***/ }),
/* 183 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"balance\",\"description\":\"Balance amount\",\"link\":\"amount\",\"type\":\"object\",\"properties\":{\"value\":{\"description\":\"The balance on the trustline\",\"$ref\":\"signedValue\"},\"currency\":{\"description\":\"The three-character code or hexadecimal string used to denote currencies\",\"$ref\":\"currency\"},\"counterparty\":{\"description\":\"The Ripple address of the account that owes or is owed the funds.\",\"$ref\":\"address\"}},\"additionalProperties\":false,\"required\":[\"currency\",\"value\"],\"oneOf\":[{\"properties\":{\"currency\":{\"not\":{\"enum\":[\"XRP\"]}}},\"required\":[\"counterparty\"]},{\"properties\":{\"currency\":{\"enum\":[\"XRP\"]}},\"not\":{\"required\":[\"counterparty\"]}}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/balance.json\n// module id = 183\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/balance.json?");

/***/ }),
/* 184 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"blob\",\"description\":\"An uppercase hexadecimal string representation of a transaction\",\"type\":\"string\",\"minLength\":1,\"pattern\":\"^[0-9A-F]*$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/blob.json\n// module id = 184\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/blob.json?");

/***/ }),
/* 185 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"currency\",\"description\":\"The three-character code or hexadecimal string used to denote currencies\",\"type\":\"string\",\"link\":\"currency\",\"pattern\":\"^([a-zA-Z0-9<>(){}[\\\\]|?!@#$%^&*]{3}|[A-F0-9]{40}|drops)$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/currency.json\n// module id = 185\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/currency.json?");

/***/ }),
/* 186 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"signedValue\",\"description\":\"A string representation of a floating point number\",\"type\":\"string\",\"link\":\"value\",\"pattern\":\"^[-]?[0-9]*[.]?[0-9]+([eE][-+]?[0-9]+)?$\"}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/signed-value.json\n// module id = 186\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/signed-value.json?");

/***/ }),
/* 187 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"orderbook\",\"type\":\"object\",\"properties\":{\"base\":{\"$ref\":\"issue\"},\"counter\":{\"$ref\":\"issue\"}},\"required\":[\"base\",\"counter\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/orderbook.json\n// module id = 187\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/orderbook.json?");

/***/ }),
/* 188 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"instructions\",\"link\":\"transaction-instructions\",\"description\":\"Instructions for executing the transaction\",\"type\":\"object\",\"properties\":{\"sequence\":{\"description\":\"The initiating account's sequence number for this transaction.\",\"$ref\":\"sequence\"},\"fee\":{\"description\":\"An exact fee to pay for the transaction. See [Transaction Fees](#transaction-fees) for more information.\",\"$ref\":\"value\"},\"maxFee\":{\"description\":\"Deprecated: Use `maxFeeXRP` in the RippleAPI constructor instead. The maximum fee to pay for this transaction. If this exceeds `maxFeeXRP`, `maxFeeXRP` will be used instead. See [Transaction Fees](#transaction-fees) for more information.\",\"$ref\":\"value\"},\"maxLedgerVersion\":{\"description\":\"The highest ledger version that the transaction can be included in. If this option and `maxLedgerVersionOffset` are both omitted, the `maxLedgerVersion` option will default to 3 greater than the current validated ledger version (equivalent to `maxLedgerVersionOffset=3`). Use `null` to not set a maximum ledger version.\",\"oneOf\":[{\"$ref\":\"ledgerVersion\"},{\"type\":\"null\"}]},\"maxLedgerVersionOffset\":{\"description\":\"Offset from current validated ledger version to highest ledger version that the transaction can be included in.\",\"type\":\"integer\",\"minimum\":0},\"signersCount\":{\"description\":\"Number of signers that will be signing this transaction.\",\"type\":\"integer\",\"minimum\":1}},\"additionalProperties\":false,\"not\":{\"anyOf\":[{\"description\":\"fee and maxFee are mutually exclusive\",\"required\":[\"fee\",\"maxFee\"]},{\"description\":\"maxLedgerVersion and maxLedgerVersionOffset are mutually exclusive\",\"required\":[\"maxLedgerVersion\",\"maxLedgerVersionOffset\"]}]}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/instructions.json\n// module id = 188\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/instructions.json?");

/***/ }),
/* 189 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"settingsPlusMemos\",\"type\":\"object\",\"properties\":{\"defaultRipple\":{\"type\":\"boolean\",\"description\":\"Enable [rippling](https://ripple.com/build/understanding-the-noripple-flag/) on this account’s trust lines by default. (New in [rippled 0.27.3](https://github.com/ripple/rippled/releases/tag/0.27.3))\"},\"depositAuth\":{\"type\":\"boolean\",\"description\":\"Enable [Deposit Authorization](https://ripple.com/build/deposit-authorization/) on this account. If set, transactions cannot send value of any kind to this account unless the sender of those transactions is the account itself. (Requires the [DepositAuth amendment](https://ripple.com/build/known-amendments/#depositauth))\"},\"disableMasterKey\":{\"type\":\"boolean\",\"description\":\"Disallows use of the master key to sign transactions for this account.\"},\"disallowIncomingXRP\":{\"type\":\"boolean\",\"description\":\"Indicates that client applications should not send XRP to this account. Not enforced by rippled.\"},\"domain\":{\"type\":\"string\",\"description\":\" The domain that owns this account, as a hexadecimal string representing the ASCII for the domain in lowercase.\"},\"emailHash\":{\"description\":\"Hash of an email address to be used for generating an avatar image. Conventionally, clients use Gravatar to display this image. Use `null` to clear.\",\"oneOf\":[{\"type\":\"null\"},{\"$ref\":\"hash128\"}]},\"enableTransactionIDTracking\":{\"type\":\"boolean\",\"description\":\"Track the ID of this account’s most recent transaction.\"},\"globalFreeze\":{\"type\":\"boolean\",\"description\":\"Freeze all assets issued by this account.\"},\"memos\":{\"$ref\":\"memos\"},\"messageKey\":{\"type\":\"string\",\"description\":\"Public key for sending encrypted messages to this account. Conventionally, it should be a secp256k1 key, the same encryption that is used by the rest of Ripple.\"},\"noFreeze\":{\"type\":\"boolean\",\"description\":\"Permanently give up the ability to freeze individual trust lines. This flag can never be disabled after being enabled.\"},\"passwordSpent\":{\"type\":\"boolean\",\"description\":\"Indicates that the account has used its free SetRegularKey transaction.\"},\"regularKey\":{\"oneOf\":[{\"$ref\":\"address\"},{\"type\":\"null\"}],\"description\":\"The public key of a new keypair, to use as the regular key to this account, as a base-58-encoded string in the same format as an account address. Use `null` to remove the regular key.\"},\"requireAuthorization\":{\"type\":\"boolean\",\"description\":\"If set, this account must individually approve other users in order for those users to hold this account’s issuances.\"},\"requireDestinationTag\":{\"type\":\"boolean\",\"description\":\"Requires incoming payments to specify a destination tag.\"},\"signers\":{\"type\":\"object\",\"description\":\"Settings that determine what sets of accounts can be used to sign a transaction on behalf of this account using multisigning.\",\"properties\":{\"threshold\":{\"$ref\":\"uint32\",\"description\":\"A target number for the signer weights. A multi-signature from this list is valid only if the sum weights of the signatures provided is equal or greater than this value. To delete the signers setting, use the value `0`.\"},\"weights\":{\"type\":\"array\",\"description\":\"Weights of signatures for each signer.\",\"items\":{\"type\":\"object\",\"description\":\"An association of an address and a weight.\",\"properties\":{\"address\":{\"$ref\":\"address\"},\"weight\":{\"$ref\":\"uint32\",\"description\":\"The weight that the signature of this account counts as towards the threshold.\"}},\"required\":[\"address\",\"weight\"],\"additionalProperties\":false},\"minItems\":1,\"maxItems\":8}},\"required\":[\"threshold\",\"weights\"],\"additionalProperties\":false},\"transferRate\":{\"description\":\" The fee to charge when users transfer this account’s issuances, as the decimal amount that must be sent to deliver 1 unit. Has precision up to 9 digits beyond the decimal point. Use `null` to set no fee.\",\"oneOf\":[{\"type\":\"null\"},{\"type\":\"number\",\"minimum\":1,\"maximum\":4.294967295}]}},\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/objects/settings-plus-memos.json\n// module id = 189\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/objects/settings-plus-memos.json?");

/***/ }),
/* 190 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"settings\",\"link\":\"settings\",\"$ref\":\"settingsPlusMemos\",\"oneOf\":[{\"required\":[\"memos\"],\"minProperties\":2,\"maxProperties\":2},{\"not\":{\"required\":[\"memos\"]},\"minProperties\":1,\"maxProperties\":1}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/settings.json\n// module id = 190\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/settings.json?");

/***/ }),
/* 191 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"payment\",\"link\":\"payment\",\"type\":\"object\",\"properties\":{\"source\":{\"$ref\":\"sourceAdjustment\",\"description\":\"The source of the funds to be sent.\"},\"destination\":{\"$ref\":\"destinationAdjustment\",\"description\":\"The destination of the funds to be sent.\"},\"paths\":{\"type\":\"string\",\"description\":\"The paths of trustlines and orders to use in executing the payment.\"},\"memos\":{\"$ref\":\"memos\"},\"invoiceID\":{\"description\":\"A 256-bit hash that can be used to identify a particular payment.\",\"$ref\":\"hash256\"},\"allowPartialPayment\":{\"description\":\"If true, this payment should proceed even if the whole amount cannot be delivered due to a lack of liquidity or a lack of funds in the source account.\",\"type\":\"boolean\"},\"noDirectRipple\":{\"description\":\"If true and paths are specified, the sender would like the XRP Ledger to disregard any direct paths from the source account to the destination account. This may be used to take advantage of an arbitrage opportunity or by gateways wishing to issue balances from a hot wallet to a user who has mistakenly set a trustline directly to the hot wallet.\",\"type\":\"boolean\"},\"limitQuality\":{\"description\":\"Only take paths where all the conversions have an input:output ratio that is equal or better than the ratio of destination.amount:source.maxAmount.\",\"type\":\"boolean\"}},\"required\":[\"source\",\"destination\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/payment.json\n// module id = 191\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/payment.json?");

/***/ }),
/* 192 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getPayment\",\"description\":\"A specification of a payment in a response for getTransaction or getTransactions.\",\"type\":\"object\",\"properties\":{\"source\":{\"$ref\":\"sourceAdjustment\",\"description\":\"The source of the funds to be sent.\"},\"destination\":{\"$ref\":\"destinationAddressTag\",\"description\":\"The destination of the funds to be sent. Since this is a payment response, the amount is not shown here. For the amount that the transaction delivered, see `outcome.deliveredAmount`.\"},\"paths\":{\"type\":\"string\",\"description\":\"The paths of trustlines and orders to use in executing the payment.\"},\"memos\":{\"$ref\":\"memos\"},\"invoiceID\":{\"description\":\"A 256-bit hash that can be used to identify a particular payment.\",\"$ref\":\"hash256\"},\"allowPartialPayment\":{\"description\":\"If true, this payment should proceed even if the whole amount cannot be delivered due to a lack of liquidity or a lack of funds in the source account.\",\"type\":\"boolean\"},\"noDirectRipple\":{\"description\":\"If true and paths are specified, the sender would like the XRP Ledger to disregard any direct paths from the source account to the destination account. This may be used to take advantage of an arbitrage opportunity or by gateways wishing to issue balances from a hot wallet to a user who has mistakenly set a trustline directly to the hot wallet.\",\"type\":\"boolean\"},\"limitQuality\":{\"description\":\"Only take paths where all the conversions have an input:output ratio that is equal or better than the ratio of destination.amount:source.maxAmount.\",\"type\":\"boolean\"}},\"required\":[\"source\",\"destination\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/get-payment.json\n// module id = 192\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/get-payment.json?");

/***/ }),
/* 193 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"escrowCancellation\",\"link\":\"escrow-cancellation\",\"type\":\"object\",\"properties\":{\"memos\":{\"$ref\":\"memos\"},\"owner\":{\"$ref\":\"address\",\"description\":\"The address of the owner of the escrow to cancel.\"},\"escrowSequence\":{\"$ref\":\"sequence\",\"description\":\"The [account sequence number](#account-sequence-number) of the [Escrow Creation](#escrow-creation) transaction for the escrow to cancel.\"}},\"required\":[\"owner\",\"escrowSequence\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/escrow-cancellation.json\n// module id = 193\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/escrow-cancellation.json?");

/***/ }),
/* 194 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"orderCancellation\",\"link\":\"order-cancellation\",\"type\":\"object\",\"properties\":{\"orderSequence\":{\"$ref\":\"sequence\",\"description\":\"The [account sequence number](#account-sequence-number) of the order to cancel.\"},\"memos\":{\"$ref\":\"memos\"}},\"required\":[\"orderSequence\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/order-cancellation.json\n// module id = 194\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/order-cancellation.json?");

/***/ }),
/* 195 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"order\",\"link\":\"order\",\"type\":\"object\",\"properties\":{\"direction\":{\"type\":\"string\",\"enum\":[\"buy\",\"sell\"],\"description\":\"Equal to \\\"buy\\\" for buy orders and \\\"sell\\\" for sell orders.\"},\"quantity\":{\"$ref\":\"amount\",\"description\":\"The amount of currency to buy or sell.\"},\"totalPrice\":{\"$ref\":\"amount\",\"description\":\"The total price to be paid for the `quantity` to be bought or sold.\"},\"immediateOrCancel\":{\"type\":\"boolean\",\"description\":\"Treat the offer as an [Immediate or Cancel order](http://en.wikipedia.org/wiki/Immediate_or_cancel). If enabled, the offer will never become a ledger node: it only attempts to match existing offers in the ledger. This cannot be used with `fillOrKill`.\"},\"fillOrKill\":{\"type\":\"boolean\",\"description\":\"Treat the offer as a [Fill or Kill order](http://en.wikipedia.org/wiki/Fill_or_kill). Only attempt to match existing offers in the ledger, and only do so if the entire quantity can be exchanged. This cannot be used with `immediateOrCancel`.\"},\"passive\":{\"description\":\"If enabled, the offer will not consume offers that exactly match it, and instead becomes an Offer node in the ledger. It will still consume offers that cross it.\",\"type\":\"boolean\"},\"expirationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Time after which the offer is no longer active, as an [ISO 8601 date-time](https://en.wikipedia.org/wiki/ISO_8601).\"},\"orderToReplace\":{\"$ref\":\"sequence\",\"description\":\"The [account sequence number](#account-sequence-number) of an order to cancel before the new order is created, effectively replacing the old order.\"},\"memos\":{\"$ref\":\"memos\"}},\"required\":[\"direction\",\"quantity\",\"totalPrice\"],\"additionalProperties\":false,\"not\":{\"description\":\"immediateOrCancel and fillOrKill are mutually exclusive\",\"required\":[\"immediateOrCancel\",\"fillOrKill\"]}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/order.json\n// module id = 195\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/order.json?");

/***/ }),
/* 196 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"escrowExecution\",\"link\":\"escrow-execution\",\"type\":\"object\",\"properties\":{\"memos\":{\"$ref\":\"memos\"},\"owner\":{\"$ref\":\"address\",\"description\":\"The address of the owner of the escrow to execute.\"},\"escrowSequence\":{\"$ref\":\"sequence\",\"description\":\"The [account sequence number](#account-sequence-number) of the [Escrow Creation](#escrow-creation) transaction for the escrow to execute.\"},\"condition\":{\"type\":\"string\",\"description\":\"A hex value representing a [PREIMAGE-SHA-256 crypto-condition](https://tools.ietf.org/html/draft-thomas-crypto-conditions-02#section-8.1). This must match the original `condition` from the escrow creation transaction.\",\"pattern\":\"^[A-F0-9]{0,256}$\"},\"fulfillment\":{\"type\":\"string\",\"description\":\"A hex value representing the [PREIMAGE-SHA-256 crypto-condition](https://tools.ietf.org/html/draft-thomas-crypto-conditions-02#section-8.1) fulfillment for `condition`.\",\"pattern\":\"^[A-F0-9]+$\"}},\"required\":[\"owner\",\"escrowSequence\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/escrow-execution.json\n// module id = 196\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/escrow-execution.json?");

/***/ }),
/* 197 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"escrowCreation\",\"link\":\"escrow-creation\",\"type\":\"object\",\"properties\":{\"amount\":{\"$ref\":\"value\",\"description\":\"Amount of XRP for sender to escrow.\"},\"destination\":{\"$ref\":\"address\",\"description\":\"Address to receive escrowed XRP.\"},\"memos\":{\"$ref\":\"memos\"},\"condition\":{\"type\":\"string\",\"description\":\"A hex value representing a [PREIMAGE-SHA-256 crypto-condition](https://tools.ietf.org/html/draft-thomas-crypto-conditions-02#section-8.1). If present, `fulfillment` is required upon execution.\",\"pattern\":\"^[A-F0-9]{0,256}$\"},\"allowCancelAfter\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"If present, the escrow may be cancelled after this time.\"},\"allowExecuteAfter\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"If present, the escrow can not be executed before this time.\"},\"sourceTag\":{\"$ref\":\"tag\",\"description\":\"Source tag.\"},\"destinationTag\":{\"$ref\":\"tag\",\"description\":\"Destination tag.\"}},\"required\":[\"amount\",\"destination\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/escrow-creation.json\n// module id = 197\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/escrow-creation.json?");

/***/ }),
/* 198 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"paymentChannelCreate\",\"link\":\"payment-channel-create\",\"type\":\"object\",\"properties\":{\"amount\":{\"$ref\":\"value\",\"description\":\"Amount of XRP for sender to set aside in this channel.\"},\"destination\":{\"$ref\":\"address\",\"description\":\"Address to receive XRP claims against this channel.\"},\"settleDelay\":{\"type\":\"number\",\"description\":\"Amount of seconds the source address must wait before closing the channel if it has unclaimed XRP.\"},\"publicKey\":{\"$ref\":\"publicKey\",\"description\":\"Public key of the key pair the source may use to sign claims against this channel.\"},\"cancelAfter\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Time when this channel expires. This expiration cannot be changed after creating the channel.\"},\"sourceTag\":{\"$ref\":\"tag\",\"description\":\"Source tag.\"},\"destinationTag\":{\"$ref\":\"tag\",\"description\":\"Destination tag.\"}},\"required\":[\"amount\",\"destination\",\"settleDelay\",\"publicKey\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/payment-channel-create.json\n// module id = 198\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/payment-channel-create.json?");

/***/ }),
/* 199 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"paymentChannelFund\",\"link\":\"payment-channel-fund\",\"type\":\"object\",\"properties\":{\"amount\":{\"$ref\":\"value\",\"description\":\"Amount of XRP to fund the channel with.\"},\"channel\":{\"$ref\":\"hash256\",\"description\":\"256-bit hexadecimal channel identifier.\"},\"expiration\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"New expiration for this channel. (This does not change the cancelAfter expiration, if the channel has one.) Cannot move the expiration sooner than settleDelay seconds from time of the request.\"}},\"required\":[\"amount\",\"channel\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/payment-channel-fund.json\n// module id = 199\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/payment-channel-fund.json?");

/***/ }),
/* 200 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"paymentChannelClaim\",\"link\":\"payment-channel-claim\",\"type\":\"object\",\"properties\":{\"channel\":{\"$ref\":\"hash256\",\"description\":\"256-bit hexadecimal channel identifier.\"},\"amount\":{\"$ref\":\"value\",\"description\":\"Amount of XRP authorized by this signature.\"},\"balance\":{\"$ref\":\"value\",\"description\":\"Total XRP balance delivered by this channel after claim is processed.\"},\"signature\":{\"$ref\":\"signature\",\"description\":\"Signed claim authorizing withdrawal of XRP from the channel. (Required except from the channel's source address.)\"},\"publicKey\":{\"$ref\":\"publicKey\",\"description\":\"Public key of the channel. (For verifying the signature.)\"},\"renew\":{\"type\":\"boolean\",\"description\":\"Clear the channel's expiration time.\"},\"close\":{\"type\":\"boolean\",\"description\":\"Request to close the channel. If the channel has no XRP remaining or the destination address requests it, closes the channel immediately (returning unclaimed XRP to the source address). Otherwise, sets the channel to expire after settleDelay seconds have passed.\"}},\"required\":[\"channel\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/payment-channel-claim.json\n// module id = 200\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/payment-channel-claim.json?");

/***/ }),
/* 201 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"checkCreate\",\"link\":\"check-create\",\"type\":\"object\",\"properties\":{\"destination\":{\"$ref\":\"address\",\"description\":\"Address of the account that can cash the check.\"},\"sendMax\":{\"$ref\":\"laxAmount\",\"description\":\"Amount of source currency the check is allowed to debit the sender, including transfer fees on non-XRP currencies.\"},\"destinationTag\":{\"$ref\":\"tag\",\"description\":\"Destination tag that identifies the reason for the check, or a hosted recipient to pay.\"},\"expiration\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Time after which the check is no longer valid.\"},\"invoiceID\":{\"$ref\":\"hash256\",\"description\":\"256-bit hash, as a 64-character hexadecimal string, representing a specific reason or identifier for this check.\"}},\"required\":[\"destination\",\"sendMax\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/check-create.json\n// module id = 201\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/check-create.json?");

/***/ }),
/* 202 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"checkCash\",\"link\":\"check-cash\",\"type\":\"object\",\"properties\":{\"checkID\":{\"$ref\":\"hash256\",\"description\":\"The ID of the Check ledger object to cash, as a 64-character hexadecimal string.\"},\"amount\":{\"$ref\":\"laxAmount\",\"description\":\"Redeem the Check for exactly this amount, if possible. The currency must match that of the sendMax of the corresponding CheckCreate transaction. You must provide either this field or deliverMin.\"},\"deliverMin\":{\"$ref\":\"laxAmount\",\"description\":\"Redeem the Check for at least this amount and for as much as possible. The currency must match that of the sendMax of the corresponding CheckCreate transaction. You must provide either this field or amount.\"}},\"required\":[\"checkID\"],\"oneOf\":[{\"required\":[\"amount\"]},{\"required\":[\"deliverMin\"]}],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/check-cash.json\n// module id = 202\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/check-cash.json?");

/***/ }),
/* 203 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"checkCancel\",\"link\":\"check-cancel\",\"type\":\"object\",\"properties\":{\"checkID\":{\"$ref\":\"hash256\",\"description\":\"The ID of the Check ledger object to cancel, as a 64-character hexadecimal string.\"}},\"required\":[\"checkID\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/check-cancel.json\n// module id = 203\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/check-cancel.json?");

/***/ }),
/* 204 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"trustline\",\"link\":\"trustline\",\"type\":\"object\",\"properties\":{\"currency\":{\"$ref\":\"currency\",\"description\":\"The currency this trustline applies to.\"},\"counterparty\":{\"$ref\":\"address\",\"description\":\"The address of the account this trustline extends trust to.\"},\"limit\":{\"$ref\":\"value\",\"description\":\"The maximum amount that the owner of the trustline can be owed through the trustline.\"},\"qualityIn\":{\"$ref\":\"quality\",\"description\":\"Incoming balances on this trustline are valued at this ratio.\"},\"qualityOut\":{\"$ref\":\"quality\",\"description\":\"Outgoing balances on this trustline are valued at this ratio.\"},\"ripplingDisabled\":{\"type\":\"boolean\",\"description\":\"If true, payments cannot ripple through this trustline.\"},\"authorized\":{\"type\":\"boolean\",\"description\":\"If true, authorize the counterparty to hold issuances from this account.\"},\"frozen\":{\"type\":\"boolean\",\"description\":\"If true, the trustline is frozen, which means that funds can only be sent to the owner.\"},\"memos\":{\"$ref\":\"memos\"}},\"required\":[\"currency\",\"counterparty\",\"limit\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/specifications/trustline.json\n// module id = 204\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/specifications/trustline.json?");

/***/ }),
/* 205 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"sign\",\"type\":\"object\",\"properties\":{\"signedTransaction\":{\"type\":\"string\",\"pattern\":\"^[A-F0-9]+$\",\"description\":\"The signed transaction represented as an uppercase hexadecimal string.\"},\"id\":{\"$ref\":\"transactionHash\",\"description\":\"The [Transaction ID](#transaction-id) of the signed transaction.\"}},\"required\":[\"signedTransaction\",\"id\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/sign.json\n// module id = 205\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/sign.json?");

/***/ }),
/* 206 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"submit\",\"type\":\"object\",\"properties\":{\"resultCode\":{\"type\":\"string\",\"description\":\"Deprecated: Use `engine_result` instead.\"},\"resultMessage\":{\"type\":\"string\",\"description\":\"Deprecated: Use `engine_result_message` instead.\"},\"engine_result\":{\"type\":\"string\",\"description\":\"Code indicating the preliminary result of the transaction, for example tesSUCCESS. [List of transaction responses](https://ripple.com/build/transactions/#full-transaction-response-list)\"},\"engine_result_code\":{\"type\":\"integer\",\"description\":\"Numeric code indicating the preliminary result of the transaction, directly correlated to `engine_result`\"},\"engine_result_message\":{\"type\":\"string\",\"description\":\"Human-readable explanation of the transaction's preliminary result.\"},\"tx_blob\":{\"type\":\"string\",\"description\":\"The complete transaction in hex string format.\"},\"tx_json\":{\"$ref\":\"tx\",\"description\":\"The complete transaction in JSON format.\"}},\"required\":[\"resultCode\",\"resultMessage\",\"engine_result\",\"engine_result_code\",\"engine_result_message\",\"tx_blob\",\"tx_json\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/submit.json\n// module id = 206\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/submit.json?");

/***/ }),
/* 207 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getAccountInfo\",\"type\":\"object\",\"properties\":{\"sequence\":{\"$ref\":\"sequence\",\"description\":\"The next (smallest unused) sequence number for this account.\"},\"xrpBalance\":{\"$ref\":\"value\",\"description\":\"The XRP balance owned by the account.\"},\"ownerCount\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"Number of other ledger entries (specifically, trust lines and offers) attributed to this account. This is used to calculate the total reserve required to use the account.\"},\"previousInitiatedTransactionID\":{\"$ref\":\"hash256\",\"description\":\"Hash value representing the most recent transaction that was initiated by this account.\"},\"previousAffectingTransactionID\":{\"$ref\":\"hash256\",\"description\":\"Hash value representing the most recent transaction that affected this account node directly. **Note:** This does not include changes to the account’s trust lines and offers.\"},\"previousAffectingTransactionLedgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"The ledger version that the transaction identified by the `previousAffectingTransactionID` was validated in.\"}},\"required\":[\"sequence\",\"xrpBalance\",\"ownerCount\",\"previousAffectingTransactionID\",\"previousAffectingTransactionLedgerVersion\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-account-info.json\n// module id = 207\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-account-info.json?");

/***/ }),
/* 208 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"AccountObjectsResponse\",\"description\":\"Response format for account_objects\",\"type\":\"object\",\"properties\":{\"account\":{\"$ref\":\"address\",\"description\":\"Unique address of the account this request corresponds to.\"},\"account_objects\":{\"type\":\"array\",\"items\":{\"type\":\"object\"},\"description\":\"Array of objects owned by this account. Each object is in its raw ledger format.\"},\"ledger_hash\":{\"type\":\"string\",\"description\":\"(May be omitted) The identifying hash of the ledger that was used to generate this response.\"},\"ledger_index\":{\"$ref\":\"ledgerVersion\",\"description\":\"(May be omitted) The sequence number of the ledger that was used to generate this response.\"},\"ledger_current_index\":{\"$ref\":\"ledgerVersion\",\"description\":\"(May be omitted) The sequence number of the ledger that was used to generate this response.\"},\"limit\":{\"type\":\"integer\",\"description\":\"(May be omitted) The limit that was used in this request, if any.\"},\"validated\":{\"type\":\"boolean\",\"description\":\"If included and set to true, the information in this request comes from a validated ledger version. Otherwise, the information is subject to change.\"}},\"required\":[\"account\",\"account_objects\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-account-objects.json\n// module id = 208\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-account-objects.json?");

/***/ }),
/* 209 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getBalances\",\"type\":\"array\",\"items\":{\"$ref\":\"balance\"}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-balances.json\n// module id = 209\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-balances.json?");

/***/ }),
/* 210 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getBalanceSheet\",\"description\":\"getBalanceSheet response\",\"type\":\"object\",\"properties\":{\"balances\":{\"type\":\"array\",\"items\":{\"$ref\":\"amount\"},\"description\":\"Amounts issued to the hotwallet accounts from the request. The keys are hot wallet addresses and the values are arrays of currency amounts they hold. The issuer (omitted from the currency amounts) is the account from the request.\"},\"assets\":{\"type\":\"array\",\"items\":{\"$ref\":\"amount\"},\"description\":\"Total amounts held that are issued by others. For the recommended gateway configuration, there should be none.\"},\"obligations\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"currency\",\"value\"],\"additionalProperties\":false,\"properties\":{\"currency\":{\"$ref\":\"currency\"},\"value\":{\"$ref\":\"value\"}},\"description\":\"An amount that is owed.\"},\"description\":\"Total amounts issued to accounts that are not hot wallets, as a map of currencies to the total value issued.\"}},\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-balance-sheet.json\n// module id = 210\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-balance-sheet.json?");

/***/ }),
/* 211 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getLedger\",\"type\":\"object\",\"properties\":{\"stateHash\":{\"$ref\":\"hash256\",\"description\":\"Hash of all state information in this ledger.\"},\"closeTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"The time at which this ledger was closed.\"},\"closeTimeResolution\":{\"type\":\"integer\",\"minimum\":1,\"description\":\"Approximate number of seconds between closing one ledger version and closing the next one.\"},\"closeFlags\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"A bit-map of flags relating to the closing of this ledger. Currently, the ledger has only one flag defined for `closeFlags`: **sLCF_NoConsensusTime** (value 1). If this flag is enabled, it means that validators were in conflict regarding the correct close time for the ledger, but built otherwise the same ledger, so they declared consensus while \\\"agreeing to disagree\\\" on the close time. In this case, the consensus ledger contains a `closeTime` value that is 1 second after that of the previous ledger. (In this case, there is no official close time, but the actual real-world close time is probably 3-6 seconds later than the specified `closeTime`.)\"},\"ledgerHash\":{\"$ref\":\"hash256\",\"description\":\"Unique identifying hash of the entire ledger.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"The ledger version of this ledger.\"},\"parentLedgerHash\":{\"$ref\":\"hash256\",\"description\":\"Unique identifying hash of the ledger that came immediately before this one.\"},\"parentCloseTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"The time at which the previous ledger was closed.\"},\"totalDrops\":{\"$ref\":\"value\",\"description\":\"Total number of drops (1/1,000,000th of an XRP) in the network, as a quoted integer. (This decreases as transaction fees cause XRP to be destroyed.)\"},\"transactionHash\":{\"$ref\":\"hash256\",\"description\":\"Hash of the transaction information included in this ledger.\"},\"transactions\":{\"description\":\"Array of all transactions that were validated in this ledger. Transactions are represented in the same format as the return value of [getTransaction](#gettransaction).\",\"type\":\"array\",\"items\":{\"$ref\":\"getTransaction\",\"description\":\"A transaction in the same format as the return value of [getTransaction](#gettransaction).\"}},\"transactionHashes\":{\"description\":\"An array of hashes of all transactions that were validated in this ledger.\",\"type\":\"array\",\"items\":{\"$ref\":\"transactionHash\"}},\"rawState\":{\"type\":\"string\",\"description\":\"A JSON string containing all state data for this ledger in rippled JSON format.\"},\"stateHashes\":{\"description\":\"An array of hashes of all state data in this ledger.\",\"type\":\"array\",\"items\":{\"$ref\":\"hash256\"}}},\"required\":[\"stateHash\",\"closeTime\",\"closeTimeResolution\",\"closeFlags\",\"ledgerHash\",\"ledgerVersion\",\"parentLedgerHash\",\"parentCloseTime\",\"totalDrops\",\"transactionHash\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-ledger.json\n// module id = 211\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-ledger.json?");

/***/ }),
/* 212 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getOrderbook\",\"type\":\"object\",\"properties\":{\"bids\":{\"$ref\":\"orderbookOrders\",\"description\":\"The buy orders in the order book.\"},\"asks\":{\"$ref\":\"orderbookOrders\",\"description\":\"The sell orders in the order book.\"}},\"required\":[\"bids\",\"asks\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-orderbook.json\n// module id = 212\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-orderbook.json?");

/***/ }),
/* 213 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getOrders\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"specification\":{\"$ref\":\"order\",\"description\":\"An order specification that would create an order equivalent to the current state of this order.\"},\"properties\":{\"description\":\"Properties of the order not in the specification.\",\"type\":\"object\",\"properties\":{\"maker\":{\"$ref\":\"address\",\"description\":\"The address of the account that submitted the order.\"},\"sequence\":{\"$ref\":\"sequence\",\"description\":\"The account sequence number of the transaction that created this order.\"},\"makerExchangeRate\":{\"$ref\":\"value\",\"description\":\"The exchange rate from the point of view of the account that submitted the order (also known as \\\"quality\\\").\"}},\"required\":[\"maker\",\"sequence\",\"makerExchangeRate\"],\"addtionalProperties\":false}},\"required\":[\"specification\",\"properties\"],\"additionalProperties\":false}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-orders.json\n// module id = 213\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-orders.json?");

/***/ }),
/* 214 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"orderChange\",\"type\":\"object\",\"description\":\"A change to an order.\",\"properties\":{\"direction\":{\"type\":\"string\",\"enum\":[\"buy\",\"sell\"],\"description\":\"Equal to \\\"buy\\\" for buy orders and \\\"sell\\\" for sell orders.\"},\"quantity\":{\"$ref\":\"amount\",\"description\":\"The amount to be bought or sold by the maker.\"},\"totalPrice\":{\"$ref\":\"amount\",\"description\":\"The total amount to be paid or received by the taker.\"},\"makerExchangeRate\":{\"$ref\":\"value\",\"description\":\"The exchange rate between the `quantity` currency and the `totalPrice` currency from the point of view of the maker.\"},\"sequence\":{\"$ref\":\"sequence\",\"description\":\"The order sequence number, used to identify the order for cancellation\"},\"status\":{\"enum\":[\"created\",\"filled\",\"partially-filled\",\"cancelled\"],\"description\":\"The status of the order. One of \\\"created\\\", \\\"filled\\\", \\\"partially-filled\\\", \\\"cancelled\\\".\"},\"expirationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"The time after which the order expires, if any.\"}},\"required\":[\"direction\",\"quantity\",\"totalPrice\",\"sequence\",\"status\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/order-change.json\n// module id = 214\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/order-change.json?");

/***/ }),
/* 215 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getPaymentChannel\",\"type\":\"object\",\"properties\":{\"account\":{\"$ref\":\"address\",\"description\":\"Address that created the payment channel.\"},\"destination\":{\"$ref\":\"address\",\"description\":\"Address to receive XRP claims against this channel.\"},\"amount\":{\"$ref\":\"value\",\"description\":\"The total amount of XRP funded in this channel.\"},\"balance\":{\"$ref\":\"value\",\"description\":\"The total amount of XRP delivered by this channel.\"},\"settleDelay\":{\"type\":\"number\",\"description\":\"Amount of seconds the source address must wait before closing the channel if it has unclaimed XRP.\"},\"expiration\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Time when this channel expires.\"},\"publicKey\":{\"$ref\":\"publicKey\",\"description\":\"Public key of the key pair the source will use to sign claims against this channel.\"},\"cancelAfter\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Time when this channel expires as specified at creation.\"},\"sourceTag\":{\"$ref\":\"tag\",\"description\":\"Source tag.\"},\"destinationTag\":{\"$ref\":\"tag\",\"description\":\"Destination tag.\"},\"previousAffectingTransactionID\":{\"$ref\":\"hash256\",\"description\":\"Hash value representing the most recent transaction that affected this payment channel.\"},\"previousAffectingTransactionLedgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"The ledger version that the transaction identified by the `previousAffectingTransactionID` was validated in.\"}},\"required\":[\"account\",\"destination\",\"amount\",\"balance\",\"settleDelay\",\"previousAffectingTransactionID\",\"previousAffectingTransactionLedgerVersion\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-payment-channel.json\n// module id = 215\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-payment-channel.json?");

/***/ }),
/* 216 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepare\",\"description\":\"Result of prepare function\",\"type\":\"object\",\"properties\":{\"txJSON\":{\"type\":\"string\",\"description\":\"The prepared transaction in rippled JSON format.\"},\"instructions\":{\"description\":\"The instructions for how to execute the transaction after adding automatic defaults.\",\"type\":\"object\",\"properties\":{\"fee\":{\"$ref\":\"value\",\"description\":\"An exact fee to pay for the transaction. See [Transaction Fees](#transaction-fees) for more information.\"},\"sequence\":{\"$ref\":\"sequence\",\"description\":\"The initiating account's sequence number for this transaction.\"},\"maxLedgerVersion\":{\"oneOf\":[{\"$ref\":\"ledgerVersion\"},{\"type\":\"null\"}],\"description\":\"The highest ledger version that the transaction can be included in. Set to `null` if there is no maximum.\"}},\"additionalProperties\":false,\"required\":[\"fee\",\"sequence\",\"maxLedgerVersion\"]}},\"additionalProperties\":false,\"required\":[\"txJSON\",\"instructions\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/prepare.json\n// module id = 216\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/prepare.json?");

/***/ }),
/* 217 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"ledgerEvent\",\"description\":\"A ledger event message\",\"type\":\"object\",\"properties\":{\"baseFeeXRP\":{\"$ref\":\"value\",\"description\":\"Base fee, in XRP.\"},\"ledgerHash\":{\"$ref\":\"hash256\",\"description\":\"Unique hash of the ledger that was closed, as hex.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Ledger version of the ledger that closed.\"},\"ledgerTimestamp\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"The time at which this ledger closed.\"},\"reserveBaseXRP\":{\"$ref\":\"value\",\"description\":\"The minimum reserve, in XRP, that is required for an account.\"},\"reserveIncrementXRP\":{\"$ref\":\"value\",\"description\":\"The increase in account reserve that is added for each item the account owns, such as offers or trust lines.\"},\"transactionCount\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"Number of new transactions included in this ledger.\"},\"validatedLedgerVersions\":{\"type\":\"string\",\"description\":\"Range of ledgers that the server has available. This may be discontiguous.\"}},\"addtionalProperties\":false,\"required\":[\"baseFeeXRP\",\"ledgerHash\",\"ledgerTimestamp\",\"reserveBaseXRP\",\"reserveIncrementXRP\",\"transactionCount\",\"ledgerVersion\",\"validatedLedgerVersions\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/ledger-event.json\n// module id = 217\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/ledger-event.json?");

/***/ }),
/* 218 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getPaths\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"source\":{\"$ref\":\"sourceAdjustment\",\"description\":\"Properties of the source of the payment.\"},\"destination\":{\"$ref\":\"destinationAdjustment\",\"description\":\"Properties of the destination of the payment.\"},\"paths\":{\"type\":\"string\",\"description\":\"The paths of trustlines and orders to use in executing the payment.\"}},\"required\":[\"source\",\"destination\",\"paths\"],\"additionalProperties\":false}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-paths.json\n// module id = 218\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-paths.json?");

/***/ }),
/* 219 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getServerInfo\",\"type\":\"object\",\"properties\":{\"buildVersion\":{\"type\":\"string\",\"description\":\"The version number of the running rippled version.\"},\"completeLedgers\":{\"type\":\"string\",\"pattern\":\"[0-9,-]+\",\"description\":\"Range expression indicating the sequence numbers of the ledger versions the local rippled has in its database. It is possible to be a disjoint sequence, e.g. “2500-5000,32570-7695432”.\"},\"hostID\":{\"type\":\"string\",\"description\":\"On an admin request, returns the hostname of the server running the rippled instance; otherwise, returns a unique four letter word.\"},\"ioLatencyMs\":{\"type\":\"number\",\"description\":\"Amount of time spent waiting for I/O operations to be performed, in milliseconds. If this number is not very, very low, then the rippled server is probably having serious load issues.\"},\"load\":{\"type\":\"object\",\"description\":\"*(Admin only)* Detailed information about the current load state of the server.\",\"properties\":{\"jobTypes\":{\"type\":\"array\",\"description\":\"*(Admin only)* Information about the rate of different types of jobs being performed by the server and how much time it spends on each.\",\"items\":{\"type\":\"object\"}},\"threads\":{\"type\":\"number\",\"description\":\"*(Admin only)* The number of threads in the server’s main job pool, performing various Ripple Network operations.\"}},\"required\":[\"jobTypes\",\"threads\"]},\"lastClose\":{\"type\":\"object\",\"description\":\"Information about the last time the server closed a ledger.\",\"properties\":{\"convergeTimeS\":{\"type\":\"number\",\"description\":\"The time it took to reach a consensus for the last ledger closing, in seconds.\"},\"proposers\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"Number of trusted validators participating in the ledger closing.\"}},\"required\":[\"convergeTimeS\",\"proposers\"]},\"loadFactor\":{\"type\":\"number\",\"description\":\"The load factor the server is currently enforcing, as a multiplier on the base transaction fee. The load factor is determined by the highest of the individual server’s load factor, cluster’s load factor, and the overall network’s load factor.\"},\"peers\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"How many other rippled servers the node is currently connected to.\"},\"pubkeyNode\":{\"type\":\"string\",\"description\":\"Public key used to verify this node for internal communications; this key is automatically generated by the server the first time it starts up. (If deleted, the node can just create a new pair of keys.)\"},\"pubkeyValidator\":{\"type\":\"string\",\"description\":\"*(Admin only)* Public key used by this node to sign ledger validations.\"},\"serverState\":{\"type\":\"string\",\"description\":\"A string indicating to what extent the server is participating in the network. See [Possible Server States](https://ripple.com/build/rippled-apis/#possible-server-states) for more details.\",\"enum\":[\"disconnected\",\"connected\",\"syncing\",\"tracking\",\"full\",\"validating\",\"proposing\"]},\"validatedLedger\":{\"type\":\"object\",\"description\":\"Information about the fully-validated ledger with the highest sequence number (the most recent).\",\"properties\":{\"age\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"The time since the ledger was closed, in seconds.\"},\"baseFeeXRP\":{\"$ref\":\"value\",\"description\":\"Base fee, in XRP. This may be represented in scientific notation such as 1e-05 for 0.00005.\"},\"hash\":{\"$ref\":\"hash256\",\"description\":\"Unique hash for the ledger, as an uppercase hexadecimal string.\"},\"reserveBaseXRP\":{\"$ref\":\"value\",\"description\":\"Minimum amount of XRP necessary for every account to keep in reserve.\"},\"reserveIncrementXRP\":{\"$ref\":\"value\",\"description\":\"Amount of XRP added to the account reserve for each object an account is responsible for in the ledger.\"},\"ledgerVersion\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"Identifying sequence number of this ledger version.\"}},\"additionalProperties\":false,\"required\":[\"age\",\"baseFeeXRP\",\"hash\",\"reserveBaseXRP\",\"reserveIncrementXRP\",\"ledgerVersion\"]},\"validationQuorum\":{\"type\":\"number\",\"description\":\"Minimum number of trusted validations required in order to validate a ledger version. Some circumstances may cause the server to require more validations.\"}},\"required\":[\"buildVersion\",\"completeLedgers\",\"hostID\",\"ioLatencyMs\",\"lastClose\",\"loadFactor\",\"peers\",\"pubkeyNode\",\"serverState\",\"validatedLedger\",\"validationQuorum\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-server-info.json\n// module id = 219\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-server-info.json?");

/***/ }),
/* 220 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getSettings\",\"$ref\":\"settingsPlusMemos\",\"not\":{\"required\":[\"memos\"]}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-settings.json\n// module id = 220\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-settings.json?");

/***/ }),
/* 221 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"orderbookOrders\",\"type\":\"array\",\"items\":{\"description\":\"An order in the order book.\",\"type\":\"object\",\"properties\":{\"specification\":{\"$ref\":\"order\",\"description\":\"An order specification that would create an order equivalent to the current state of this order.\"},\"properties\":{\"description\":\"Properties of the order not in the specification.\",\"type\":\"object\",\"properties\":{\"maker\":{\"$ref\":\"address\",\"description\":\"The address of the account that submitted the order.\"},\"sequence\":{\"$ref\":\"sequence\",\"description\":\"The account sequence number of the transaction that created this order.\"},\"makerExchangeRate\":{\"$ref\":\"value\",\"description\":\"The exchange rate from the point of view of the account that submitted the order (also known as \\\"quality\\\").\"}},\"required\":[\"maker\",\"sequence\",\"makerExchangeRate\"],\"addtionalProperties\":false},\"state\":{\"description\":\"The state of the order.\",\"type\":\"object\",\"properties\":{\"fundedAmount\":{\"$ref\":\"amount\",\"description\":\"How much of the amount the maker would have to pay that the maker currently holds.\"},\"priceOfFundedAmount\":{\"$ref\":\"amount\",\"description\":\"How much the `fundedAmount` would convert to through the exchange rate of this order.\"}},\"required\":[\"fundedAmount\",\"priceOfFundedAmount\"],\"additionalProperties\":false},\"data\":{\"description\":\"The raw order data. This may include `owner_funds`, `Flags`, and other fields.\",\"type\":\"object\",\"additionalProperties\":true}},\"required\":[\"specification\",\"properties\",\"data\"],\"additionalProperties\":false}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/orderbook-orders.json\n// module id = 221\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/orderbook-orders.json?");

/***/ }),
/* 222 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"outcome\",\"type\":\"object\",\"description\":\"The outcome of the transaction (what effects it had).\",\"properties\":{\"result\":{\"type\":\"string\",\"description\":\"Result code returned by rippled. See [Transaction Results](https://ripple.com/build/transactions/#full-transaction-response-list) for a complete list.\"},\"timestamp\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"The timestamp when the transaction was validated. (May be missing when requesting transactions in binary mode.)\"},\"fee\":{\"$ref\":\"value\",\"description\":\"The XRP fee that was charged for the transaction.\"},\"deliveredAmount\":{\"$ref\":\"amount\",\"description\":\"For payment transactions, it is impossible to reliably compute the actual delivered amount from the balanceChanges due to fixed precision. If the payment is not a partial payment and the transaction succeeded, the deliveredAmount should always be considered to be the amount specified in the transaction.\"},\"balanceChanges\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"array\",\"description\":\"Key is the XRP Ledger address; value is an array of signed amounts representing changes of balances for that address.\",\"items\":{\"$ref\":\"balance\"}}},\"orderbookChanges\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"array\",\"description\":\"Key is the maker's XRP Ledger address; value is an array of changes\",\"items\":{\"$ref\":\"orderChange\"}}},\"channelChanges\":{\"type\":\"object\",\"description\":\"Properties reflecting the details of the payment channel.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"The ledger version that the transaction was validated in.\"},\"indexInLedger\":{\"type\":\"integer\",\"minimum\":0,\"description\":\"The ordering index of the transaction in the ledger.\"}},\"required\":[\"result\",\"fee\",\"balanceChanges\",\"orderbookChanges\",\"ledgerVersion\",\"indexInLedger\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/outcome.json\n// module id = 222\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/outcome.json?");

/***/ }),
/* 223 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getTransaction\",\"description\":\"getTransaction response\",\"link\":\"gettransaction\",\"properties\":{\"type\":{\"$ref\":\"transactionType\"},\"specification\":{\"description\":\"A specification that would produce the same outcome as this transaction. *Exception:* For payment transactions, this omits the `destination.amount` field, to prevent misunderstanding. The structure of the specification depends on the value of the `type` field (see [Transaction Types](#transaction-types) for details). *Note:* This is **not** necessarily the same as the original specification.\"},\"outcome\":{\"$ref\":\"outcome\",\"description\":\"The outcome of the transaction (what effects it had).\"},\"id\":{\"$ref\":\"transactionHash\",\"description\":\"A hash of the transaction that can be used to identify it.\"},\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that initiated the transaction.\"},\"sequence\":{\"$ref\":\"sequence\",\"description\":\"The account sequence number of the transaction for the account that initiated it.\"},\"rawTransaction\":{\"description\":\"The raw transaction data as a JSON string. For advanced users only; exercise caution when interpreting this data.\",\"type\":\"string\"}},\"required\":[\"id\",\"address\",\"sequence\",\"type\",\"specification\",\"outcome\"],\"additionalProperties\":false,\"oneOf\":[{\"properties\":{\"type\":{\"enum\":[\"payment\"]},\"specification\":{\"$ref\":\"getPayment\"}}},{\"properties\":{\"type\":{\"enum\":[\"order\"]},\"specification\":{\"$ref\":\"order\"}}},{\"properties\":{\"type\":{\"enum\":[\"orderCancellation\"]},\"specification\":{\"$ref\":\"orderCancellation\"}}},{\"properties\":{\"type\":{\"enum\":[\"trustline\"]},\"specification\":{\"$ref\":\"trustline\"}}},{\"properties\":{\"type\":{\"enum\":[\"settings\"]},\"specification\":{\"$ref\":\"getSettings\"}}},{\"properties\":{\"type\":{\"enum\":[\"checkCreate\"]},\"specification\":{\"$ref\":\"checkCreate\"}}},{\"properties\":{\"type\":{\"enum\":[\"checkCancel\"]},\"specification\":{\"$ref\":\"checkCancel\"}}},{\"properties\":{\"type\":{\"enum\":[\"checkCash\"]},\"specification\":{\"$ref\":\"checkCash\"}}},{\"properties\":{\"type\":{\"enum\":[\"escrowCreation\"]},\"specification\":{\"$ref\":\"escrowCreation\"}}},{\"properties\":{\"type\":{\"enum\":[\"escrowCancellation\"]},\"specification\":{\"$ref\":\"escrowCancellation\"}}},{\"properties\":{\"type\":{\"enum\":[\"escrowExecution\"]},\"specification\":{\"$ref\":\"escrowExecution\"}}},{\"properties\":{\"type\":{\"enum\":[\"paymentChannelCreate\"]},\"specification\":{\"$ref\":\"paymentChannelCreate\"}}},{\"properties\":{\"type\":{\"enum\":[\"paymentChannelFund\"]},\"specification\":{\"$ref\":\"paymentChannelFund\"}}},{\"properties\":{\"type\":{\"enum\":[\"paymentChannelClaim\"]},\"specification\":{\"$ref\":\"paymentChannelClaim\"}}}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-transaction.json\n// module id = 223\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-transaction.json?");

/***/ }),
/* 224 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getTransactions\",\"type\":\"array\",\"items\":{\"$ref\":\"getTransaction\"}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-transactions.json\n// module id = 224\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-transactions.json?");

/***/ }),
/* 225 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getTrustlines\",\"type\":\"array\",\"items\":{\"properties\":{\"specification\":{\"$ref\":\"trustline\",\"description\":\"A trustline specification that would produce this trustline in its current state.\"},\"counterparty\":{\"properties\":{\"limit\":{\"$ref\":\"value\",\"description\":\"The maximum amount that the counterparty can be owed through the trustline.\"},\"ripplingDisabled\":{\"type\":\"boolean\",\"description\":\"If true, payments cannot ripple through this trustline.\"},\"frozen\":{\"type\":\"boolean\",\"description\":\"If true, the trustline is frozen, which means that funds can only be sent to the counterparty.\"},\"authorized\":{\"type\":\"boolean\",\"description\":\"If true, the counterparty authorizes this party to hold issuances from the counterparty.\"}},\"description\":\"Properties of the trustline from the perspective of the counterparty.\",\"required\":[\"limit\"],\"additionalProperties\":false},\"state\":{\"properties\":{\"balance\":{\"$ref\":\"signedValue\",\"description\":\"The balance on the trustline, representing which party owes the other and by how much.\"}},\"description\":\"Properties of the trustline regarding it's current state that are not part of the specification.\",\"required\":[\"balance\"],\"additionalProperties\":false}},\"required\":[\"specification\",\"counterparty\",\"state\"],\"additionalProperties\":false}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/get-trustlines.json\n// module id = 225\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/get-trustlines.json?");

/***/ }),
/* 226 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"signPaymentChannelClaim\",\"type\":\"string\",\"$ref\":\"signature\",\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/sign-payment-channel-claim.json\n// module id = 226\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/sign-payment-channel-claim.json?");

/***/ }),
/* 227 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"verifyPaymentChannelClaim\",\"type\":\"boolean\",\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/output/verify-payment-channel-claim.json\n// module id = 227\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/output/verify-payment-channel-claim.json?");

/***/ }),
/* 228 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getBalancesParameters\",\"description\":\"Parameters for getBalances\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account to get balances for.\"},\"options\":{\"description\":\"Options to filter and determine which balances to return.\",\"properties\":{\"counterparty\":{\"$ref\":\"address\",\"description\":\"Only return balances with this counterparty.\"},\"currency\":{\"$ref\":\"currency\",\"description\":\"Only return balances for this currency.\"},\"limit\":{\"type\":\"integer\",\"minimum\":1,\"description\":\"Return at most this many balances.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Return balances as they were in this historical ledger version.\"}},\"additionalProperties\":false}},\"additionalProperties\":false,\"required\":[\"address\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-balances.json\n// module id = 228\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-balances.json?");

/***/ }),
/* 229 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getBalanceSheetParameters\",\"description\":\"Parameters for getBalanceSheet\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The Ripple address of the account to get the balance sheet of.\"},\"options\":{\"properties\":{\"excludeAddresses\":{\"type\":\"array\",\"items\":{\"$ref\":\"address\"},\"uniqueItems\":true,\"description\":\"Addresses to exclude from the balance totals.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Get the balance sheet as of this historical ledger version.\"}},\"description\":\"Options to determine how the balances will be calculated.\",\"additionalProperties\":false}},\"additionalProperties\":false,\"required\":[\"address\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-balance-sheet.json\n// module id = 229\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-balance-sheet.json?");

/***/ }),
/* 230 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getLedgerParameters\",\"description\":\"Parameters for getLedger\",\"type\":\"object\",\"properties\":{\"options\":{\"description\":\"Options affecting what ledger and how much data to return.\",\"properties\":{\"ledgerHash\":{\"type\":\"string\",\"description\":\"Get ledger data for this historical ledger hash.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Get ledger data for this historical ledger version.\"},\"includeAllData\":{\"type\":\"boolean\",\"description\":\"Include full transactions and/or state information if `includeTransactions` and/or `includeState` is set.\"},\"includeTransactions\":{\"type\":\"boolean\",\"description\":\"Return an array of hashes for each transaction or an array of all transactions that were validated in this ledger version, depending on whether `includeAllData` is set.\"},\"includeState\":{\"type\":\"boolean\",\"description\":\"Return an array of hashes for all state data or an array of all state data in this ledger version, depending on whether `includeAllData` is set.\"}},\"additionalProperties\":false}},\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-ledger.json\n// module id = 230\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-ledger.json?");

/***/ }),
/* 231 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getOrdersParameters\",\"description\":\"Parameters for getOrders\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The Ripple address of the account to get open orders for.\"},\"options\":{\"description\":\"Options that determine what orders will be returned.\",\"properties\":{\"limit\":{\"type\":\"integer\",\"minimum\":1,\"description\":\"At most this many orders will be returned.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Return orders as of this historical ledger version.\"}},\"additionalProperties\":false}},\"required\":[\"address\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-orders.json\n// module id = 231\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-orders.json?");

/***/ }),
/* 232 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getOrderbookParameters\",\"description\":\"Parameters for getOrderbook\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"Address of an account to use as point-of-view. (This affects which unfunded offers are returned.)\"},\"orderbook\":{\"$ref\":\"orderbook\",\"description\":\"The order book to get.\"},\"options\":{\"description\":\"Options to determine what to return.\",\"properties\":{\"limit\":{\"type\":\"integer\",\"minimum\":1,\"description\":\"Return at most this many orders from the order book.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Return the order book as of this historical ledger version.\"}},\"additionalProperties\":false}},\"required\":[\"address\",\"orderbook\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-orderbook.json\n// module id = 232\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-orderbook.json?");

/***/ }),
/* 233 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getPathsParameters\",\"type\":\"object\",\"properties\":{\"pathfind\":{\"description\":\"Specification of a pathfind request.\",\"properties\":{\"source\":{\"description\":\"Properties of the source of funds.\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The Ripple address of the account where funds will come from.\"},\"amount\":{\"$ref\":\"laxAmount\",\"description\":\"The amount of funds to send.\"},\"currencies\":{\"description\":\"An array of currencies (with optional counterparty) that may be used in the payment paths.\",\"type\":\"array\",\"items\":{\"description\":\"A currency with optional counterparty.\",\"type\":\"object\",\"properties\":{\"currency\":{\"$ref\":\"currency\"},\"counterparty\":{\"$ref\":\"address\",\"description\":\"The counterparty for the currency; if omitted any counterparty may be used.\"}},\"required\":[\"currency\"],\"additionalProperties\":false},\"uniqueItems\":true}},\"not\":{\"required\":[\"amount\",\"currencies\"]},\"additionalProperties\":false,\"required\":[\"address\"]},\"destination\":{\"description\":\"Properties of the destination of funds.\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address to send to.\"},\"amount\":{\"$ref\":\"laxLaxAmount\",\"description\":\"The amount to be received by the receiver (`value` may be ommitted if a source amount is specified).\"}},\"required\":[\"address\",\"amount\"],\"additionalProperties\":false}},\"required\":[\"source\",\"destination\"],\"additionalProperties\":false}},\"additionalProperties\":false,\"required\":[\"pathfind\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-paths.json\n// module id = 233\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-paths.json?");

/***/ }),
/* 234 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getPaymentChannelParameters\",\"description\":\"Parameters for getPaymentChannel\",\"type\":\"object\",\"properties\":{\"id\":{\"$ref\":\"hash256\",\"description\":\"256-bit hexadecimal channel identifier.\"}},\"additionalProperties\":false,\"required\":[\"id\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-payment-channel.json\n// module id = 234\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-payment-channel.json?");

/***/ }),
/* 235 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"api-options\",\"type\":\"object\",\"properties\":{\"trace\":{\"type\":\"boolean\",\"description\":\"If true, log rippled requests and responses to stdout.\"},\"feeCushion\":{\"type\":\"number\",\"minimum\":1,\"description\":\"Factor to multiply estimated fee by to provide a cushion in case the required fee rises during submission of a transaction. Defaults to `1.2`.\"},\"maxFeeXRP\":{\"type\":\"string\",\"description\":\"Maximum fee to use with transactions, in XRP. Must be a string-encoded number. Defaults to `'2'`.\"},\"server\":{\"type\":\"string\",\"description\":\"URI for rippled websocket port to connect to. Must start with `wss://`, `ws://`, `wss+unix://`, or `ws+unix://`.\",\"format\":\"uri\",\"pattern\":\"^(wss?|wss?\\\\+unix)://\"},\"proxy\":{\"format\":\"uri\",\"description\":\"URI for HTTP/HTTPS proxy to use to connect to the rippled server.\"},\"timeout\":{\"type\":\"integer\",\"description\":\"Timeout in milliseconds before considering a request to have failed.\",\"minimum\":1},\"proxyAuthorization\":{\"type\":\"string\",\"description\":\"Username and password for HTTP basic authentication to the proxy in the format **username:password**.\"},\"authorization\":{\"type\":\"string\",\"description\":\"Username and password for HTTP basic authentication to the rippled server in the format **username:password**.\"},\"trustedCertificates\":{\"type\":\"array\",\"description\":\"Array of PEM-formatted SSL certificates to trust when connecting to a proxy. This is useful if you want to use a self-signed certificate on the proxy server. Note: Each element must contain a single certificate; concatenated certificates are not valid.\",\"items\":{\"type\":\"string\",\"description\":\"A PEM-formatted SSL certificate to trust when connecting to a proxy.\"}},\"key\":{\"type\":\"string\",\"description\":\"A string containing the private key of the client in PEM format. (Can be an array of keys).\"},\"passphrase\":{\"type\":\"string\",\"description\":\"The passphrase for the private key of the client.\"},\"certificate\":{\"type\":\"string\",\"description\":\"A string containing the certificate key of the client in PEM format. (Can be an array of certificates).\"}},\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/api-options.json\n// module id = 235\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/api-options.json?");

/***/ }),
/* 236 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getSettingsParameters\",\"description\":\"Parameters for getSettings\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account to get the settings of.\"},\"options\":{\"description\":\"Options that affect what to return.\",\"properties\":{\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Get the settings as of this historical ledger version.\"}},\"additionalProperties\":false}},\"required\":[\"address\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-settings.json\n// module id = 236\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-settings.json?");

/***/ }),
/* 237 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getAccountInfoParameters\",\"description\":\"Parameters for getAccountInfo\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account to get the account info of.\"},\"options\":{\"description\":\"Options that affect what to return.\",\"properties\":{\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Get the account info as of this historical ledger version.\"}},\"additionalProperties\":false}},\"required\":[\"address\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-account-info.json\n// module id = 237\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-account-info.json?");

/***/ }),
/* 238 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getAccountObjectsOptions\",\"description\":\"Request options for getAccountObjects\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account to get the account objects of.\"},\"options\":{\"description\":\"Options that affect what to return.\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"check\",\"escrow\",\"offer\",\"payment_channel\",\"signer_list\",\"state\"],\"description\":\"(Optional) Filter results to include only this type of ledger object. The valid types are: `check`, `escrow`, `offer`, `payment_channel`, `signer_list`, and `state` (trust line).\"},\"ledgerHash\":{\"type\":\"string\",\"description\":\"(Optional) A 20-byte hex string for the ledger version to use.\"},\"ledgerIndex\":{\"oneOf\":[{\"$ref\":\"ledgerVersion\"},{\"type\":\"string\"}],\"description\":\"(Optional) The sequence number of the ledger to use, or a shortcut string to choose a ledger automatically.\"},\"limit\":{\"type\":\"integer\",\"minimum\":1,\"description\":\"(Optional) The maximum number of objects to include in the results.\"}},\"additionalProperties\":false}},\"required\":[\"address\"],\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-account-objects.json\n// module id = 238\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-account-objects.json?");

/***/ }),
/* 239 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getTransactionParameters\",\"description\":\"Parameters for getTransaction\",\"type\":\"object\",\"properties\":{\"id\":{\"$ref\":\"transactionHash\"},\"options\":{\"description\":\"Options to limit the ledger versions to search and/or to include raw transaction data.\",\"properties\":{\"minLedgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"The lowest ledger version to search.\"},\"maxLedgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"The highest ledger version to search\"},\"includeRawTransaction\":{\"description\":\"Include raw transaction data. For advanced users; exercise caution when interpreting this data. \"}},\"additionalProperties\":false}},\"additionalProperties\":false,\"required\":[\"id\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-transaction.json\n// module id = 239\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-transaction.json?");

/***/ }),
/* 240 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getTransactionsParameters\",\"description\":\"Parameters for getTransactions\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account to get transactions for.\"},\"options\":{\"description\":\"Options to filter the resulting transactions.\",\"properties\":{\"start\":{\"$ref\":\"hash256\",\"description\":\"If specified, this transaction will be the first transaction in the result. You cannot use `start` with `minLedgerVersion` or `maxLedgerVersion`. When `start` is specified, these ledger versions will be determined internally.\"},\"limit\":{\"type\":\"integer\",\"minimum\":1,\"description\":\"If specified, return at most this many transactions.\"},\"minLedgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Return only transactions in this ledger verion or higher.\"},\"maxLedgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Return only transactions in this ledger version or lower.\"},\"earliestFirst\":{\"type\":\"boolean\",\"description\":\"If true, sort transactions so that the earliest ones come first. By default, the newest transactions will come first.\"},\"excludeFailures\":{\"type\":\"boolean\",\"description\":\"If true, the result will omit transactions that did not succeed.\"},\"initiated\":{\"type\":\"boolean\",\"description\":\"If true, return only transactions initiated by the account specified by `address`. If false, return only transactions not initiated by the account specified by `address`.\"},\"counterparty\":{\"$ref\":\"address\",\"description\":\"If provided, only return transactions with this account as a counterparty to the transaction.\"},\"types\":{\"type\":\"array\",\"items\":{\"$ref\":\"transactionType\"},\"description\":\"Only return transactions of the specified [Transaction Types](#transaction-types).\"},\"includeRawTransactions\":{\"description\":\"Include raw transaction data. For advanced users; exercise caution when interpreting this data. \"},\"binary\":{\"type\":\"boolean\",\"description\":\"If true, the transactions will be sent from the server in a condensed binary format rather than JSON.\"}},\"additionalProperties\":false,\"not\":{\"anyOf\":[{\"required\":[\"start\",\"minLedgerVersion\"]},{\"required\":[\"start\",\"maxLedgerVersion\"]}]}}},\"additionalProperties\":false,\"required\":[\"address\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-transactions.json\n// module id = 240\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-transactions.json?");

/***/ }),
/* 241 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"getTrustlinesParameters\",\"description\":\"Parameters for getTrustlines\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account to get trustlines for.\"},\"options\":{\"description\":\"Options to filter and determine which trustlines to return.\",\"properties\":{\"counterparty\":{\"$ref\":\"address\",\"description\":\"Only return trustlines with this counterparty.\"},\"currency\":{\"$ref\":\"currency\",\"description\":\"Only return trustlines for this currency.\"},\"limit\":{\"type\":\"integer\",\"minimum\":1,\"description\":\"Return at most this many trustlines.\"},\"ledgerVersion\":{\"$ref\":\"ledgerVersion\",\"description\":\"Return trustlines as they were in this historical ledger version.\"}},\"additionalProperties\":false}},\"additionalProperties\":false,\"required\":[\"address\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/get-trustlines.json\n// module id = 241\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/get-trustlines.json?");

/***/ }),
/* 242 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"preparePaymentParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"payment\":{\"$ref\":\"payment\",\"description\":\"The specification of the payment to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"payment\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-payment.json\n// module id = 242\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-payment.json?");

/***/ }),
/* 243 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareOrderParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"order\":{\"$ref\":\"order\",\"description\":\"The specification of the order to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"order\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-order.json\n// module id = 243\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-order.json?");

/***/ }),
/* 244 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareTrustlineParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"trustline\":{\"$ref\":\"trustline\",\"description\":\"The specification of the trustline to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"trustline\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-trustline.json\n// module id = 244\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-trustline.json?");

/***/ }),
/* 245 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareOrderCancellationParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"orderCancellation\":{\"$ref\":\"orderCancellation\",\"description\":\"The specification of the order cancellation to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"orderCancellation\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-order-cancellation.json\n// module id = 245\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-order-cancellation.json?");

/***/ }),
/* 246 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareSettingsParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"settings\":{\"$ref\":\"settings\",\"description\":\"The specification of the settings to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"settings\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-settings.json\n// module id = 246\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-settings.json?");

/***/ }),
/* 247 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareEscrowCreationParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"escrowCreation\":{\"$ref\":\"escrowCreation\",\"description\":\"The specification of the escrow creation to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"escrowCreation\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-escrow-creation.json\n// module id = 247\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-escrow-creation.json?");

/***/ }),
/* 248 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareEscrowCancellationParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"escrowCancellation\":{\"$ref\":\"escrowCancellation\",\"description\":\"The specification of the escrow cancellation to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"escrowCancellation\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-escrow-cancellation.json\n// module id = 248\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-escrow-cancellation.json?");

/***/ }),
/* 249 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareEscrowExecutionParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"escrowExecution\":{\"$ref\":\"escrowExecution\",\"description\":\"The specification of the escrow execution to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"escrowExecution\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-escrow-execution.json\n// module id = 249\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-escrow-execution.json?");

/***/ }),
/* 250 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"preparePaymentChannelCreateParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"paymentChannelCreate\":{\"$ref\":\"paymentChannelCreate\",\"description\":\"The specification of the payment channel to create.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"paymentChannelCreate\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-payment-channel-create.json\n// module id = 250\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-payment-channel-create.json?");

/***/ }),
/* 251 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"preparePaymentChannelFundParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"paymentChannelFund\":{\"$ref\":\"paymentChannelFund\",\"description\":\"The channel to fund, and the details of how to fund it.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"paymentChannelFund\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-payment-channel-fund.json\n// module id = 251\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-payment-channel-fund.json?");

/***/ }),
/* 252 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"preparePaymentChannelClaimParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"paymentChannelClaim\":{\"$ref\":\"paymentChannelClaim\",\"description\":\"Details of the channel and claim.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"paymentChannelClaim\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-payment-channel-claim.json\n// module id = 252\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-payment-channel-claim.json?");

/***/ }),
/* 253 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareCheckCreateParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"checkCreate\":{\"$ref\":\"checkCreate\",\"description\":\"The specification of the Check create creation to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"checkCreate\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-check-create.json\n// module id = 253\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-check-create.json?");

/***/ }),
/* 254 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareCheckCashParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"checkCash\":{\"$ref\":\"checkCash\",\"description\":\"The specification of the Check cash to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"checkCash\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-check-cash.json\n// module id = 254\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-check-cash.json?");

/***/ }),
/* 255 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"prepareCheckCancelParameters\",\"type\":\"object\",\"properties\":{\"address\":{\"$ref\":\"address\",\"description\":\"The address of the account that is creating the transaction.\"},\"checkCancel\":{\"$ref\":\"checkCancel\",\"description\":\"The specification of the Check cancellation to prepare.\"},\"instructions\":{\"$ref\":\"instructions\"}},\"additionalProperties\":false,\"required\":[\"address\",\"checkCancel\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/prepare-check-cancel.json\n// module id = 255\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/prepare-check-cancel.json?");

/***/ }),
/* 256 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"computeLedgerHashParameters\",\"type\":\"object\",\"properties\":{\"ledger\":{\"$ref\":\"getLedger\",\"description\":\"The ledger header to hash.\"}},\"additionalProperties\":false,\"required\":[\"ledger\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/compute-ledger-hash.json\n// module id = 256\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/compute-ledger-hash.json?");

/***/ }),
/* 257 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"signParameters\",\"type\":\"object\",\"properties\":{\"txJSON\":{\"type\":\"string\",\"description\":\"Transaction represented as a JSON string in rippled format.\"},\"secret\":{\"type\":\"string\",\"format\":\"secret\",\"description\":\"The secret of the account that is initiating the transaction. (This field is exclusive with keypair).\"},\"keypair\":{\"type\":\"object\",\"properties\":{\"privateKey\":{\"type\":\"privateKey\",\"description\":\"The uppercase hexadecimal representation of the secp256k1 or Ed25519 private key.\"},\"publicKey\":{\"type\":\"publicKey\",\"description\":\"The uppercase hexadecimal representation of the secp256k1 or Ed25519 public key.\"}},\"description\":\"The private and public key of the account that is initiating the transaction. (This field is exclusive with secret).\",\"required\":[\"privateKey\",\"publicKey\"],\"additionalProperties\":false},\"options\":{\"type\":\"object\",\"description\":\"Options that control the type of signature that will be generated.\",\"properties\":{\"signAs\":{\"$ref\":\"address\",\"description\":\"The account that the signature should count for in multisigning.\"}},\"additionalProperties\":false}},\"additionalProperties\":false,\"required\":[\"txJSON\"],\"oneOf\":[{\"required\":[\"secret\"],\"not\":{\"required\":[\"keypair\"]}},{\"required\":[\"keypair\"],\"not\":{\"required\":[\"secret\"]}}]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/sign.json\n// module id = 257\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/sign.json?");

/***/ }),
/* 258 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"submitParameters\",\"type\":\"object\",\"properties\":{\"signedTransaction\":{\"$ref\":\"blob\",\"description\":\"A signed transaction as returned by [sign](#sign).\"}},\"additionalProperties\":false,\"required\":[\"signedTransaction\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/submit.json\n// module id = 258\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/submit.json?");

/***/ }),
/* 259 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"generateAddressParameters\",\"type\":\"object\",\"properties\":{\"options\":{\"type\":\"object\",\"description\":\"Options to control how the address and secret are generated.\",\"properties\":{\"entropy\":{\"type\":\"array\",\"items\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":255},\"description\":\"The entropy to use to generate the seed.\"},\"algorithm\":{\"type\":\"string\",\"enum\":[\"ecdsa-secp256k1\",\"ed25519\"],\"description\":\"The digital signature algorithm to generate an address for. Can be `ecdsa-secp256k1` (default) or `ed25519`.\"}},\"additionalProperties\":false}},\"additionalProperties\":false}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/generate-address.json\n// module id = 259\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/generate-address.json?");

/***/ }),
/* 260 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"signPaymentChannelClaimParameters\",\"type\":\"object\",\"properties\":{\"channel\":{\"$ref\":\"hash256\",\"description\":\"256-bit hexadecimal channel identifier.\"},\"amount\":{\"$ref\":\"value\",\"description\":\"Amount of XRP authorized by the claim.\"},\"privateKey\":{\"$ref\":\"publicKey\",\"description\":\"The private key to sign the payment channel claim.\"}},\"additionalProperties\":false,\"required\":[\"channel\",\"amount\",\"privateKey\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/sign-payment-channel-claim.json\n// module id = 260\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/sign-payment-channel-claim.json?");

/***/ }),
/* 261 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"verifyPaymentChannelClaimParameters\",\"type\":\"object\",\"properties\":{\"channel\":{\"$ref\":\"hash256\",\"description\":\"256-bit hexadecimal channel identifier.\"},\"amount\":{\"$ref\":\"value\",\"description\":\"Amount of XRP authorized by the claim.\"},\"signature\":{\"$ref\":\"signature\",\"description\":\"Signature of this claim.\"},\"publicKey\":{\"$ref\":\"publicKey\",\"description\":\"Public key of the channel's sender\"}},\"additionalProperties\":false,\"required\":[\"channel\",\"amount\",\"signature\",\"publicKey\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/verify-payment-channel-claim.json\n// module id = 261\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/verify-payment-channel-claim.json?");

/***/ }),
/* 262 */
/***/ (function(module, exports) {

eval("module.exports = {\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"title\":\"combineParameters\",\"type\":\"object\",\"properties\":{\"signedTransactions\":{\"type\":\"array\",\"description\":\"An array of signed transactions (from the output of [sign](#sign)) to combine.\",\"items\":{\"type\":\"string\",\"pattern\":\"^[A-F0-9]+$\",\"description\":\"A single-signed transaction represented as an uppercase hexadecimal string (from the output of [sign](#sign))\"},\"minLength\":1}},\"additionalProperties\":false,\"required\":[\"signedTransactions\"]}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/schemas/input/combine.json\n// module id = 262\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/schemas/input/combine.json?");

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst events_1 = __webpack_require__(23);\nconst url_1 = __webpack_require__(24);\nconst WebSocket = __webpack_require__(267);\nconst rangeset_1 = __webpack_require__(81);\nconst errors_1 = __webpack_require__(29);\nclass Connection extends events_1.EventEmitter {\n    constructor(url, options = {}) {\n        super();\n        this._isReady = false;\n        this._ws = null;\n        this._ledgerVersion = null;\n        this._availableLedgerVersions = new rangeset_1.default();\n        this._nextRequestID = 1;\n        this._retry = 0;\n        this._retryTimer = null;\n        this._onOpenErrorBound = null;\n        this._onUnexpectedCloseBound = null;\n        this._fee_base = null;\n        this._fee_ref = null;\n        this.setMaxListeners(Infinity);\n        this._url = url;\n        this._trace = options.trace || false;\n        if (this._trace) {\n            // for easier unit testing\n            this._console = console;\n        }\n        this._proxyURL = options.proxy;\n        this._proxyAuthorization = options.proxyAuthorization;\n        this._authorization = options.authorization;\n        this._trustedCertificates = options.trustedCertificates;\n        this._key = options.key;\n        this._passphrase = options.passphrase;\n        this._certificate = options.certificate;\n        this._timeout = options.timeout || (20 * 1000);\n    }\n    _updateLedgerVersions(data) {\n        this._ledgerVersion = Number(data.ledger_index);\n        if (data.validated_ledgers) {\n            this._availableLedgerVersions.reset();\n            this._availableLedgerVersions.parseAndAddRanges(data.validated_ledgers);\n        }\n        else {\n            this._availableLedgerVersions.addValue(this._ledgerVersion);\n        }\n    }\n    _updateFees(data) {\n        this._fee_base = Number(data.fee_base);\n        this._fee_ref = Number(data.fee_ref);\n    }\n    // return value is array of arguments to Connection.emit\n    _parseMessage(message) {\n        const data = JSON.parse(message);\n        if (data.type === 'response') {\n            if (!(Number.isInteger(data.id) && data.id >= 0)) {\n                throw new errors_1.ResponseFormatError('valid id not found in response', data);\n            }\n            return [data.id.toString(), data];\n        }\n        else if (data.type === undefined && data.error) {\n            return ['error', data.error, data.error_message, data]; // e.g. slowDown\n        }\n        // Possible `data.type` values include 'ledgerClosed',\n        // 'transaction', 'path_find', and many others.\n        if (data.type === 'ledgerClosed') {\n            this._updateLedgerVersions(data);\n            this._updateFees(data);\n        }\n        return [data.type, data];\n    }\n    _onMessage(message) {\n        if (this._trace) {\n            this._console.log(message);\n        }\n        let parameters;\n        try {\n            parameters = this._parseMessage(message);\n        }\n        catch (error) {\n            this.emit('error', 'badMessage', error.message, message);\n            return;\n        }\n        // we don't want this inside the try/catch or exceptions in listener\n        // will be caught\n        this.emit.apply(this, parameters);\n    }\n    get _state() {\n        return this._ws ? this._ws.readyState : WebSocket.CLOSED;\n    }\n    get _shouldBeConnected() {\n        return this._ws !== null;\n    }\n    isConnected() {\n        return this._state === WebSocket.OPEN && this._isReady;\n    }\n    _onUnexpectedClose(beforeOpen, resolve, reject, code) {\n        if (this._onOpenErrorBound) {\n            this._ws.removeListener('error', this._onOpenErrorBound);\n            this._onOpenErrorBound = null;\n        }\n        // just in case\n        this._ws.removeAllListeners('open');\n        this._ws = null;\n        this._isReady = false;\n        if (beforeOpen) {\n            // connection was closed before it was properly opened, so we must return\n            // error to connect's caller\n            this.connect().then(resolve, reject);\n        }\n        else {\n            // if first parameter ws lib sends close code,\n            // but sometimes it forgots about it, so default to 1006 - CLOSE_ABNORMAL\n            this.emit('disconnected', code || 1006);\n            this._retryConnect();\n        }\n    }\n    _calculateTimeout(retriesCount) {\n        return (retriesCount < 40)\n            // First, for 2 seconds: 20 times per second\n            ? (1000 / 20)\n            : (retriesCount < 40 + 60)\n                // Then, for 1 minute: once per second\n                ? (1000)\n                : (retriesCount < 40 + 60 + 60)\n                    // Then, for 10 minutes: once every 10 seconds\n                    ? (10 * 1000)\n                    // Then: once every 30 seconds\n                    : (30 * 1000);\n    }\n    _retryConnect() {\n        this._retry += 1;\n        const retryTimeout = this._calculateTimeout(this._retry);\n        this._retryTimer = setTimeout(() => {\n            this.emit('reconnecting', this._retry);\n            this.connect().catch(this._retryConnect.bind(this));\n        }, retryTimeout);\n    }\n    _clearReconnectTimer() {\n        if (this._retryTimer !== null) {\n            clearTimeout(this._retryTimer);\n            this._retryTimer = null;\n        }\n    }\n    _onOpen() {\n        if (!this._ws) {\n            return Promise.reject(new errors_1.DisconnectedError());\n        }\n        if (this._onOpenErrorBound) {\n            this._ws.removeListener('error', this._onOpenErrorBound);\n            this._onOpenErrorBound = null;\n        }\n        const request = {\n            command: 'subscribe',\n            streams: ['ledger']\n        };\n        return this.request(request).then((data) => {\n            if (_.isEmpty(data) || !data.ledger_index) {\n                // rippled instance doesn't have validated ledgers\n                return this._disconnect(false).then(() => {\n                    throw new errors_1.RippledNotInitializedError('Rippled not initialized');\n                });\n            }\n            this._updateLedgerVersions(data);\n            this._updateFees(data);\n            this._rebindOnUnxpectedClose();\n            this._retry = 0;\n            this._ws.on('error', error => {\n                // TODO: \"type\" does not exist on official error type, safe to remove?\n                if (process.browser && error && error.type === 'error') {\n                    // we are in browser, ignore error - `close` event will be fired\n                    // after error\n                    return;\n                }\n                this.emit('error', 'websocket', error.message, error);\n            });\n            this._isReady = true;\n            this.emit('connected');\n            return undefined;\n        });\n    }\n    _rebindOnUnxpectedClose() {\n        if (this._onUnexpectedCloseBound) {\n            this._ws.removeListener('close', this._onUnexpectedCloseBound);\n        }\n        this._onUnexpectedCloseBound =\n            this._onUnexpectedClose.bind(this, false, null, null);\n        this._ws.once('close', this._onUnexpectedCloseBound);\n    }\n    _unbindOnUnxpectedClose() {\n        if (this._onUnexpectedCloseBound) {\n            this._ws.removeListener('close', this._onUnexpectedCloseBound);\n        }\n        this._onUnexpectedCloseBound = null;\n    }\n    _onOpenError(reject, error) {\n        this._onOpenErrorBound = null;\n        this._unbindOnUnxpectedClose();\n        reject(new errors_1.NotConnectedError(error.message, error));\n    }\n    _createWebSocket() {\n        const options = {};\n        if (this._proxyURL !== undefined) {\n            const parsedURL = url_1.parse(this._url);\n            const parsedProxyURL = url_1.parse(this._proxyURL);\n            const proxyOverrides = _.omitBy({\n                secureEndpoint: (parsedURL.protocol === 'wss:'),\n                secureProxy: (parsedProxyURL.protocol === 'https:'),\n                auth: this._proxyAuthorization,\n                ca: this._trustedCertificates,\n                key: this._key,\n                passphrase: this._passphrase,\n                cert: this._certificate\n            }, _.isUndefined);\n            const proxyOptions = _.assign({}, parsedProxyURL, proxyOverrides);\n            let HttpsProxyAgent;\n            try {\n                HttpsProxyAgent = __webpack_require__(268);\n            }\n            catch (error) {\n                throw new Error('\"proxy\" option is not supported in the browser');\n            }\n            options.agent = new HttpsProxyAgent(proxyOptions);\n        }\n        if (this._authorization !== undefined) {\n            const base64 = new Buffer(this._authorization).toString('base64');\n            options.headers = { Authorization: `Basic ${base64}` };\n        }\n        const optionsOverrides = _.omitBy({\n            ca: this._trustedCertificates,\n            key: this._key,\n            passphrase: this._passphrase,\n            cert: this._certificate\n        }, _.isUndefined);\n        const websocketOptions = _.assign({}, options, optionsOverrides);\n        const websocket = new WebSocket(this._url, null, websocketOptions);\n        // we will have a listener for each outstanding request,\n        // so we have to raise the limit (the default is 10)\n        if (typeof websocket.setMaxListeners === 'function') {\n            websocket.setMaxListeners(Infinity);\n        }\n        return websocket;\n    }\n    connect() {\n        this._clearReconnectTimer();\n        return new Promise((resolve, reject) => {\n            if (!this._url) {\n                reject(new errors_1.ConnectionError('Cannot connect because no server was specified'));\n            }\n            if (this._state === WebSocket.OPEN) {\n                resolve();\n            }\n            else if (this._state === WebSocket.CONNECTING) {\n                this._ws.once('open', resolve);\n            }\n            else {\n                this._ws = this._createWebSocket();\n                // when an error causes the connection to close, the close event\n                // should still be emitted; the \"ws\" documentation says: \"The close\n                // event is also emitted when then underlying net.Socket closes the\n                // connection (end or close).\"\n                // In case if there is connection error (say, server is not responding)\n                // we must return this error to connection's caller. After successful\n                // opening, we will forward all errors to main api object.\n                this._onOpenErrorBound = this._onOpenError.bind(this, reject);\n                this._ws.once('error', this._onOpenErrorBound);\n                this._ws.on('message', this._onMessage.bind(this));\n                // in browser close event can came before open event, so we must\n                // resolve connect's promise after reconnect in that case.\n                // after open event we will rebound _onUnexpectedCloseBound\n                // without resolve and reject functions\n                this._onUnexpectedCloseBound = this._onUnexpectedClose.bind(this, true, resolve, reject);\n                this._ws.once('close', this._onUnexpectedCloseBound);\n                this._ws.once('open', () => this._onOpen().then(resolve, reject));\n            }\n        });\n    }\n    disconnect() {\n        return this._disconnect(true);\n    }\n    _disconnect(calledByUser) {\n        if (calledByUser) {\n            this._clearReconnectTimer();\n            this._retry = 0;\n        }\n        return new Promise(resolve => {\n            if (this._state === WebSocket.CLOSED) {\n                resolve();\n            }\n            else if (this._state === WebSocket.CLOSING) {\n                this._ws.once('close', resolve);\n            }\n            else {\n                if (this._onUnexpectedCloseBound) {\n                    this._ws.removeListener('close', this._onUnexpectedCloseBound);\n                    this._onUnexpectedCloseBound = null;\n                }\n                this._ws.once('close', code => {\n                    this._ws = null;\n                    this._isReady = false;\n                    if (calledByUser) {\n                        this.emit('disconnected', code || 1000); // 1000 - CLOSE_NORMAL\n                    }\n                    resolve();\n                });\n                this._ws.close();\n            }\n        });\n    }\n    reconnect() {\n        return this.disconnect().then(() => this.connect());\n    }\n    _whenReady(promise) {\n        return new Promise((resolve, reject) => {\n            if (!this._shouldBeConnected) {\n                reject(new errors_1.NotConnectedError());\n            }\n            else if (this._state === WebSocket.OPEN && this._isReady) {\n                promise.then(resolve, reject);\n            }\n            else {\n                this.once('connected', () => promise.then(resolve, reject));\n            }\n        });\n    }\n    getLedgerVersion() {\n        return this._whenReady(Promise.resolve(this._ledgerVersion));\n    }\n    hasLedgerVersions(lowLedgerVersion, highLedgerVersion) {\n        return this._whenReady(Promise.resolve(this._availableLedgerVersions.containsRange(lowLedgerVersion, highLedgerVersion || this._ledgerVersion)));\n    }\n    hasLedgerVersion(ledgerVersion) {\n        return this.hasLedgerVersions(ledgerVersion, ledgerVersion);\n    }\n    getFeeBase() {\n        return this._whenReady(Promise.resolve(Number(this._fee_base)));\n    }\n    getFeeRef() {\n        return this._whenReady(Promise.resolve(Number(this._fee_ref)));\n    }\n    _send(message) {\n        if (this._trace) {\n            this._console.log(message);\n        }\n        return new Promise((resolve, reject) => {\n            this._ws.send(message, undefined, error => {\n                if (error) {\n                    reject(new errors_1.DisconnectedError(error.message, error));\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    }\n    request(request, timeout) {\n        return new Promise((resolve, reject) => {\n            if (!this._shouldBeConnected) {\n                reject(new errors_1.NotConnectedError());\n            }\n            let timer = null;\n            const self = this;\n            const id = this._nextRequestID;\n            this._nextRequestID += 1;\n            const eventName = id.toString();\n            function onDisconnect() {\n                clearTimeout(timer);\n                self.removeAllListeners(eventName);\n                reject(new errors_1.DisconnectedError('websocket was closed'));\n            }\n            function cleanup() {\n                clearTimeout(timer);\n                self.removeAllListeners(eventName);\n                if (self._ws !== null) {\n                    self._ws.removeListener('close', onDisconnect);\n                }\n            }\n            function _resolve(response) {\n                cleanup();\n                resolve(response);\n            }\n            function _reject(error) {\n                cleanup();\n                reject(error);\n            }\n            this.once(eventName, response => {\n                if (response.status === 'error') {\n                    _reject(new errors_1.RippledError(response.error, response));\n                }\n                else if (response.status === 'success') {\n                    _resolve(response.result);\n                }\n                else {\n                    _reject(new errors_1.ResponseFormatError('unrecognized status: ' + response.status, response));\n                }\n            });\n            this._ws.once('close', onDisconnect);\n            // JSON.stringify automatically removes keys with value of 'undefined'\n            const message = JSON.stringify(Object.assign({}, request, { id }));\n            this._whenReady(this._send(message)).then(() => {\n                const delay = timeout || this._timeout;\n                timer = setTimeout(() => _reject(new errors_1.TimeoutError()), delay);\n            }).catch(_reject);\n        });\n    }\n}\nexports.default = Connection;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17), __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/connection.ts\n// module id = 263\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/connection.ts?");

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 264\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),
/* 265 */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 265\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),
/* 266 */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/node_modules/isarray/index.js\n// module id = 266\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/buffer/node_modules/isarray/index.js?");

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst events_1 = __webpack_require__(23);\n/**\n * Provides `EventEmitter` interface for native browser `WebSocket`,\n * same, as `ws` package provides.\n */\nclass WSWrapper extends events_1.EventEmitter {\n    constructor(url, _protocols, _websocketOptions) {\n        super();\n        this.setMaxListeners(Infinity);\n        this._ws = new WebSocket(url);\n        this._ws.onclose = () => {\n            this.emit('close');\n        };\n        this._ws.onopen = () => {\n            this.emit('open');\n        };\n        this._ws.onerror = error => {\n            this.emit('error', error);\n        };\n        this._ws.onmessage = message => {\n            this.emit('message', message.data);\n        };\n    }\n    close() {\n        if (this.readyState === 1) {\n            this._ws.close();\n        }\n    }\n    send(message) {\n        this._ws.send(message);\n    }\n    get readyState() {\n        return this._ws.readyState;\n    }\n}\nWSWrapper.CONNECTING = 0;\nWSWrapper.OPEN = 1;\nWSWrapper.CLOSING = 2;\nWSWrapper.CLOSED = 3;\nmodule.exports = WSWrapper;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/wswrapper.ts\n// module id = 267\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/common/wswrapper.ts?");

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * Module dependencies.\n */\n\nvar net = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"net\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nvar tls = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"tls\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nvar url = __webpack_require__(24);\nvar Agent = __webpack_require__(269);\nvar inherits = __webpack_require__(36).inherits;\nvar debug = __webpack_require__(289)('https-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpsProxyAgent;\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * @api public\n */\n\nfunction HttpsProxyAgent(opts) {\n  if (!(this instanceof HttpsProxyAgent)) return new HttpsProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts)\n    throw new Error(\n      'an HTTP(S) proxy server `host` and `port` must be specified!'\n    );\n  debug('creating new HttpsProxyAgent instance: %o', opts);\n  Agent.call(this, opts);\n\n  var proxy = Object.assign({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  // ALPN is supported by Node.js >= v5.\n  // attempt to negotiate http/1.1 for proxy servers that support http/2\n  if (this.secureProxy && !('ALPNProtocols' in proxy)) {\n    proxy.ALPNProtocols = ['http 1.1']\n  }\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n  this.defaultPort = 443;\n}\ninherits(HttpsProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\n  var proxy = this.proxy;\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // we need to buffer any HTTP traffic that happens with the proxy before we get\n  // the CONNECT response, so that if the response is anything other than an \"200\"\n  // response code, then we can re-play the \"data\" events on the socket once the\n  // HTTP parser is hooked up...\n  var buffers = [];\n  var buffersLength = 0;\n\n  function read() {\n    var b = socket.read();\n    if (b) ondata(b);\n    else socket.once('readable', read);\n  }\n\n  function cleanup() {\n    socket.removeListener('data', ondata);\n    socket.removeListener('end', onend);\n    socket.removeListener('error', onerror);\n    socket.removeListener('close', onclose);\n    socket.removeListener('readable', read);\n  }\n\n  function onclose(err) {\n    debug('onclose had error %o', err);\n  }\n\n  function onend() {\n    debug('onend');\n  }\n\n  function onerror(err) {\n    cleanup();\n    fn(err);\n  }\n\n  function ondata(b) {\n    buffers.push(b);\n    buffersLength += b.length;\n    var buffered = Buffer.concat(buffers, buffersLength);\n    var str = buffered.toString('ascii');\n\n    if (!~str.indexOf('\\r\\n\\r\\n')) {\n      // keep buffering\n      debug('have not received end of HTTP headers yet...');\n      if (socket.read) {\n        read();\n      } else {\n        socket.once('data', ondata);\n      }\n      return;\n    }\n\n    var firstLine = str.substring(0, str.indexOf('\\r\\n'));\n    var statusCode = +firstLine.split(' ')[1];\n    debug('got proxy server response: %o', firstLine);\n\n    if (200 == statusCode) {\n      // 200 Connected status code!\n      var sock = socket;\n\n      // nullify the buffered data since we won't be needing it\n      buffers = buffered = null;\n\n      if (opts.secureEndpoint) {\n        // since the proxy is connecting to an SSL server, we have\n        // to upgrade this socket connection to an SSL connection\n        debug(\n          'upgrading proxy-connected socket to TLS connection: %o',\n          opts.host\n        );\n        opts.socket = socket;\n        opts.servername = opts.servername || opts.host;\n        opts.host = null;\n        opts.hostname = null;\n        opts.port = null;\n        sock = tls.connect(opts);\n      }\n\n      cleanup();\n      fn(null, sock);\n    } else {\n      // some other status code that's not 200... need to re-play the HTTP header\n      // \"data\" events onto the socket once the HTTP machinery is attached so that\n      // the user can parse and handle the error status code\n      cleanup();\n\n      // save a reference to the concat'd Buffer for the `onsocket` callback\n      buffers = buffered;\n\n      // need to wait for the \"socket\" event to re-play the \"data\" events\n      req.once('socket', onsocket);\n      fn(null, socket);\n    }\n  }\n\n  function onsocket(socket) {\n    // replay the \"buffers\" Buffer onto the `socket`, since at this point\n    // the HTTP module machinery has been hooked up for the user\n    if ('function' == typeof socket.ondata) {\n      // node <= v0.11.3, the `ondata` function is set on the socket\n      socket.ondata(buffers, 0, buffers.length);\n    } else if (socket.listeners('data').length > 0) {\n      // node > v0.11.3, the \"data\" event is listened for directly\n      socket.emit('data', buffers);\n    } else {\n      // never?\n      throw new Error('should not happen...');\n    }\n\n    // nullify the cached Buffer instance\n    buffers = null;\n  }\n\n  socket.on('error', onerror);\n  socket.on('close', onclose);\n  socket.on('end', onend);\n\n  if (socket.read) {\n    read();\n  } else {\n    socket.once('data', ondata);\n  }\n\n  var hostname = opts.host + ':' + opts.port;\n  var msg = 'CONNECT ' + hostname + ' HTTP/1.1\\r\\n';\n\n  var headers = Object.assign({}, proxy.headers);\n  if (proxy.auth) {\n    headers['Proxy-Authorization'] =\n      'Basic ' + Buffer.from(proxy.auth).toString('base64');\n  }\n\n  // the Host header should only include the port\n  // number when it is a non-standard port\n  var host = opts.host;\n  if (!isDefaultPort(opts.port, opts.secureEndpoint)) {\n    host += ':' + opts.port;\n  }\n  headers['Host'] = host;\n\n  headers['Connection'] = 'close';\n  Object.keys(headers).forEach(function(name) {\n    msg += name + ': ' + headers[name] + '\\r\\n';\n  });\n\n  socket.write(msg + '\\r\\n');\n};\n\nfunction isDefaultPort(port, secure) {\n  return Boolean((!secure && port === 80) || (secure && port === 443));\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/https-proxy-agent/index.js\n// module id = 268\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/https-proxy-agent/index.js?");

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n__webpack_require__(270);\nconst inherits = __webpack_require__(36).inherits;\nconst promisify = __webpack_require__(286);\nconst EventEmitter = __webpack_require__(23).EventEmitter;\n\nmodule.exports = Agent;\n\nfunction isAgent(v) {\n  return v && typeof v.addRequest === 'function';\n}\n\n/**\n * Base `http.Agent` implementation.\n * No pooling/keep-alive is implemented by default.\n *\n * @param {Function} callback\n * @api public\n */\nfunction Agent(callback, _opts) {\n  if (!(this instanceof Agent)) {\n    return new Agent(callback, _opts);\n  }\n\n  EventEmitter.call(this);\n\n  // The callback gets promisified if it has 3 parameters\n  // (i.e. it has a callback function) lazily\n  this._promisifiedCallback = false;\n\n  let opts = _opts;\n  if ('function' === typeof callback) {\n    this.callback = callback;\n  } else if (callback) {\n    opts = callback;\n  }\n\n  // timeout for the socket to be returned from the callback\n  this.timeout = (opts && opts.timeout) || null;\n\n  this.options = opts;\n}\ninherits(Agent, EventEmitter);\n\n/**\n * Override this function in your subclass!\n */\nAgent.prototype.callback = function callback(req, opts) {\n  throw new Error(\n    '\"agent-base\" has no default implementation, you must subclass and override `callback()`'\n  );\n};\n\n/**\n * Called by node-core's \"_http_client.js\" module when creating\n * a new HTTP request with this Agent instance.\n *\n * @api public\n */\nAgent.prototype.addRequest = function addRequest(req, _opts) {\n  const ownOpts = Object.assign({}, _opts);\n\n  // Set default `host` for HTTP to localhost\n  if (null == ownOpts.host) {\n    ownOpts.host = 'localhost';\n  }\n\n  // Set default `port` for HTTP if none was explicitly specified\n  if (null == ownOpts.port) {\n    ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n  }\n\n  const opts = Object.assign({}, this.options, ownOpts);\n\n  if (opts.host && opts.path) {\n    // If both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete opts.path;\n  }\n\n  delete opts.agent;\n  delete opts.hostname;\n  delete opts._defaultAgent;\n  delete opts.defaultPort;\n  delete opts.createConnection;\n\n  // Hint to use \"Connection: close\"\n  // XXX: non-documented `http` module API :(\n  req._last = true;\n  req.shouldKeepAlive = false;\n\n  // Create the `stream.Duplex` instance\n  let timeout;\n  let timedOut = false;\n  const timeoutMs = this.timeout;\n\n  function onerror(err) {\n    if (req._hadError) return;\n    req.emit('error', err);\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req._hadError = true;\n  }\n\n  function ontimeout() {\n    timeout = null;\n    timedOut = true;\n    const err = new Error(\n      'A \"socket\" was not created for HTTP request before ' + timeoutMs + 'ms'\n    );\n    err.code = 'ETIMEOUT';\n    onerror(err);\n  }\n\n  function callbackError(err) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    onerror(err);\n  }\n\n  function onsocket(socket) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    if (isAgent(socket)) {\n      // `socket` is actually an http.Agent instance, so relinquish\n      // responsibility for this `req` to the Agent from here on\n      socket.addRequest(req, opts);\n    } else if (socket) {\n      req.onSocket(socket);\n    } else {\n      const err = new Error(\n        `no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``\n      );\n      onerror(err);\n    }\n  }\n\n  if (!this._promisifiedCallback && this.callback.length >= 3) {\n    // Legacy callback function - convert to a Promise\n    this.callback = promisify(this.callback, this);\n    this._promisifiedCallback = true;\n  }\n\n  if (timeoutMs > 0) {\n    timeout = setTimeout(ontimeout, timeoutMs);\n  }\n\n  try {\n    Promise.resolve(this.callback(req, opts)).then(onsocket, callbackError);\n  } catch (err) {\n    Promise.reject(err).catch(callbackError);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/agent-base/index.js\n// module id = 269\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/agent-base/index.js?");

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst url = __webpack_require__(24);\nconst https = __webpack_require__(271);\n\n/**\n * This currently needs to be applied to all Node.js versions\n * in order to determine if the `req` is an HTTP or HTTPS request.\n *\n * There is currently no PR attempting to move this property upstream.\n */\nhttps.request = (function(request) {\n  return function(_options, cb) {\n    let options;\n    if (typeof _options === 'string') {\n      options = url.parse(_options);\n    } else {\n      options = Object.assign({}, _options);\n    }\n    if (null == options.port) {\n      options.port = 443;\n    }\n    options.secureEndpoint = true;\n    return request.call(https, options, cb);\n  };\n})(https.request);\n\n/**\n * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the\n * patched `https.request()`.\n *\n * Ref: https://github.com/nodejs/node/commit/5118f31\n */\nhttps.get = function(options, cb) {\n  const req = https.request(options, cb);\n  req.end();\n  return req;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/agent-base/patch-core.js\n// module id = 270\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/agent-base/patch-core.js?");

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

eval("var http = __webpack_require__(272)\nvar url = __webpack_require__(24)\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/https-browserify/index.js\n// module id = 271\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/https-browserify/index.js?");

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var ClientRequest = __webpack_require__(273)\nvar response = __webpack_require__(83)\nvar extend = __webpack_require__(284)\nvar statusCodes = __webpack_require__(285)\nvar url = __webpack_require__(24)\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/index.js\n// module id = 272\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/stream-http/index.js?");

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer, global, process) {var capability = __webpack_require__(82)\nvar inherits = __webpack_require__(3)\nvar response = __webpack_require__(83)\nvar stream = __webpack_require__(40)\nvar toArrayBuffer = __webpack_require__(283)\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tglobal.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'user-agent',\n\t'via'\n]\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer, __webpack_require__(9), __webpack_require__(17)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/request.js\n// module id = 273\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/stream-http/lib/request.js?");

/***/ }),
/* 274 */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/node_modules/isarray/index.js\n// module id = 274\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/node_modules/isarray/index.js?");

/***/ }),
/* 275 */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 275\n// module chunks = 0\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(55).Buffer;\nvar util = __webpack_require__(277);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/BufferList.js\n// module id = 276\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js?");

/***/ }),
/* 277 */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 277\n// module chunks = 0\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(279);\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 278\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(17)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 279\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util-deprecate/browser.js\n// module id = 280\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/util-deprecate/browser.js?");

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(4)\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/node-libs-browser/node_modules/safe-buffer/index.js\n// module id = 281\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/node_modules/safe-buffer/index.js?");

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(87);\n\n/*<replacement>*/\nvar util = __webpack_require__(41);\nutil.inherits = __webpack_require__(3);\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_passthrough.js\n// module id = 282\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js?");

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(4).Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/to-arraybuffer/index.js\n// module id = 283\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/to-arraybuffer/index.js?");

/***/ }),
/* 284 */
/***/ (function(module, exports) {

eval("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = 284\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/xtend/immutable.js?");

/***/ }),
/* 285 */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/builtin-status-codes/browser.js\n// module id = 285\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/builtin-status-codes/browser.js?");

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* global module, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    // Get a promise object. This may be native, or it may be polyfilled\n\n    var ES6Promise = __webpack_require__(287);\n\n    /**\n     * thatLooksLikeAPromiseToMe()\n     *\n     * Duck-types a promise.\n     *\n     * @param {object} o\n     * @return {bool} True if this resembles a promise\n     */\n    function thatLooksLikeAPromiseToMe(o) {\n        return o && typeof o.then === \"function\" && typeof o.catch === \"function\";\n    }\n\n    /**\n     * promisify()\n     *\n     * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) -- into\n     * an ES6-compatible Promise. Promisify provides a default callback of the form (error, result)\n     * and rejects when `error` is truthy. You can also supply settings object as the second argument.\n     *\n     * @param {function} original - The function to promisify\n     * @param {object} settings - Settings object\n     * @param {object} settings.thisArg - A `this` context to use. If not set, assume `settings` _is_ `thisArg`\n     * @param {bool} settings.multiArgs - Should multiple arguments be returned as an array?\n     * @return {function} A promisified version of `original`\n     */\n    return function promisify(original, settings) {\n\n        return function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            var returnMultipleArguments = settings && settings.multiArgs;\n\n            var target = void 0;\n            if (settings && settings.thisArg) {\n                target = settings.thisArg;\n            } else if (settings) {\n                target = settings;\n            }\n\n            // Return the promisified function\n            return new ES6Promise(function (resolve, reject) {\n\n                // Append the callback bound to the context\n                args.push(function callback(err) {\n\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    for (var _len2 = arguments.length, values = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                        values[_key2 - 1] = arguments[_key2];\n                    }\n\n                    if (false === !!returnMultipleArguments) {\n                        return resolve(values[0]);\n                    }\n\n                    resolve(values);\n                });\n\n                // Call the function\n                var response = original.apply(target, args);\n\n                // If it looks like original already returns a promise,\n                // then just resolve with that promise. Hopefully, the callback function we added will just be ignored.\n                if (thatLooksLikeAPromiseToMe(response)) {\n                    resolve(response);\n                }\n            });\n        };\n    };\n}();\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promisify/dist/promisify.js\n// module id = 286\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/es6-promisify/dist/promisify.js?");

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n/* global self, window, module, global, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    var globalObject = void 0;\n\n    function isFunction(x) {\n        return typeof x === \"function\";\n    }\n\n    // Seek the global object\n    if (global !== undefined) {\n        globalObject = global;\n    } else if (window !== undefined && window.document) {\n        globalObject = window;\n    } else {\n        globalObject = self;\n    }\n\n    // Test for any native promise implementation, and if that\n    // implementation appears to conform to the specificaton.\n    // This code mostly nicked from the es6-promise module polyfill\n    // and then fooled with.\n    var hasPromiseSupport = function () {\n\n        // No promise object at all, and it's a non-starter\n        if (!globalObject.hasOwnProperty(\"Promise\")) {\n            return false;\n        }\n\n        // There is a Promise object. Does it conform to the spec?\n        var P = globalObject.Promise;\n\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n            return false;\n        }\n\n        if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n            return false;\n        }\n\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        return function () {\n\n            var resolve = void 0;\n\n            var p = new globalObject.Promise(function (r) {\n                resolve = r;\n            });\n\n            if (p) {\n                return isFunction(resolve);\n            }\n\n            return false;\n        }();\n    }();\n\n    // Export the native Promise implementation if it\n    // looks like it matches the spec\n    if (hasPromiseSupport) {\n        return globalObject.Promise;\n    }\n\n    //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n    return __webpack_require__(288).Promise;\n}();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promisify/dist/promise.js\n// module id = 287\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/es6-promisify/dist/promise.js?");

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, global) {/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.4+314e4831\n */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    });\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17), __webpack_require__(9)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promise/dist/es6-promise.js\n// module id = 288\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/es6-promise/dist/es6-promise.js?");

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(290);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/https-proxy-agent/node_modules/debug/src/browser.js\n// module id = 289\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/https-proxy-agent/node_modules/debug/src/browser.js?");

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(291);\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/https-proxy-agent/node_modules/debug/src/debug.js\n// module id = 290\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/https-proxy-agent/node_modules/debug/src/debug.js?");

/***/ }),
/* 291 */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ms/index.js\n// module id = 291\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?");

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common = __webpack_require__(0);\nfunction isConnected() {\n    return this.connection.isConnected();\n}\nexports.isConnected = isConnected;\nfunction getLedgerVersion() {\n    return this.connection.getLedgerVersion();\n}\nexports.getLedgerVersion = getLedgerVersion;\nfunction connect() {\n    return this.connection.connect();\n}\nexports.connect = connect;\nfunction disconnect() {\n    return this.connection.disconnect();\n}\nexports.disconnect = disconnect;\nfunction formatLedgerClose(ledgerClose) {\n    return {\n        baseFeeXRP: common.dropsToXrp(ledgerClose.fee_base),\n        ledgerHash: ledgerClose.ledger_hash,\n        ledgerVersion: ledgerClose.ledger_index,\n        ledgerTimestamp: common.rippleTimeToISO8601(ledgerClose.ledger_time),\n        reserveBaseXRP: common.dropsToXrp(ledgerClose.reserve_base),\n        reserveIncrementXRP: common.dropsToXrp(ledgerClose.reserve_inc),\n        transactionCount: ledgerClose.txn_count,\n        validatedLedgerVersions: ledgerClose.validated_ledgers\n    };\n}\nexports.formatLedgerClose = formatLedgerClose;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/server/server.ts\n// module id = 292\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/server/server.ts?");

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports.parseBalanceChanges =\n  __webpack_require__(89).parseBalanceChanges\nmodule.exports.parseFinalBalances =\n  __webpack_require__(89).parseFinalBalances\nmodule.exports.parseOrderbookChanges =\n  __webpack_require__(294).parseOrderbookChanges\nmodule.exports.getAffectedAccounts =\n  __webpack_require__(32).getAffectedAccounts\nmodule.exports.parseChannelChanges = \n  __webpack_require__(296).parseChannelChanges;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-lib-transactionparser/src/index.js\n// module id = 293\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-lib-transactionparser/src/index.js?");

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar _ = __webpack_require__(1)\nvar utils = __webpack_require__(32)\nvar GlobalBigNumber = __webpack_require__(7)\nvar BigNumber = GlobalBigNumber.another({DECIMAL_PLACES: 40})\nvar parseQuality = __webpack_require__(295)\n\nvar lsfSell = 0x00020000   // see \"lsfSell\" flag in rippled source code\n\nfunction removeUndefined(obj) {\n  return _.omitBy(obj, _.isUndefined)\n}\n\nfunction convertOrderChange(order) {\n  var takerGets = order.taker_gets\n  var takerPays = order.taker_pays\n  var direction = order.sell ? 'sell' : 'buy'\n  var quantity = (direction === 'buy') ? takerPays : takerGets\n  var totalPrice = (direction === 'buy') ? takerGets : takerPays\n  return removeUndefined({\n    direction: direction,\n    quantity: quantity,\n    totalPrice: totalPrice,\n    sequence: order.sequence,\n    status: order.status,\n    makerExchangeRate: order.quality,\n    expirationTime: order.expiration\n  })\n}\n\nfunction rippleToUnixTimestamp(rpepoch) {\n  return (rpepoch + 0x386D4380) * 1000\n}\n\nfunction getExpirationTime(node) {\n  var expirationTime = node.finalFields.Expiration || node.newFields.Expiration\n  if (expirationTime === undefined) {\n    return undefined\n  }\n  return (new Date(rippleToUnixTimestamp(expirationTime))).toISOString()\n}\n\nfunction getQuality(node) {\n  var takerGets = node.finalFields.TakerGets || node.newFields.TakerGets\n  var takerPays = node.finalFields.TakerPays || node.newFields.TakerPays\n  var takerGetsCurrency = takerGets.currency || 'XRP'\n  var takerPaysCurrency = takerPays.currency || 'XRP'\n  var bookDirectory = node.finalFields.BookDirectory\n    || node.newFields.BookDirectory\n  var qualityHex = bookDirectory.substring(bookDirectory.length - 16)\n  return parseQuality(qualityHex, takerGetsCurrency, takerPaysCurrency)\n}\n\nfunction parseOrderStatus(node) {\n  if (node.diffType === 'CreatedNode') {\n    // \"submitted\" is more conventional, but could be confusing in the\n    // context of Ripple\n    return 'created'\n  }\n\n  if (node.diffType === 'ModifiedNode') {\n    return 'partially-filled'\n  }\n\n  if (node.diffType === 'DeletedNode') {\n    // A filled order has previous fields\n    if (node.previousFields.hasOwnProperty('TakerPays')) {\n      return 'filled'\n    }\n\n    // A cancelled order has no previous fields\n    // google search for \"cancelled order\" shows 5x more results than\n    // \"canceled order\", even though both spellings are correct\n    return 'cancelled'\n  }\n  return undefined\n}\n\nfunction calculateDelta(finalAmount, previousAmount) {\n  if (previousAmount) {\n    var finalValue = new BigNumber(finalAmount.value)\n    var previousValue = new BigNumber(previousAmount.value)\n    return finalValue.minus(previousValue).abs().toString()\n  }\n  return '0'\n}\n\nfunction parseChangeAmount(node, type) {\n  var status = parseOrderStatus(node)\n\n  if (status === 'cancelled') {\n    // Canceled orders do not have PreviousFields; FinalFields\n    // have positive values\n    return utils.parseCurrencyAmount(node.finalFields[type])\n  } else if (status === 'created') {\n    return utils.parseCurrencyAmount(node.newFields[type])\n  }\n  var finalAmount = utils.parseCurrencyAmount(node.finalFields[type])\n  var previousAmount = utils.parseCurrencyAmount(node.previousFields[type])\n  var value = calculateDelta(finalAmount, previousAmount)\n  return _.assign({}, finalAmount, {value: value})\n}\n\nfunction parseOrderChange(node) {\n  var orderChange = convertOrderChange({\n    taker_pays: parseChangeAmount(node, 'TakerPays'),\n    taker_gets: parseChangeAmount(node, 'TakerGets'),\n    sell: (node.finalFields.Flags & lsfSell) !== 0,\n    sequence: node.finalFields.Sequence || node.newFields.Sequence,\n    status: parseOrderStatus(node),\n    quality: getQuality(node),\n    expiration: getExpirationTime(node)\n  })\n\n  Object.defineProperty(orderChange, 'account', {\n    value: node.finalFields.Account || node.newFields.Account\n  })\n\n  return orderChange\n}\n\nfunction groupByAddress(orderChanges) {\n  return _.groupBy(orderChanges, function(change) {\n    return change.account\n  })\n}\n\n/**\n * Computes the complete list of every Offer that changed in the ledger\n * as a result of the given transaction.\n * Returns changes grouped by Ripple account.\n *\n *  @param {Object} metadata - Transaction metadata as return by ripple-lib\n *  @returns {Object} - Orderbook changes grouped by Ripple account\n *\n */\nexports.parseOrderbookChanges = function parseOrderbookChanges(metadata) {\n  var nodes = utils.normalizeNodes(metadata)\n\n  var orderChanges = _.map(_.filter(nodes, function(node) {\n    return node.entryType === 'Offer'\n  }), parseOrderChange)\n\n  return groupByAddress(orderChanges)\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-lib-transactionparser/src/orderbookchanges.js\n// module id = 294\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-lib-transactionparser/src/orderbookchanges.js?");

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar assert = __webpack_require__(2)\nvar BigNumber = __webpack_require__(7)\n\n/*\nThe quality, as stored in the last 64 bits of a directory index, is stored as\nthe quotient of TakerPays/TakerGets. It uses drops (1e-6 XRP) for XRP values.\n*/\n\nfunction adjustQualityForXRP(quality, takerGetsCurrency, takerPaysCurrency) {\n  var numeratorShift = (takerPaysCurrency === 'XRP' ? -6 : 0)\n  var denominatorShift = (takerGetsCurrency === 'XRP' ? -6 : 0)\n  var shift = numeratorShift - denominatorShift\n  return shift === 0 ? (new BigNumber(quality)).toString() :\n    (new BigNumber(quality)).shift(shift).toString()\n}\n\nfunction parseQuality(qualityHex, takerGetsCurrency, takerPaysCurrency) {\n  assert(qualityHex.length === 16)\n  var mantissa = new BigNumber(qualityHex.substring(2), 16)\n  var offset = parseInt(qualityHex.substring(0, 2), 16) - 100\n  var quality = mantissa.toString() + 'e' + offset.toString()\n  return adjustQualityForXRP(quality, takerGetsCurrency, takerPaysCurrency)\n}\n\nmodule.exports = parseQuality\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-lib-transactionparser/src/quality.js\n// module id = 295\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-lib-transactionparser/src/quality.js?");

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

eval("const normalizeNodes = __webpack_require__(32).normalizeNodes\nconst dropsToXRP = __webpack_require__(32).dropsToXRP\nconst BigNumber = __webpack_require__(7)\n\nfunction parsePaymentChannelStatus(node) {\n  if (node.diffType === 'CreatedNode') {\n    return 'created'\n  }\n\n  if (node.diffType === 'ModifiedNode') {\n    return 'modified'\n  }\n\n  if (node.diffType === 'DeletedNode') {\n    return 'deleted'\n  }\n  return undefined\n}\n\nfunction summarizePaymentChannel(node) {\n\n      const final = (node.diffType === 'CreatedNode') ? node.newFields : node.finalFields\n      const prev = node.previousFields || {}\n\n      const summary = {\n        // Status may be 'created', 'modified', or 'deleted'.\n        status: parsePaymentChannelStatus(node),\n\n        // The LedgerIndex indicates the Channel ID, which is necessary to sign claims.\n        channelId: node.ledgerIndex,\n\n        // The source address that owns this payment channel.\n        // This comes from the sending address of the transaction that created the channel.\n        source: final.Account,\n\n        // The destination address for this payment channel.\n        // While the payment channel is open, this address is the only one that can receive\n        // XRP from the channel. This comes from the Destination field of the transaction\n        // that created the channel.\n        destination: final.Destination,\n\n        // Total XRP, in drops, that has been allocated to this channel.\n        // This includes XRP that has been paid to the destination address.\n        // This is initially set by the transaction that created the channel and\n        // can be increased if the source address sends a PaymentChannelFund transaction.\n        channelAmountDrops:\n          new BigNumber(final.Amount || 0).toString(10),\n\n        // Total XRP, in drops, already paid out by the channel.\n        // The difference between this value and the Amount field is how much XRP can still\n        // be paid to the destination address with PaymentChannelClaim transactions.\n        // If the channel closes, the remaining difference is returned to the source address.\n        channelBalanceDrops:\n          new BigNumber(final.Balance || 0).toString(10)\n      }\n\n      if (prev.Amount) {\n        // The change in the number of XRP drops allocated to this channel.\n        // This is positive if this is a PaymentChannelFund transaction.\n        summary.channelAmountChangeDrops = new BigNumber(final.Amount)\n          .minus(new BigNumber(prev.Amount || 0))\n          .toString(10)\n      }\n      \n      if (prev.Balance) {\n        // The change in the number of XRP drops already paid out by the channel.\n        summary.channelBalanceChangeDrops = new BigNumber(final.Balance)\n          .minus(new BigNumber(prev.Balance || 0))\n          .toString(10)\n      }\n\n      if (node.PreviousTxnID) {\n        // The identifying hash of the transaction that most recently modified this payment channel object.\n        // You can use this to retrieve the object's history.\n        summary.previousTxnId = node.PreviousTxnID\n      }\n\n      return summary\n}\n\nfunction parseChannelChanges(metadata) {\n  const paymentChannels = normalizeNodes(metadata)\n    .filter(n => {return n.entryType === 'PayChannel'})\n\n  return (paymentChannels.length === 1) ? \n    summarizePaymentChannel(paymentChannels[0]) : \n    undefined\n}\n\nmodule.exports.parseChannelChanges = parseChannelChanges\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-lib-transactionparser/src/channelchanges.js\n// module id = 296\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-lib-transactionparser/src/channelchanges.js?");

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst assert = __webpack_require__(2);\nconst utils = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst amount_1 = __webpack_require__(14);\nfunction isNoDirectRipple(tx) {\n    return (tx.Flags & common_1.txFlags.Payment.NoRippleDirect) !== 0;\n}\nfunction isQualityLimited(tx) {\n    return (tx.Flags & common_1.txFlags.Payment.LimitQuality) !== 0;\n}\nfunction removeGenericCounterparty(amount, address) {\n    return amount.counterparty === address ?\n        _.omit(amount, 'counterparty') : amount;\n}\n// Payment specification\nfunction parsePayment(tx) {\n    assert(tx.TransactionType === 'Payment');\n    const source = {\n        address: tx.Account,\n        maxAmount: removeGenericCounterparty(amount_1.default(tx.SendMax || tx.Amount), tx.Account),\n        tag: tx.SourceTag\n    };\n    const destination = {\n        address: tx.Destination,\n        tag: tx.DestinationTag\n        // Notice that `amount` is omitted to prevent misinterpretation\n    };\n    return common_1.removeUndefined({\n        source: common_1.removeUndefined(source),\n        destination: common_1.removeUndefined(destination),\n        memos: utils.parseMemos(tx),\n        invoiceID: tx.InvoiceID,\n        paths: tx.Paths ? JSON.stringify(tx.Paths) : undefined,\n        allowPartialPayment: utils.isPartialPayment(tx) || undefined,\n        noDirectRipple: isNoDirectRipple(tx) || undefined,\n        limitQuality: isQualityLimited(tx) || undefined\n    });\n}\nexports.default = parsePayment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/payment.ts\n// module id = 297\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/payment.ts?");

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst flags = common_1.txFlags.TrustSet;\nfunction parseFlag(flagsValue, trueValue, falseValue) {\n    if (flagsValue & trueValue) {\n        return true;\n    }\n    if (flagsValue & falseValue) {\n        return false;\n    }\n    return undefined;\n}\nfunction parseTrustline(tx) {\n    assert(tx.TransactionType === 'TrustSet');\n    return common_1.removeUndefined({\n        limit: tx.LimitAmount.value,\n        currency: tx.LimitAmount.currency,\n        counterparty: tx.LimitAmount.issuer,\n        memos: utils_1.parseMemos(tx),\n        qualityIn: utils_1.parseQuality(tx.QualityIn),\n        qualityOut: utils_1.parseQuality(tx.QualityOut),\n        ripplingDisabled: parseFlag(tx.Flags, flags.SetNoRipple, flags.ClearNoRipple),\n        frozen: parseFlag(tx.Flags, flags.SetFreeze, flags.ClearFreeze),\n        authorized: parseFlag(tx.Flags, flags.SetAuth, 0)\n    });\n}\nexports.default = parseTrustline;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/trustline.ts\n// module id = 298\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/trustline.ts?");

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst utils_1 = __webpack_require__(10);\nconst amount_1 = __webpack_require__(14);\nconst common_1 = __webpack_require__(0);\nconst flags = common_1.txFlags.OfferCreate;\nfunction parseOrder(tx) {\n    assert(tx.TransactionType === 'OfferCreate');\n    const direction = (tx.Flags & flags.Sell) === 0 ? 'buy' : 'sell';\n    const takerGetsAmount = amount_1.default(tx.TakerGets);\n    const takerPaysAmount = amount_1.default(tx.TakerPays);\n    const quantity = (direction === 'buy') ? takerPaysAmount : takerGetsAmount;\n    const totalPrice = (direction === 'buy') ? takerGetsAmount : takerPaysAmount;\n    return common_1.removeUndefined({\n        direction: direction,\n        quantity: quantity,\n        totalPrice: totalPrice,\n        passive: ((tx.Flags & flags.Passive) !== 0) || undefined,\n        immediateOrCancel: ((tx.Flags & flags.ImmediateOrCancel) !== 0)\n            || undefined,\n        fillOrKill: ((tx.Flags & flags.FillOrKill) !== 0) || undefined,\n        expirationTime: utils_1.parseTimestamp(tx.Expiration)\n    });\n}\nexports.default = parseOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/order.ts\n// module id = 299\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/order.ts?");

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nfunction parseOrderCancellation(tx) {\n    assert(tx.TransactionType === 'OfferCancel');\n    return {\n        orderSequence: tx.OfferSequence\n    };\n}\nexports.default = parseOrderCancellation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/cancellation.ts\n// module id = 300\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/cancellation.ts?");

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst assert = __webpack_require__(2);\nconst common_1 = __webpack_require__(0);\nconst AccountFlags = common_1.constants.AccountFlags;\nconst fields_1 = __webpack_require__(90);\nfunction getAccountRootModifiedNode(tx) {\n    const modifiedNodes = tx.meta.AffectedNodes.filter(node => node.ModifiedNode.LedgerEntryType === 'AccountRoot');\n    assert(modifiedNodes.length === 1);\n    return modifiedNodes[0].ModifiedNode;\n}\nfunction parseFlags(tx) {\n    const settings = {};\n    if (tx.TransactionType !== 'AccountSet') {\n        return settings;\n    }\n    const node = getAccountRootModifiedNode(tx);\n    const oldFlags = _.get(node.PreviousFields, 'Flags');\n    const newFlags = _.get(node.FinalFields, 'Flags');\n    if (oldFlags !== undefined && newFlags !== undefined) {\n        const changedFlags = oldFlags ^ newFlags;\n        const setFlags = newFlags & changedFlags;\n        const clearedFlags = oldFlags & changedFlags;\n        _.forEach(AccountFlags, (flagValue, flagName) => {\n            if (setFlags & flagValue) {\n                settings[flagName] = true;\n            }\n            else if (clearedFlags & flagValue) {\n                settings[flagName] = false;\n            }\n        });\n    }\n    // enableTransactionIDTracking requires a special case because it\n    // does not affect the Flags field; instead it adds/removes a field called\n    // \"AccountTxnID\" to/from the account root.\n    const oldField = _.get(node.PreviousFields, 'AccountTxnID');\n    const newField = _.get(node.FinalFields, 'AccountTxnID');\n    if (newField && !oldField) {\n        settings.enableTransactionIDTracking = true;\n    }\n    else if (oldField && !newField) {\n        settings.enableTransactionIDTracking = false;\n    }\n    return settings;\n}\nfunction parseSettings(tx) {\n    const txType = tx.TransactionType;\n    assert(txType === 'AccountSet' || txType === 'SetRegularKey' ||\n        txType === 'SignerListSet');\n    return _.assign({}, parseFlags(tx), fields_1.default(tx));\n}\nexports.default = parseSettings;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/settings.ts\n// module id = 301\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/settings.ts?");

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst amount_1 = __webpack_require__(14);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nfunction parseEscrowCreation(tx) {\n    assert(tx.TransactionType === 'EscrowCreate');\n    return common_1.removeUndefined({\n        amount: amount_1.default(tx.Amount).value,\n        destination: tx.Destination,\n        memos: utils_1.parseMemos(tx),\n        condition: tx.Condition,\n        allowCancelAfter: utils_1.parseTimestamp(tx.CancelAfter),\n        allowExecuteAfter: utils_1.parseTimestamp(tx.FinishAfter),\n        sourceTag: tx.SourceTag,\n        destinationTag: tx.DestinationTag\n    });\n}\nexports.default = parseEscrowCreation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/escrow-creation.ts\n// module id = 302\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/escrow-creation.ts?");

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nfunction parseEscrowExecution(tx) {\n    assert(tx.TransactionType === 'EscrowFinish');\n    return common_1.removeUndefined({\n        memos: utils_1.parseMemos(tx),\n        owner: tx.Owner,\n        escrowSequence: tx.OfferSequence,\n        condition: tx.Condition,\n        fulfillment: tx.Fulfillment\n    });\n}\nexports.default = parseEscrowExecution;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/escrow-execution.ts\n// module id = 303\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/escrow-execution.ts?");

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nfunction parseEscrowCancellation(tx) {\n    assert(tx.TransactionType === 'EscrowCancel');\n    return common_1.removeUndefined({\n        memos: utils_1.parseMemos(tx),\n        owner: tx.Owner,\n        escrowSequence: tx.OfferSequence\n    });\n}\nexports.default = parseEscrowCancellation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/escrow-cancellation.ts\n// module id = 304\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/escrow-cancellation.ts?");

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst amount_1 = __webpack_require__(14);\nfunction parseCheckCreate(tx) {\n    assert(tx.TransactionType === 'CheckCreate');\n    return common_1.removeUndefined({\n        destination: tx.Destination,\n        sendMax: amount_1.default(tx.SendMax),\n        destinationTag: tx.DestinationTag,\n        expiration: tx.Expiration && utils_1.parseTimestamp(tx.Expiration),\n        invoiceID: tx.InvoiceID\n    });\n}\nexports.default = parseCheckCreate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/check-create.ts\n// module id = 305\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/check-create.ts?");

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst common_1 = __webpack_require__(0);\nconst amount_1 = __webpack_require__(14);\nfunction parseCheckCash(tx) {\n    assert(tx.TransactionType === 'CheckCash');\n    return common_1.removeUndefined({\n        checkID: tx.CheckID,\n        amount: tx.Amount && amount_1.default(tx.Amount),\n        deliverMin: tx.DeliverMin && amount_1.default(tx.DeliverMin)\n    });\n}\nexports.default = parseCheckCash;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/check-cash.ts\n// module id = 306\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/check-cash.ts?");

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst common_1 = __webpack_require__(0);\nfunction parseCheckCancel(tx) {\n    assert(tx.TransactionType === 'CheckCancel');\n    return common_1.removeUndefined({\n        checkID: tx.CheckID\n    });\n}\nexports.default = parseCheckCancel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/check-cancel.ts\n// module id = 307\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/check-cancel.ts?");

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst common_1 = __webpack_require__(0);\nfunction parseDepositPreauth(tx) {\n    assert(tx.TransactionType === 'DepositPreauth');\n    return common_1.removeUndefined({\n        authorize: tx.Authorize,\n        unauthorize: tx.Unauthorize\n    });\n}\nexports.default = parseDepositPreauth;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/deposit-preauth.ts\n// module id = 308\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/deposit-preauth.ts?");

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst amount_1 = __webpack_require__(14);\nfunction parsePaymentChannelCreate(tx) {\n    assert(tx.TransactionType === 'PaymentChannelCreate');\n    return common_1.removeUndefined({\n        amount: amount_1.default(tx.Amount).value,\n        destination: tx.Destination,\n        settleDelay: tx.SettleDelay,\n        publicKey: tx.PublicKey,\n        cancelAfter: tx.CancelAfter && utils_1.parseTimestamp(tx.CancelAfter),\n        sourceTag: tx.SourceTag,\n        destinationTag: tx.DestinationTag\n    });\n}\nexports.default = parsePaymentChannelCreate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/payment-channel-create.ts\n// module id = 309\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/payment-channel-create.ts?");

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst amount_1 = __webpack_require__(14);\nfunction parsePaymentChannelFund(tx) {\n    assert(tx.TransactionType === 'PaymentChannelFund');\n    return common_1.removeUndefined({\n        channel: tx.Channel,\n        amount: amount_1.default(tx.Amount).value,\n        expiration: tx.Expiration && utils_1.parseTimestamp(tx.Expiration)\n    });\n}\nexports.default = parsePaymentChannelFund;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/payment-channel-fund.ts\n// module id = 310\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/payment-channel-fund.ts?");

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert = __webpack_require__(2);\nconst common_1 = __webpack_require__(0);\nconst amount_1 = __webpack_require__(14);\nconst claimFlags = common_1.txFlags.PaymentChannelClaim;\nfunction parsePaymentChannelClaim(tx) {\n    assert(tx.TransactionType === 'PaymentChannelClaim');\n    return common_1.removeUndefined({\n        channel: tx.Channel,\n        balance: tx.Balance && amount_1.default(tx.Balance).value,\n        amount: tx.Amount && amount_1.default(tx.Amount).value,\n        signature: tx.Signature,\n        publicKey: tx.PublicKey,\n        renew: Boolean(tx.Flags & claimFlags.Renew) || undefined,\n        close: Boolean(tx.Flags & claimFlags.Close) || undefined\n    });\n}\nexports.default = parsePaymentChannelClaim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/payment-channel-claim.ts\n// module id = 311\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/payment-channel-claim.ts?");

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bignumber_js_1 = __webpack_require__(7);\nconst common_1 = __webpack_require__(0);\nfunction parseFeeUpdate(tx) {\n    const baseFeeDrops = (new bignumber_js_1.default(tx.BaseFee, 16)).toString();\n    return {\n        baseFeeXRP: common_1.dropsToXrp(baseFeeDrops),\n        referenceFeeUnits: tx.ReferenceFeeUnits,\n        reserveBaseXRP: common_1.dropsToXrp(tx.ReserveBase),\n        reserveIncrementXRP: common_1.dropsToXrp(tx.ReserveIncrement)\n    };\n}\nexports.default = parseFeeUpdate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/fee-update.ts\n// module id = 312\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/fee-update.ts?");

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction parseAmendment(tx) {\n    return {\n        amendment: tx.Amendment\n    };\n}\nexports.default = parseAmendment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/amendment.ts\n// module id = 313\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/amendment.ts?");

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst binary = __webpack_require__(42);\nconst { computeTransactionHash } = __webpack_require__(50);\nconst utils = __webpack_require__(19);\nconst transaction_1 = __webpack_require__(58);\nconst transaction_2 = __webpack_require__(88);\nconst common_1 = __webpack_require__(0);\nfunction parseBinaryTransaction(transaction) {\n    const tx = binary.decode(transaction.tx_blob);\n    tx.hash = computeTransactionHash(tx);\n    tx.ledger_index = transaction.ledger_index;\n    return {\n        tx: tx,\n        meta: binary.decode(transaction.meta),\n        validated: transaction.validated\n    };\n}\nfunction parseAccountTxTransaction(tx, includeRawTransaction) {\n    const _tx = tx.tx_blob ? parseBinaryTransaction(tx) : tx;\n    // rippled uses a different response format for 'account_tx' than 'tx'\n    return transaction_1.default(_.assign({}, _tx.tx, { meta: _tx.meta, validated: _tx.validated }), includeRawTransaction);\n}\nfunction counterpartyFilter(filters, tx) {\n    if (tx.address === filters.counterparty) {\n        return true;\n    }\n    const specification = tx.specification;\n    if (specification && ((specification.destination &&\n        specification.destination.address === filters.counterparty) ||\n        (specification.counterparty === filters.counterparty))) {\n        return true;\n    }\n    return false;\n}\nfunction transactionFilter(address, filters, tx) {\n    if (filters.excludeFailures && tx.outcome.result !== 'tesSUCCESS') {\n        return false;\n    }\n    if (filters.types && !_.includes(filters.types, tx.type)) {\n        return false;\n    }\n    if (filters.initiated === true && tx.address !== address) {\n        return false;\n    }\n    if (filters.initiated === false && tx.address === address) {\n        return false;\n    }\n    if (filters.counterparty && !counterpartyFilter(filters, tx)) {\n        return false;\n    }\n    return true;\n}\nfunction orderFilter(options, tx) {\n    return !options.startTx || (options.earliestFirst ?\n        utils.compareTransactions(tx, options.startTx) > 0 :\n        utils.compareTransactions(tx, options.startTx) < 0);\n}\nfunction formatPartialResponse(address, options, data) {\n    const parse = tx => parseAccountTxTransaction(tx, options.includeRawTransactions);\n    return {\n        marker: data.marker,\n        results: data.transactions\n            .filter(tx => tx.validated)\n            .map(parse)\n            .filter(_.partial(transactionFilter, address, options))\n            .filter(_.partial(orderFilter, options))\n    };\n}\nfunction getAccountTx(connection, address, options, marker, limit) {\n    const request = {\n        command: 'account_tx',\n        account: address,\n        // -1 is equivalent to earliest available validated ledger\n        ledger_index_min: options.minLedgerVersion || -1,\n        // -1 is equivalent to most recent available validated ledger\n        ledger_index_max: options.maxLedgerVersion || -1,\n        forward: options.earliestFirst,\n        binary: options.binary,\n        limit: utils.clamp(limit, 10, 400),\n        marker: marker\n    };\n    return connection.request(request).then(response => formatPartialResponse(address, options, response));\n}\nfunction checkForLedgerGaps(connection, options, transactions) {\n    let { minLedgerVersion, maxLedgerVersion } = options;\n    // if we reached the limit on number of transactions, then we can shrink\n    // the required ledger range to only guarantee that there are no gaps in\n    // the range of ledgers spanned by those transactions\n    if (options.limit && transactions.length === options.limit) {\n        if (options.earliestFirst) {\n            maxLedgerVersion = _.last(transactions).outcome.ledgerVersion;\n        }\n        else {\n            minLedgerVersion = _.last(transactions).outcome.ledgerVersion;\n        }\n    }\n    return utils.hasCompleteLedgerRange(connection, minLedgerVersion, maxLedgerVersion).then(hasCompleteLedgerRange => {\n        if (!hasCompleteLedgerRange) {\n            throw new common_1.errors.MissingLedgerHistoryError();\n        }\n    });\n}\nfunction formatResponse(connection, options, transactions) {\n    const compare = options.earliestFirst ? utils.compareTransactions :\n        _.rearg(utils.compareTransactions, 1, 0);\n    const sortedTransactions = transactions.sort(compare);\n    return checkForLedgerGaps(connection, options, sortedTransactions).then(() => sortedTransactions);\n}\nfunction getTransactionsInternal(connection, address, options) {\n    const getter = _.partial(getAccountTx, connection, address, options);\n    const format = _.partial(formatResponse, connection, options);\n    return utils.getRecursive(getter, options.limit).then(format);\n}\nfunction getTransactions(address, options = {}) {\n    common_1.validate.getTransactions({ address, options });\n    const defaults = { maxLedgerVersion: -1 };\n    if (options.start) {\n        return transaction_2.default.call(this, options.start).then(tx => {\n            const ledgerVersion = tx.outcome.ledgerVersion;\n            const bound = options.earliestFirst ?\n                { minLedgerVersion: ledgerVersion } : { maxLedgerVersion: ledgerVersion };\n            const startOptions = _.assign({}, defaults, options, { startTx: tx }, bound);\n            return getTransactionsInternal(this.connection, address, startOptions);\n        });\n    }\n    const newOptions = _.assign({}, defaults, options);\n    return getTransactionsInternal(this.connection, address, newOptions);\n}\nexports.default = getTransactions;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/transactions.ts\n// module id = 314\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/transactions.ts?");

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _ = __webpack_require__(1);\nvar enums = __webpack_require__(33);var\nField = enums.Field;\nvar types = __webpack_require__(27);\nvar binary = __webpack_require__(64);var _require =\n__webpack_require__(97),ShaMap = _require.ShaMap;\nvar ledgerHashes = __webpack_require__(342);\nvar hashes = __webpack_require__(49);\nvar quality = __webpack_require__(343);\nvar signing = __webpack_require__(344);var _require2 =\n__webpack_require__(43),HashPrefix = _require2.HashPrefix;\n\n\nmodule.exports = _.assign({\n  hashes: _.assign({}, hashes, ledgerHashes),\n  binary: binary,\n  enums: enums,\n  signing: signing,\n  quality: quality,\n  Field: Field,\n  HashPrefix: HashPrefix,\n  ShaMap: ShaMap },\n\ntypes);\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/coretypes.js\n// module id = 315\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/coretypes.js?");

/***/ }),
/* 316 */
/***/ (function(module, exports) {

eval("module.exports = {\"TYPES\":{\"Validation\":10003,\"Done\":-1,\"Hash128\":4,\"Blob\":7,\"AccountID\":8,\"Amount\":6,\"Hash256\":5,\"UInt8\":16,\"Vector256\":19,\"STObject\":14,\"Unknown\":-2,\"Transaction\":10001,\"Hash160\":17,\"PathSet\":18,\"LedgerEntry\":10002,\"UInt16\":1,\"NotPresent\":0,\"UInt64\":3,\"UInt32\":2,\"STArray\":15},\"LEDGER_ENTRY_TYPES\":{\"Any\":-3,\"Child\":-2,\"Invalid\":-1,\"AccountRoot\":97,\"DirectoryNode\":100,\"RippleState\":114,\"Ticket\":84,\"SignerList\":83,\"Offer\":111,\"LedgerHashes\":104,\"Amendments\":102,\"FeeSettings\":115,\"Escrow\":117,\"PayChannel\":120,\"DepositPreauth\":112,\"Check\":67,\"Nickname\":110,\"Contract\":99,\"GeneratorMap\":103},\"FIELDS\":[[\"Generic\",{\"nth\":0,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Unknown\"}],[\"Invalid\",{\"nth\":-1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Unknown\"}],[\"LedgerEntryType\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt16\"}],[\"TransactionType\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt16\"}],[\"SignerWeight\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt16\"}],[\"Flags\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SourceTag\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"Sequence\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"PreviousTxnLgrSeq\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LedgerSequence\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"CloseTime\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ParentCloseTime\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SigningTime\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"Expiration\",{\"nth\":10,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"TransferRate\",{\"nth\":11,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"WalletSize\",{\"nth\":12,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"OwnerCount\",{\"nth\":13,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"DestinationTag\",{\"nth\":14,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"HighQualityIn\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"HighQualityOut\",{\"nth\":17,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LowQualityIn\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LowQualityOut\",{\"nth\":19,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"QualityIn\",{\"nth\":20,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"QualityOut\",{\"nth\":21,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"StampEscrow\",{\"nth\":22,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"BondAmount\",{\"nth\":23,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LoadFee\",{\"nth\":24,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"OfferSequence\",{\"nth\":25,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"FirstLedgerSequence\",{\"nth\":26,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LastLedgerSequence\",{\"nth\":27,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"TransactionIndex\",{\"nth\":28,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"OperationLimit\",{\"nth\":29,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ReferenceFeeUnits\",{\"nth\":30,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ReserveBase\",{\"nth\":31,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ReserveIncrement\",{\"nth\":32,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SetFlag\",{\"nth\":33,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ClearFlag\",{\"nth\":34,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SignerQuorum\",{\"nth\":35,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"CancelAfter\",{\"nth\":36,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"FinishAfter\",{\"nth\":37,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"IndexNext\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"IndexPrevious\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"BookNode\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"OwnerNode\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"BaseFee\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"ExchangeRate\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"LowNode\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"HighNode\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"EmailHash\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash128\"}],[\"LedgerHash\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"ParentHash\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"TransactionHash\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"AccountHash\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"PreviousTxnID\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"LedgerIndex\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"WalletLocator\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"RootIndex\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"AccountTxnID\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"BookDirectory\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"InvoiceID\",{\"nth\":17,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"Nickname\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"Amendment\",{\"nth\":19,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"TicketID\",{\"nth\":20,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"Digest\",{\"nth\":21,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"hash\",{\"nth\":257,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Hash256\"}],[\"index\",{\"nth\":258,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Hash256\"}],[\"Amount\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"Balance\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"LimitAmount\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"TakerPays\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"TakerGets\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"LowLimit\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"HighLimit\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"Fee\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"SendMax\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"DeliverMin\",{\"nth\":10,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"MinimumOffer\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"RippleEscrow\",{\"nth\":17,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"DeliveredAmount\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"taker_gets_funded\",{\"nth\":258,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Amount\"}],[\"taker_pays_funded\",{\"nth\":259,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Amount\"}],[\"PublicKey\",{\"nth\":1,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MessageKey\",{\"nth\":2,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"SigningPubKey\",{\"nth\":3,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"TxnSignature\",{\"nth\":4,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"Blob\"}],[\"Generator\",{\"nth\":5,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"Signature\",{\"nth\":6,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"Blob\"}],[\"Domain\",{\"nth\":7,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"FundCode\",{\"nth\":8,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"RemoveCode\",{\"nth\":9,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"ExpireCode\",{\"nth\":10,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"CreateCode\",{\"nth\":11,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MemoType\",{\"nth\":12,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MemoData\",{\"nth\":13,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MemoFormat\",{\"nth\":14,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"Fulfillment\",{\"nth\":16,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"Condition\",{\"nth\":17,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MasterSignature\",{\"nth\":18,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"Blob\"}],[\"Account\",{\"nth\":1,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Owner\",{\"nth\":2,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Destination\",{\"nth\":3,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Issuer\",{\"nth\":4,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Authorize\",{\"nth\":5,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Unauthorize\",{\"nth\":6,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Target\",{\"nth\":7,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"RegularKey\",{\"nth\":8,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"ObjectEndMarker\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"TransactionMetaData\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"CreatedNode\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"DeletedNode\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"ModifiedNode\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"PreviousFields\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"FinalFields\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"NewFields\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"TemplateEntry\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"Memo\",{\"nth\":10,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"SignerEntry\",{\"nth\":11,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"Signer\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"Majority\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"ArrayEndMarker\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Signers\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"STArray\"}],[\"SignerEntries\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Template\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Necessary\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Sufficient\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"AffectedNodes\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Memos\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Majorities\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"CloseResolution\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"Method\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"TransactionResult\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"TakerPaysCurrency\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"TakerPaysIssuer\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"TakerGetsCurrency\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"TakerGetsIssuer\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"Paths\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"PathSet\"}],[\"Indexes\",{\"nth\":1,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Vector256\"}],[\"Hashes\",{\"nth\":2,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Vector256\"}],[\"Amendments\",{\"nth\":3,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Vector256\"}],[\"Transaction\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Transaction\"}],[\"LedgerEntry\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"LedgerEntry\"}],[\"Validation\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Validation\"}],[\"SignerListID\",{\"nth\":38,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SettleDelay\",{\"nth\":39,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"Channel\",{\"nth\":22,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"ConsensusHash\",{\"nth\":23,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"CheckID\",{\"nth\":24,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"TickSize\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"DestinationNode\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}]],\"TRANSACTION_RESULTS\":{\"telNO_DST_PARTIAL\":-393,\"temBAD_SRC_ACCOUNT\":-281,\"tefPAST_SEQ\":-189,\"terNO_ACCOUNT\":-96,\"temREDUNDANT\":-275,\"tefCREATED\":-194,\"temDST_IS_SRC\":-279,\"terRETRY\":-99,\"temINVALID_FLAG\":-276,\"temBAD_SEND_XRP_LIMIT\":-288,\"terNO_LINE\":-94,\"tefBAD_AUTH\":-196,\"temBAD_EXPIRATION\":-295,\"temBAD_SEND_XRP_NO_DIRECT\":-286,\"temBAD_SEND_XRP_PATHS\":-284,\"tefBAD_LEDGER\":-195,\"tefNO_AUTH_REQUIRED\":-190,\"terOWNERS\":-93,\"terLAST\":-91,\"terNO_RIPPLE\":-90,\"temBAD_FEE\":-294,\"terPRE_SEQ\":-92,\"tefMASTER_DISABLED\":-187,\"temBAD_CURRENCY\":-296,\"tefDST_TAG_NEEDED\":-193,\"temBAD_SIGNATURE\":-282,\"tefFAILURE\":-199,\"telBAD_PATH_COUNT\":-397,\"temBAD_TRANSFER_RATE\":-280,\"tefWRONG_PRIOR\":-188,\"telBAD_DOMAIN\":-398,\"temBAD_AMOUNT\":-298,\"temBAD_AUTH_MASTER\":-297,\"temBAD_LIMIT\":-292,\"temBAD_ISSUER\":-293,\"telBAD_PUBLIC_KEY\":-396,\"tefBAD_ADD_AUTH\":-197,\"temBAD_OFFER\":-291,\"temBAD_SEND_XRP_PARTIAL\":-285,\"temDST_NEEDED\":-278,\"tefALREADY\":-198,\"temUNCERTAIN\":-272,\"telLOCAL_ERROR\":-399,\"temREDUNDANT_SEND_MAX\":-274,\"tefINTERNAL\":-191,\"temBAD_PATH_LOOP\":-289,\"tefEXCEPTION\":-192,\"temRIPPLE_EMPTY\":-273,\"telINSUF_FEE_P\":-394,\"temBAD_SEQUENCE\":-283,\"tefMAX_LEDGER\":-186,\"terFUNDS_SPENT\":-98,\"temBAD_SEND_XRP_MAX\":-287,\"telFAILED_PROCESSING\":-395,\"terINSUF_FEE_B\":-97,\"tesSUCCESS\":0,\"temBAD_PATH\":-290,\"temMALFORMED\":-299,\"temUNKNOWN\":-271,\"temINVALID\":-277,\"terNO_AUTH\":-95,\"temBAD_TICK_SIZE\":-270,\"tecCLAIM\":100,\"tecPATH_PARTIAL\":101,\"tecUNFUNDED_ADD\":102,\"tecUNFUNDED_OFFER\":103,\"tecUNFUNDED_PAYMENT\":104,\"tecFAILED_PROCESSING\":105,\"tecDIR_FULL\":121,\"tecINSUF_RESERVE_LINE\":122,\"tecINSUF_RESERVE_OFFER\":123,\"tecNO_DST\":124,\"tecNO_DST_INSUF_XRP\":125,\"tecNO_LINE_INSUF_RESERVE\":126,\"tecNO_LINE_REDUNDANT\":127,\"tecPATH_DRY\":128,\"tecUNFUNDED\":129,\"tecNO_ALTERNATIVE_KEY\":130,\"tecNO_REGULAR_KEY\":131,\"tecOWNERS\":132,\"tecNO_ISSUER\":133,\"tecNO_AUTH\":134,\"tecNO_LINE\":135,\"tecINSUFF_FEE\":136,\"tecFROZEN\":137,\"tecNO_TARGET\":138,\"tecNO_PERMISSION\":139,\"tecNO_ENTRY\":140,\"tecINSUFFICIENT_RESERVE\":141,\"tecNEED_MASTER_KEY\":142,\"tecDST_TAG_NEEDED\":143,\"tecINTERNAL\":144,\"tecOVERSIZE\":145,\"tecCRYPTOCONDITION_ERROR\":146,\"tecINVARIANT_FAILED\":147,\"tecEXPIRED\":148,\"tecDUPLICATE\":149},\"TRANSACTION_TYPES\":{\"Invalid\":-1,\"Payment\":0,\"EscrowCreate\":1,\"EscrowFinish\":2,\"AccountSet\":3,\"EscrowCancel\":4,\"SetRegularKey\":5,\"NickNameSet\":6,\"OfferCreate\":7,\"OfferCancel\":8,\"Contract\":9,\"TicketCreate\":10,\"TicketCancel\":11,\"SignerListSet\":12,\"PaymentChannelCreate\":13,\"PaymentChannelFund\":14,\"PaymentChannelClaim\":15,\"CheckCreate\":16,\"CheckCash\":17,\"CheckCancel\":18,\"DepositPreauth\":19,\"TrustSet\":20,\"EnableAmendment\":100,\"SetFee\":101}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/enums/definitions.json\n// module id = 316\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/enums/definitions.json?");

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}var _ = __webpack_require__(1);\nvar assert = __webpack_require__(2);\nvar BN = __webpack_require__(15);\nvar Decimal = __webpack_require__(47);\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(20),SerializedType = _require.SerializedType;var _require2 =\n__webpack_require__(11),bytesToHex = _require2.bytesToHex;var _require3 =\n__webpack_require__(63),Currency = _require3.Currency;var _require4 =\n__webpack_require__(59),AccountID = _require4.AccountID;var _require5 =\n__webpack_require__(91),UInt64 = _require5.UInt64;\n\nvar MIN_IOU_EXPONENT = -96;\nvar MAX_IOU_EXPONENT = 80;\nvar MAX_IOU_PRECISION = 16;\nvar MIN_IOU_MANTISSA = '1000' + '0000' + '0000' + '0000'; // 16 digits\nvar MAX_IOU_MANTISSA = '9999' + '9999' + '9999' + '9999'; // ..\nvar MAX_IOU = new Decimal(MAX_IOU_MANTISSA + 'e' + MAX_IOU_EXPONENT);\nvar MIN_IOU = new Decimal(MIN_IOU_MANTISSA + 'e' + MIN_IOU_EXPONENT);\nvar DROPS_PER_XRP = new Decimal('1e6');\nvar MAX_NETWORK_DROPS = new Decimal('1e17');\nvar MIN_XRP = new Decimal('1e-6');\nvar MAX_XRP = MAX_NETWORK_DROPS.dividedBy(DROPS_PER_XRP);\n\n// Never use exponential form\nDecimal.config({\n  toExpPos: MAX_IOU_EXPONENT + MAX_IOU_PRECISION,\n  toExpNeg: MIN_IOU_EXPONENT - MAX_IOU_PRECISION });\n\n\nvar AMOUNT_PARAMETERS_DESCRIPTION = '\\nNative values must be described in drops, a million of which equal one XRP.\\nThis must be an integer number, with the absolute value not exceeding ' +\n\n\nMAX_NETWORK_DROPS + '\\n\\nIOU values must have a maximum precision of ' +\n\nMAX_IOU_PRECISION + ' significant digits. They are serialized as\\na canonicalised mantissa and exponent.\\n\\nThe valid range for a mantissa is between ' +\n\n\nMIN_IOU_MANTISSA + ' and ' +\nMAX_IOU_MANTISSA + '\\nThe exponent must be >= ' +\nMIN_IOU_EXPONENT + ' and <= ' + MAX_IOU_EXPONENT + '\\n\\nThus the largest serializable IOU value is:\\n' +\n\n\nMAX_IOU.toString() + '\\n\\nAnd the smallest:\\n' +\n\n\nMIN_IOU.toString() + '\\n';\n\n\nfunction isDefined(val) {\n  return !_.isUndefined(val);\n}\n\nfunction raiseIllegalAmountError(value) {\n  throw new Error(value.toString() + ' is an illegal amount\\n' +\n  AMOUNT_PARAMETERS_DESCRIPTION);\n}\n\nvar parsers = {\n  string: function string(str) {\n    if (!str.match(/\\d+/)) {\n      raiseIllegalAmountError(str);\n    }\n    return [new Decimal(str).dividedBy(DROPS_PER_XRP), Currency.XRP];\n  },\n  object: function object(_object) {\n    assert(isDefined(_object.currency), 'currency must be defined');\n    assert(isDefined(_object.issuer), 'issuer must be defined');\n    return [new Decimal(_object.value),\n    Currency.from(_object.currency),\n    AccountID.from(_object.issuer)];\n  } };\n\n\nvar Amount = makeClass({\n  Amount: function Amount(value, currency, issuer) {var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    this.value = value || new Decimal('0');\n    this.currency = currency || Currency.XRP;\n    this.issuer = issuer || null;\n    if (validate) {\n      this.assertValueIsValid();\n    }\n  },\n  mixins: SerializedType,\n  statics: {\n    from: function from(value) {\n      if (value instanceof this) {\n        return value;\n      }\n      var parser = parsers[typeof value === 'undefined' ? 'undefined' : _typeof(value)];\n      if (parser) {\n        return new (Function.prototype.bind.apply(this, [null].concat(_toConsumableArray(parser(value)))))();\n      }\n      throw new Error('unsupported value: ' + value);\n    },\n    fromParser: function fromParser(parser) {\n      var mantissa = parser.read(8);\n      var b1 = mantissa[0];\n      var b2 = mantissa[1];\n\n      var isIOU = b1 & 0x80;\n      var isPositive = b1 & 0x40;\n      var sign = isPositive ? '' : '-';\n\n      if (isIOU) {\n        mantissa[0] = 0;\n        var currency = parser.readType(Currency);\n        var issuer = parser.readType(AccountID);\n        var exponent = ((b1 & 0x3F) << 2) + ((b2 & 0xff) >> 6) - 97;\n        mantissa[1] &= 0x3F;\n        // decimal.js won't accept e notation with hex\n        var value = new Decimal(sign + '0x' + bytesToHex(mantissa)).\n        times('1e' + exponent);\n        return new this(value, currency, issuer, false);\n      }\n\n      mantissa[0] &= 0x3F;\n      var drops = new Decimal(sign + '0x' + bytesToHex(mantissa));\n      var xrpValue = drops.dividedBy(DROPS_PER_XRP);\n      return new this(xrpValue, Currency.XRP, null, false);\n    } },\n\n  assertValueIsValid: function assertValueIsValid() {\n    // zero is always a valid amount value\n    if (!this.isZero()) {\n      if (this.isNative()) {\n        var abs = this.value.abs();\n        if (abs.lt(MIN_XRP) || abs.gt(MAX_XRP)) {\n          // value is in XRP scale, but show the value in canonical json form\n          raiseIllegalAmountError(this.value.times(DROPS_PER_XRP));\n        }\n      } else {\n        var p = this.value.precision();\n        var e = this.exponent();\n        if (p > MAX_IOU_PRECISION ||\n        e > MAX_IOU_EXPONENT ||\n        e < MIN_IOU_EXPONENT) {\n          raiseIllegalAmountError(this.value);\n        }\n      }\n    }\n  },\n  isNative: function isNative() {\n    return this.currency.isNative();\n  },\n  mantissa: function mantissa() {\n    return new UInt64(\n    new BN(this.value.times('1e' + -this.exponent()).abs().toString()));\n  },\n  isZero: function isZero() {\n    return this.value.isZero();\n  },\n  exponent: function exponent() {\n    return this.isNative() ? -6 : this.value.e - 15;\n  },\n  valueString: function valueString() {\n    return (this.isNative() ? this.value.times(DROPS_PER_XRP) : this.value).\n    toString();\n  },\n  toBytesSink: function toBytesSink(sink) {\n    var isNative = this.isNative();\n    var notNegative = !this.value.isNegative();\n    var mantissa = this.mantissa().toBytes();\n\n    if (isNative) {\n      mantissa[0] |= notNegative ? 0x40 : 0;\n      sink.put(mantissa);\n    } else {\n      mantissa[0] |= 0x80;\n      if (!this.isZero()) {\n        if (notNegative) {\n          mantissa[0] |= 0x40;\n        }\n        var exponent = this.value.e - 15;\n        var exponentByte = 97 + exponent;\n        mantissa[0] |= exponentByte >>> 2;\n        mantissa[1] |= (exponentByte & 0x03) << 6;\n      }\n      sink.put(mantissa);\n      this.currency.toBytesSink(sink);\n      this.issuer.toBytesSink(sink);\n    }\n  },\n  toJSON: function toJSON() {\n    var valueString = this.valueString();\n    if (this.isNative()) {\n      return valueString;\n    }\n    return {\n      value: valueString,\n      currency: this.currency.toJSON(),\n      issuer: this.issuer.toJSON() };\n\n  } });\n\n\nmodule.exports = {\n  Amount: Amount };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/amount.js\n// module id = 317\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/amount.js?");

/***/ }),
/* 318 */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 318\n// module chunks = 0\n\n//# sourceURL=webpack:///buffer_(ignored)?");

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(11),parseBytes = _require.parseBytes;var _require2 =\n__webpack_require__(20),SerializedType = _require2.SerializedType;\n\nvar Blob = makeClass({\n  mixins: SerializedType,\n  Blob: function Blob(bytes) {\n    if (bytes) {\n      this._bytes = parseBytes(bytes, Uint8Array);\n    } else {\n      this._bytes = new Uint8Array(0);\n    }\n  },\n  statics: {\n    fromParser: function fromParser(parser, hint) {\n      return new this(parser.read(hint));\n    },\n    from: function from(value) {\n      if (value instanceof this) {\n        return value;\n      }\n      return new this(value);\n    } } });\n\n\n\nmodule.exports = {\n  Blob: Blob };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/blob.js\n// module id = 319\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/blob.js?");

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(61),Hash = _require.Hash;\n\nvar Hash128 = makeClass({\n  inherits: Hash,\n  statics: { width: 16 } });\n\n\nmodule.exports = {\n  Hash128: Hash128 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/hash-128.js\n// module id = 320\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/hash-128.js?");

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" /* eslint-disable no-unused-expressions */\n\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(20),SerializedType = _require.SerializedType,ensureArrayLikeIs = _require.ensureArrayLikeIs;var _require2 =\n__webpack_require__(63),Currency = _require2.Currency;var _require3 =\n__webpack_require__(59),AccountID = _require3.AccountID;\n\nvar PATHSET_END_BYTE = 0x00;\nvar PATH_SEPARATOR_BYTE = 0xFF;\nvar TYPE_ACCOUNT = 0x01;\nvar TYPE_CURRENCY = 0x10;\nvar TYPE_ISSUER = 0x20;\n\nvar Hop = makeClass({\n  statics: {\n    from: function from(value) {\n      if (value instanceof this) {\n        return value;\n      }\n      var hop = new Hop();\n      value.issuer && (hop.issuer = AccountID.from(value.issuer));\n      value.account && (hop.account = AccountID.from(value.account));\n      value.currency && (hop.currency = Currency.from(value.currency));\n      return hop;\n    },\n    parse: function parse(parser, type) {\n      var hop = new Hop();\n      type & TYPE_ACCOUNT && (hop.account = AccountID.fromParser(parser));\n      type & TYPE_CURRENCY && (hop.currency = Currency.fromParser(parser));\n      type & TYPE_ISSUER && (hop.issuer = AccountID.fromParser(parser));\n      return hop;\n    } },\n\n  toJSON: function toJSON() {\n    var type = this.type();\n    var ret = {};\n    type & TYPE_ACCOUNT && (ret.account = this.account.toJSON());\n    type & TYPE_ISSUER && (ret.issuer = this.issuer.toJSON());\n    type & TYPE_CURRENCY && (ret.currency = this.currency.toJSON());\n    return ret;\n  },\n  type: function type() {\n    var type = 0;\n    this.issuer && (type += TYPE_ISSUER);\n    this.account && (type += TYPE_ACCOUNT);\n    this.currency && (type += TYPE_CURRENCY);\n    return type;\n  } });\n\n\nvar Path = makeClass({\n  inherits: Array,\n  statics: {\n    from: function from(value) {\n      return ensureArrayLikeIs(Path, value).withChildren(Hop);\n    } },\n\n  toJSON: function toJSON() {\n    return this.map(function (k) {return k.toJSON();});\n  } });\n\n\nvar PathSet = makeClass({\n  mixins: SerializedType,\n  inherits: Array,\n  statics: {\n    from: function from(value) {\n      return ensureArrayLikeIs(PathSet, value).withChildren(Path);\n    },\n    fromParser: function fromParser(parser) {\n      var pathSet = new this();\n      var path = void 0;\n      while (!parser.end()) {\n        var type = parser.readUInt8();\n        if (type === PATHSET_END_BYTE) {\n          break;\n        }\n        if (type === PATH_SEPARATOR_BYTE) {\n          path = null;\n          continue;\n        }\n        if (!path) {\n          path = new Path();\n          pathSet.push(path);\n        }\n        path.push(Hop.parse(parser, type));\n      }\n      return pathSet;\n    } },\n\n  toJSON: function toJSON() {\n    return this.map(function (k) {return k.toJSON();});\n  },\n  toBytesSink: function toBytesSink(sink) {\n    var n = 0;\n    this.forEach(function (path) {\n      if (n++ !== 0) {\n        sink.put([PATH_SEPARATOR_BYTE]);\n      }\n      path.forEach(function (hop) {\n        sink.put([hop.type()]);\n        hop.account && hop.account.toBytesSink(sink);\n        hop.currency && hop.currency.toBytesSink(sink);\n        hop.issuer && hop.issuer.toBytesSink(sink);\n      });\n    });\n    sink.put([PATHSET_END_BYTE]);\n  } });\n\n\nmodule.exports = {\n  PathSet: PathSet };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/path-set.js\n// module id = 321\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/path-set.js?");

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(20),ensureArrayLikeIs = _require.ensureArrayLikeIs,SerializedType = _require.SerializedType;var _require2 =\n__webpack_require__(33),Field = _require2.Field;var _require3 =\n__webpack_require__(93),STObject = _require3.STObject;var\nArrayEndMarker = Field.ArrayEndMarker;\n\nvar STArray = makeClass({\n  mixins: SerializedType,\n  inherits: Array,\n  statics: {\n    fromParser: function fromParser(parser) {\n      var array = new STArray();\n      while (!parser.end()) {\n        var field = parser.readField();\n        if (field === ArrayEndMarker) {\n          break;\n        }\n        var outer = new STObject();\n        outer[field] = parser.readFieldValue(field);\n        array.push(outer);\n      }\n      return array;\n    },\n    from: function from(value) {\n      return ensureArrayLikeIs(STArray, value).withChildren(STObject);\n    } },\n\n  toJSON: function toJSON() {\n    return this.map(function (v) {return v.toJSON();});\n  },\n  toBytesSink: function toBytesSink(sink) {\n    this.forEach(function (so) {return so.toBytesSink(sink);});\n  } });\n\n\nmodule.exports = {\n  STArray: STArray };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/st-array.js\n// module id = 322\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/st-array.js?");

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(48),UInt = _require.UInt;\n\nvar UInt16 = makeClass({\n  inherits: UInt,\n  statics: { width: 2 } });\n\n\nmodule.exports = {\n  UInt16: UInt16 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/uint-16.js\n// module id = 323\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/uint-16.js?");

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(48),UInt = _require.UInt;\n\nvar UInt32 = makeClass({\n  inherits: UInt,\n  statics: { width: 4 } });\n\n\nmodule.exports = {\n  UInt32: UInt32 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/uint-32.js\n// module id = 324\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/uint-32.js?");

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(48),UInt = _require.UInt;\n\nvar UInt8 = makeClass({\n  inherits: UInt,\n  statics: { width: 1 } });\n\n\nmodule.exports = {\n  UInt8: UInt8 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/uint-8.js\n// module id = 325\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/uint-8.js?");

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(5);var _require =\n__webpack_require__(92),Hash256 = _require.Hash256;var _require2 =\n__webpack_require__(20),ensureArrayLikeIs = _require2.ensureArrayLikeIs,SerializedType = _require2.SerializedType;\n\nvar Vector256 = makeClass({\n  mixins: SerializedType,\n  inherits: Array,\n  statics: {\n    fromParser: function fromParser(parser, hint) {\n      var vector256 = new this();\n      var bytes = hint !== null ? hint : parser.size() - parser.pos();\n      var hashes = bytes / 32;\n      for (var i = 0; i < hashes; i++) {\n        vector256.push(Hash256.fromParser(parser));\n      }\n      return vector256;\n    },\n    from: function from(value) {\n      return ensureArrayLikeIs(Vector256, value).withChildren(Hash256);\n    } },\n\n  toBytesSink: function toBytesSink(sink) {\n    this.forEach(function (h) {return h.toBytesSink(sink);});\n  },\n  toJSON: function toJSON() {\n    return this.map(function (hash) {return hash.toJSON();});\n  } });\n\n\nmodule.exports = {\n  Vector256: Vector256 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/types/vector-256.js\n// module id = 326\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/types/vector-256.js?");

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar makeClass = __webpack_require__(5);var _require =\n__webpack_require__(33),Field = _require.Field;var _require2 =\n__webpack_require__(11),slice = _require2.slice,parseBytes = _require2.parseBytes;\n\nvar BinaryParser = makeClass({\n  BinaryParser: function BinaryParser(buf) {\n    this._buf = parseBytes(buf, Uint8Array);\n    this._length = this._buf.length;\n    this._cursor = 0;\n  },\n  skip: function skip(n) {\n    this._cursor += n;\n  },\n  read: function read(n) {var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Uint8Array;\n    var start = this._cursor;\n    var end = this._cursor + n;\n    assert(end <= this._buf.length);\n    this._cursor = end;\n    return slice(this._buf, start, end, to);\n  },\n  readUIntN: function readUIntN(n) {\n    return this.read(n, Array).reduce(function (a, b) {return a << 8 | b;}) >>> 0;\n  },\n  readUInt8: function readUInt8() {\n    return this._buf[this._cursor++];\n  },\n  readUInt16: function readUInt16() {\n    return this.readUIntN(2);\n  },\n  readUInt32: function readUInt32() {\n    return this.readUIntN(4);\n  },\n  pos: function pos() {\n    return this._cursor;\n  },\n  size: function size() {\n    return this._buf.length;\n  },\n  end: function end(customEnd) {\n    var cursor = this.pos();\n    return cursor >= this._length || customEnd !== null &&\n    cursor >= customEnd;\n  },\n  readVL: function readVL() {\n    return this.read(this.readVLLength());\n  },\n  readVLLength: function readVLLength() {\n    var b1 = this.readUInt8();\n    if (b1 <= 192) {\n      return b1;\n    } else if (b1 <= 240) {\n      var b2 = this.readUInt8();\n      return 193 + (b1 - 193) * 256 + b2;\n    } else if (b1 <= 254) {\n      var _b = this.readUInt8();\n      var b3 = this.readUInt8();\n      return 12481 + (b1 - 241) * 65536 + _b * 256 + b3;\n    }\n    throw new Error('Invalid varint length indicator');\n  },\n  readFieldOrdinal: function readFieldOrdinal() {\n    var tagByte = this.readUInt8();\n    var type = (tagByte & 0xF0) >>> 4 || this.readUInt8();\n    var nth = tagByte & 0x0F || this.readUInt8();\n    return type << 16 | nth;\n  },\n  readField: function readField() {\n    return Field.from(this.readFieldOrdinal());\n  },\n  readType: function readType(type) {\n    return type.fromParser(this);\n  },\n  typeForField: function typeForField(field) {\n    return field.associatedType;\n  },\n  readFieldValue: function readFieldValue(field) {\n    var kls = this.typeForField(field);\n    if (!kls) {\n      throw new Error('unsupported: (' + field.name + ', ' + field.type.name + ')');\n    }\n    var sizeHint = field.isVLEncoded ? this.readVLLength() : null;\n    var value = kls.fromParser(this, sizeHint);\n    if (value === undefined) {\n      throw new Error('fromParser for (' +\n      field.name + ', ' + field.type.name + ') -> undefined ');\n    }\n    return value;\n  },\n  readFieldAndValue: function readFieldAndValue() {\n    var field = this.readField();\n    return [field, this.readFieldValue(field)];\n  } });\n\n\n\nmodule.exports = {\n  BinaryParser: BinaryParser };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/serdes/binary-parser.js\n// module id = 327\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/serdes/binary-parser.js?");

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\nvar makeHash = __webpack_require__(329)\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5 (x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32)\n  x[(((len + 64) >>> 9) << 4) + 14] = len\n\n  var a = 1732584193\n  var b = -271733879\n  var c = -1732584194\n  var d = 271733878\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a\n    var oldb = b\n    var oldc = c\n    var oldd = d\n\n    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936)\n    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)\n    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)\n    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)\n    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)\n    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)\n    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)\n    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)\n    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)\n    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)\n    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)\n    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)\n    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)\n    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)\n    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)\n    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)\n    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)\n    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)\n    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302)\n    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)\n    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)\n    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)\n    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)\n    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)\n    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)\n    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)\n    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)\n    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)\n    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)\n    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)\n    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)\n    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)\n    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)\n    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)\n    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)\n    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)\n    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)\n    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)\n    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)\n    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222)\n    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)\n    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)\n    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)\n    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)\n    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)\n    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844)\n    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)\n    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)\n    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)\n    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)\n    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)\n    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)\n    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)\n    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)\n    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)\n    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)\n    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)\n    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)\n    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)\n    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)\n    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n    a = safe_add(a, olda)\n    b = safe_add(b, oldb)\n    c = safe_add(c, oldc)\n    d = safe_add(d, oldd)\n  }\n\n  return [a, b, c, d]\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn (q, a, b, x, s, t) {\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)\n}\n\nfunction md5_ff (a, b, c, d, x, s, t) {\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)\n}\n\nfunction md5_gg (a, b, c, d, x, s, t) {\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)\n}\n\nfunction md5_hh (a, b, c, d, x, s, t) {\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t)\n}\n\nfunction md5_ii (a, b, c, d, x, s, t) {\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add (x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n  return (msw << 16) | (lsw & 0xFFFF)\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol (num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt))\n}\n\nmodule.exports = function md5 (buf) {\n  return makeHash(buf, core_md5)\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/create-hash/md5.js\n// module id = 328\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/create-hash/md5.js?");

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar intSize = 4\nvar zeroBuffer = new Buffer(intSize)\nzeroBuffer.fill(0)\n\nvar charSize = 8\nvar hashSize = 16\n\nfunction toArray (buf) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize))\n    buf = Buffer.concat([buf, zeroBuffer], len)\n  }\n\n  var arr = new Array(buf.length >>> 2)\n  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {\n    arr[j] = buf.readInt32LE(i)\n  }\n\n  return arr\n}\n\nmodule.exports = function hash (buf, fn) {\n  var arr = fn(toArray(buf), buf.length * charSize)\n  buf = new Buffer(hashSize)\n  for (var i = 0; i < arr.length; i++) {\n    buf.writeInt32LE(arr[i], i << 2, true)\n  }\n  return buf\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/create-hash/make-hash.js\n// module id = 329\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/create-hash/make-hash.js?");

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar inherits = __webpack_require__(3)\nvar HashBase = __webpack_require__(331)\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var m = new Array(16)\n  for (var i = 0; i < 16; ++i) m[i] = this._block.readInt32LE(i * 4)\n\n  var al = this._a\n  var bl = this._b\n  var cl = this._c\n  var dl = this._d\n  var el = this._e\n\n  // Mj = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n  // K = 0x00000000\n  // Sj = 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8\n  al = fn1(al, bl, cl, dl, el, m[0], 0x00000000, 11); cl = rotl(cl, 10)\n  el = fn1(el, al, bl, cl, dl, m[1], 0x00000000, 14); bl = rotl(bl, 10)\n  dl = fn1(dl, el, al, bl, cl, m[2], 0x00000000, 15); al = rotl(al, 10)\n  cl = fn1(cl, dl, el, al, bl, m[3], 0x00000000, 12); el = rotl(el, 10)\n  bl = fn1(bl, cl, dl, el, al, m[4], 0x00000000, 5); dl = rotl(dl, 10)\n  al = fn1(al, bl, cl, dl, el, m[5], 0x00000000, 8); cl = rotl(cl, 10)\n  el = fn1(el, al, bl, cl, dl, m[6], 0x00000000, 7); bl = rotl(bl, 10)\n  dl = fn1(dl, el, al, bl, cl, m[7], 0x00000000, 9); al = rotl(al, 10)\n  cl = fn1(cl, dl, el, al, bl, m[8], 0x00000000, 11); el = rotl(el, 10)\n  bl = fn1(bl, cl, dl, el, al, m[9], 0x00000000, 13); dl = rotl(dl, 10)\n  al = fn1(al, bl, cl, dl, el, m[10], 0x00000000, 14); cl = rotl(cl, 10)\n  el = fn1(el, al, bl, cl, dl, m[11], 0x00000000, 15); bl = rotl(bl, 10)\n  dl = fn1(dl, el, al, bl, cl, m[12], 0x00000000, 6); al = rotl(al, 10)\n  cl = fn1(cl, dl, el, al, bl, m[13], 0x00000000, 7); el = rotl(el, 10)\n  bl = fn1(bl, cl, dl, el, al, m[14], 0x00000000, 9); dl = rotl(dl, 10)\n  al = fn1(al, bl, cl, dl, el, m[15], 0x00000000, 8); cl = rotl(cl, 10)\n\n  // Mj = 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8\n  // K = 0x5a827999\n  // Sj = 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12\n  el = fn2(el, al, bl, cl, dl, m[7], 0x5a827999, 7); bl = rotl(bl, 10)\n  dl = fn2(dl, el, al, bl, cl, m[4], 0x5a827999, 6); al = rotl(al, 10)\n  cl = fn2(cl, dl, el, al, bl, m[13], 0x5a827999, 8); el = rotl(el, 10)\n  bl = fn2(bl, cl, dl, el, al, m[1], 0x5a827999, 13); dl = rotl(dl, 10)\n  al = fn2(al, bl, cl, dl, el, m[10], 0x5a827999, 11); cl = rotl(cl, 10)\n  el = fn2(el, al, bl, cl, dl, m[6], 0x5a827999, 9); bl = rotl(bl, 10)\n  dl = fn2(dl, el, al, bl, cl, m[15], 0x5a827999, 7); al = rotl(al, 10)\n  cl = fn2(cl, dl, el, al, bl, m[3], 0x5a827999, 15); el = rotl(el, 10)\n  bl = fn2(bl, cl, dl, el, al, m[12], 0x5a827999, 7); dl = rotl(dl, 10)\n  al = fn2(al, bl, cl, dl, el, m[0], 0x5a827999, 12); cl = rotl(cl, 10)\n  el = fn2(el, al, bl, cl, dl, m[9], 0x5a827999, 15); bl = rotl(bl, 10)\n  dl = fn2(dl, el, al, bl, cl, m[5], 0x5a827999, 9); al = rotl(al, 10)\n  cl = fn2(cl, dl, el, al, bl, m[2], 0x5a827999, 11); el = rotl(el, 10)\n  bl = fn2(bl, cl, dl, el, al, m[14], 0x5a827999, 7); dl = rotl(dl, 10)\n  al = fn2(al, bl, cl, dl, el, m[11], 0x5a827999, 13); cl = rotl(cl, 10)\n  el = fn2(el, al, bl, cl, dl, m[8], 0x5a827999, 12); bl = rotl(bl, 10)\n\n  // Mj = 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12\n  // K = 0x6ed9eba1\n  // Sj = 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5\n  dl = fn3(dl, el, al, bl, cl, m[3], 0x6ed9eba1, 11); al = rotl(al, 10)\n  cl = fn3(cl, dl, el, al, bl, m[10], 0x6ed9eba1, 13); el = rotl(el, 10)\n  bl = fn3(bl, cl, dl, el, al, m[14], 0x6ed9eba1, 6); dl = rotl(dl, 10)\n  al = fn3(al, bl, cl, dl, el, m[4], 0x6ed9eba1, 7); cl = rotl(cl, 10)\n  el = fn3(el, al, bl, cl, dl, m[9], 0x6ed9eba1, 14); bl = rotl(bl, 10)\n  dl = fn3(dl, el, al, bl, cl, m[15], 0x6ed9eba1, 9); al = rotl(al, 10)\n  cl = fn3(cl, dl, el, al, bl, m[8], 0x6ed9eba1, 13); el = rotl(el, 10)\n  bl = fn3(bl, cl, dl, el, al, m[1], 0x6ed9eba1, 15); dl = rotl(dl, 10)\n  al = fn3(al, bl, cl, dl, el, m[2], 0x6ed9eba1, 14); cl = rotl(cl, 10)\n  el = fn3(el, al, bl, cl, dl, m[7], 0x6ed9eba1, 8); bl = rotl(bl, 10)\n  dl = fn3(dl, el, al, bl, cl, m[0], 0x6ed9eba1, 13); al = rotl(al, 10)\n  cl = fn3(cl, dl, el, al, bl, m[6], 0x6ed9eba1, 6); el = rotl(el, 10)\n  bl = fn3(bl, cl, dl, el, al, m[13], 0x6ed9eba1, 5); dl = rotl(dl, 10)\n  al = fn3(al, bl, cl, dl, el, m[11], 0x6ed9eba1, 12); cl = rotl(cl, 10)\n  el = fn3(el, al, bl, cl, dl, m[5], 0x6ed9eba1, 7); bl = rotl(bl, 10)\n  dl = fn3(dl, el, al, bl, cl, m[12], 0x6ed9eba1, 5); al = rotl(al, 10)\n\n  // Mj = 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2\n  // K = 0x8f1bbcdc\n  // Sj = 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12\n  cl = fn4(cl, dl, el, al, bl, m[1], 0x8f1bbcdc, 11); el = rotl(el, 10)\n  bl = fn4(bl, cl, dl, el, al, m[9], 0x8f1bbcdc, 12); dl = rotl(dl, 10)\n  al = fn4(al, bl, cl, dl, el, m[11], 0x8f1bbcdc, 14); cl = rotl(cl, 10)\n  el = fn4(el, al, bl, cl, dl, m[10], 0x8f1bbcdc, 15); bl = rotl(bl, 10)\n  dl = fn4(dl, el, al, bl, cl, m[0], 0x8f1bbcdc, 14); al = rotl(al, 10)\n  cl = fn4(cl, dl, el, al, bl, m[8], 0x8f1bbcdc, 15); el = rotl(el, 10)\n  bl = fn4(bl, cl, dl, el, al, m[12], 0x8f1bbcdc, 9); dl = rotl(dl, 10)\n  al = fn4(al, bl, cl, dl, el, m[4], 0x8f1bbcdc, 8); cl = rotl(cl, 10)\n  el = fn4(el, al, bl, cl, dl, m[13], 0x8f1bbcdc, 9); bl = rotl(bl, 10)\n  dl = fn4(dl, el, al, bl, cl, m[3], 0x8f1bbcdc, 14); al = rotl(al, 10)\n  cl = fn4(cl, dl, el, al, bl, m[7], 0x8f1bbcdc, 5); el = rotl(el, 10)\n  bl = fn4(bl, cl, dl, el, al, m[15], 0x8f1bbcdc, 6); dl = rotl(dl, 10)\n  al = fn4(al, bl, cl, dl, el, m[14], 0x8f1bbcdc, 8); cl = rotl(cl, 10)\n  el = fn4(el, al, bl, cl, dl, m[5], 0x8f1bbcdc, 6); bl = rotl(bl, 10)\n  dl = fn4(dl, el, al, bl, cl, m[6], 0x8f1bbcdc, 5); al = rotl(al, 10)\n  cl = fn4(cl, dl, el, al, bl, m[2], 0x8f1bbcdc, 12); el = rotl(el, 10)\n\n  // Mj = 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n  // K = 0xa953fd4e\n  // Sj = 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n  bl = fn5(bl, cl, dl, el, al, m[4], 0xa953fd4e, 9); dl = rotl(dl, 10)\n  al = fn5(al, bl, cl, dl, el, m[0], 0xa953fd4e, 15); cl = rotl(cl, 10)\n  el = fn5(el, al, bl, cl, dl, m[5], 0xa953fd4e, 5); bl = rotl(bl, 10)\n  dl = fn5(dl, el, al, bl, cl, m[9], 0xa953fd4e, 11); al = rotl(al, 10)\n  cl = fn5(cl, dl, el, al, bl, m[7], 0xa953fd4e, 6); el = rotl(el, 10)\n  bl = fn5(bl, cl, dl, el, al, m[12], 0xa953fd4e, 8); dl = rotl(dl, 10)\n  al = fn5(al, bl, cl, dl, el, m[2], 0xa953fd4e, 13); cl = rotl(cl, 10)\n  el = fn5(el, al, bl, cl, dl, m[10], 0xa953fd4e, 12); bl = rotl(bl, 10)\n  dl = fn5(dl, el, al, bl, cl, m[14], 0xa953fd4e, 5); al = rotl(al, 10)\n  cl = fn5(cl, dl, el, al, bl, m[1], 0xa953fd4e, 12); el = rotl(el, 10)\n  bl = fn5(bl, cl, dl, el, al, m[3], 0xa953fd4e, 13); dl = rotl(dl, 10)\n  al = fn5(al, bl, cl, dl, el, m[8], 0xa953fd4e, 14); cl = rotl(cl, 10)\n  el = fn5(el, al, bl, cl, dl, m[11], 0xa953fd4e, 11); bl = rotl(bl, 10)\n  dl = fn5(dl, el, al, bl, cl, m[6], 0xa953fd4e, 8); al = rotl(al, 10)\n  cl = fn5(cl, dl, el, al, bl, m[15], 0xa953fd4e, 5); el = rotl(el, 10)\n  bl = fn5(bl, cl, dl, el, al, m[13], 0xa953fd4e, 6); dl = rotl(dl, 10)\n\n  var ar = this._a\n  var br = this._b\n  var cr = this._c\n  var dr = this._d\n  var er = this._e\n\n  // M'j = 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12\n  // K' = 0x50a28be6\n  // S'j = 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6\n  ar = fn5(ar, br, cr, dr, er, m[5], 0x50a28be6, 8); cr = rotl(cr, 10)\n  er = fn5(er, ar, br, cr, dr, m[14], 0x50a28be6, 9); br = rotl(br, 10)\n  dr = fn5(dr, er, ar, br, cr, m[7], 0x50a28be6, 9); ar = rotl(ar, 10)\n  cr = fn5(cr, dr, er, ar, br, m[0], 0x50a28be6, 11); er = rotl(er, 10)\n  br = fn5(br, cr, dr, er, ar, m[9], 0x50a28be6, 13); dr = rotl(dr, 10)\n  ar = fn5(ar, br, cr, dr, er, m[2], 0x50a28be6, 15); cr = rotl(cr, 10)\n  er = fn5(er, ar, br, cr, dr, m[11], 0x50a28be6, 15); br = rotl(br, 10)\n  dr = fn5(dr, er, ar, br, cr, m[4], 0x50a28be6, 5); ar = rotl(ar, 10)\n  cr = fn5(cr, dr, er, ar, br, m[13], 0x50a28be6, 7); er = rotl(er, 10)\n  br = fn5(br, cr, dr, er, ar, m[6], 0x50a28be6, 7); dr = rotl(dr, 10)\n  ar = fn5(ar, br, cr, dr, er, m[15], 0x50a28be6, 8); cr = rotl(cr, 10)\n  er = fn5(er, ar, br, cr, dr, m[8], 0x50a28be6, 11); br = rotl(br, 10)\n  dr = fn5(dr, er, ar, br, cr, m[1], 0x50a28be6, 14); ar = rotl(ar, 10)\n  cr = fn5(cr, dr, er, ar, br, m[10], 0x50a28be6, 14); er = rotl(er, 10)\n  br = fn5(br, cr, dr, er, ar, m[3], 0x50a28be6, 12); dr = rotl(dr, 10)\n  ar = fn5(ar, br, cr, dr, er, m[12], 0x50a28be6, 6); cr = rotl(cr, 10)\n\n  // M'j = 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2\n  // K' = 0x5c4dd124\n  // S'j = 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11\n  er = fn4(er, ar, br, cr, dr, m[6], 0x5c4dd124, 9); br = rotl(br, 10)\n  dr = fn4(dr, er, ar, br, cr, m[11], 0x5c4dd124, 13); ar = rotl(ar, 10)\n  cr = fn4(cr, dr, er, ar, br, m[3], 0x5c4dd124, 15); er = rotl(er, 10)\n  br = fn4(br, cr, dr, er, ar, m[7], 0x5c4dd124, 7); dr = rotl(dr, 10)\n  ar = fn4(ar, br, cr, dr, er, m[0], 0x5c4dd124, 12); cr = rotl(cr, 10)\n  er = fn4(er, ar, br, cr, dr, m[13], 0x5c4dd124, 8); br = rotl(br, 10)\n  dr = fn4(dr, er, ar, br, cr, m[5], 0x5c4dd124, 9); ar = rotl(ar, 10)\n  cr = fn4(cr, dr, er, ar, br, m[10], 0x5c4dd124, 11); er = rotl(er, 10)\n  br = fn4(br, cr, dr, er, ar, m[14], 0x5c4dd124, 7); dr = rotl(dr, 10)\n  ar = fn4(ar, br, cr, dr, er, m[15], 0x5c4dd124, 7); cr = rotl(cr, 10)\n  er = fn4(er, ar, br, cr, dr, m[8], 0x5c4dd124, 12); br = rotl(br, 10)\n  dr = fn4(dr, er, ar, br, cr, m[12], 0x5c4dd124, 7); ar = rotl(ar, 10)\n  cr = fn4(cr, dr, er, ar, br, m[4], 0x5c4dd124, 6); er = rotl(er, 10)\n  br = fn4(br, cr, dr, er, ar, m[9], 0x5c4dd124, 15); dr = rotl(dr, 10)\n  ar = fn4(ar, br, cr, dr, er, m[1], 0x5c4dd124, 13); cr = rotl(cr, 10)\n  er = fn4(er, ar, br, cr, dr, m[2], 0x5c4dd124, 11); br = rotl(br, 10)\n\n  // M'j = 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13\n  // K' = 0x6d703ef3\n  // S'j = 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5\n  dr = fn3(dr, er, ar, br, cr, m[15], 0x6d703ef3, 9); ar = rotl(ar, 10)\n  cr = fn3(cr, dr, er, ar, br, m[5], 0x6d703ef3, 7); er = rotl(er, 10)\n  br = fn3(br, cr, dr, er, ar, m[1], 0x6d703ef3, 15); dr = rotl(dr, 10)\n  ar = fn3(ar, br, cr, dr, er, m[3], 0x6d703ef3, 11); cr = rotl(cr, 10)\n  er = fn3(er, ar, br, cr, dr, m[7], 0x6d703ef3, 8); br = rotl(br, 10)\n  dr = fn3(dr, er, ar, br, cr, m[14], 0x6d703ef3, 6); ar = rotl(ar, 10)\n  cr = fn3(cr, dr, er, ar, br, m[6], 0x6d703ef3, 6); er = rotl(er, 10)\n  br = fn3(br, cr, dr, er, ar, m[9], 0x6d703ef3, 14); dr = rotl(dr, 10)\n  ar = fn3(ar, br, cr, dr, er, m[11], 0x6d703ef3, 12); cr = rotl(cr, 10)\n  er = fn3(er, ar, br, cr, dr, m[8], 0x6d703ef3, 13); br = rotl(br, 10)\n  dr = fn3(dr, er, ar, br, cr, m[12], 0x6d703ef3, 5); ar = rotl(ar, 10)\n  cr = fn3(cr, dr, er, ar, br, m[2], 0x6d703ef3, 14); er = rotl(er, 10)\n  br = fn3(br, cr, dr, er, ar, m[10], 0x6d703ef3, 13); dr = rotl(dr, 10)\n  ar = fn3(ar, br, cr, dr, er, m[0], 0x6d703ef3, 13); cr = rotl(cr, 10)\n  er = fn3(er, ar, br, cr, dr, m[4], 0x6d703ef3, 7); br = rotl(br, 10)\n  dr = fn3(dr, er, ar, br, cr, m[13], 0x6d703ef3, 5); ar = rotl(ar, 10)\n\n  // M'j = 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14\n  // K' = 0x7a6d76e9\n  // S'j = 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8\n  cr = fn2(cr, dr, er, ar, br, m[8], 0x7a6d76e9, 15); er = rotl(er, 10)\n  br = fn2(br, cr, dr, er, ar, m[6], 0x7a6d76e9, 5); dr = rotl(dr, 10)\n  ar = fn2(ar, br, cr, dr, er, m[4], 0x7a6d76e9, 8); cr = rotl(cr, 10)\n  er = fn2(er, ar, br, cr, dr, m[1], 0x7a6d76e9, 11); br = rotl(br, 10)\n  dr = fn2(dr, er, ar, br, cr, m[3], 0x7a6d76e9, 14); ar = rotl(ar, 10)\n  cr = fn2(cr, dr, er, ar, br, m[11], 0x7a6d76e9, 14); er = rotl(er, 10)\n  br = fn2(br, cr, dr, er, ar, m[15], 0x7a6d76e9, 6); dr = rotl(dr, 10)\n  ar = fn2(ar, br, cr, dr, er, m[0], 0x7a6d76e9, 14); cr = rotl(cr, 10)\n  er = fn2(er, ar, br, cr, dr, m[5], 0x7a6d76e9, 6); br = rotl(br, 10)\n  dr = fn2(dr, er, ar, br, cr, m[12], 0x7a6d76e9, 9); ar = rotl(ar, 10)\n  cr = fn2(cr, dr, er, ar, br, m[2], 0x7a6d76e9, 12); er = rotl(er, 10)\n  br = fn2(br, cr, dr, er, ar, m[13], 0x7a6d76e9, 9); dr = rotl(dr, 10)\n  ar = fn2(ar, br, cr, dr, er, m[9], 0x7a6d76e9, 12); cr = rotl(cr, 10)\n  er = fn2(er, ar, br, cr, dr, m[7], 0x7a6d76e9, 5); br = rotl(br, 10)\n  dr = fn2(dr, er, ar, br, cr, m[10], 0x7a6d76e9, 15); ar = rotl(ar, 10)\n  cr = fn2(cr, dr, er, ar, br, m[14], 0x7a6d76e9, 8); er = rotl(er, 10)\n\n  // M'j = 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n  // K' = 0x00000000\n  // S'j = 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n  br = fn1(br, cr, dr, er, ar, m[12], 0x00000000, 8); dr = rotl(dr, 10)\n  ar = fn1(ar, br, cr, dr, er, m[15], 0x00000000, 5); cr = rotl(cr, 10)\n  er = fn1(er, ar, br, cr, dr, m[10], 0x00000000, 12); br = rotl(br, 10)\n  dr = fn1(dr, er, ar, br, cr, m[4], 0x00000000, 9); ar = rotl(ar, 10)\n  cr = fn1(cr, dr, er, ar, br, m[1], 0x00000000, 12); er = rotl(er, 10)\n  br = fn1(br, cr, dr, er, ar, m[5], 0x00000000, 5); dr = rotl(dr, 10)\n  ar = fn1(ar, br, cr, dr, er, m[8], 0x00000000, 14); cr = rotl(cr, 10)\n  er = fn1(er, ar, br, cr, dr, m[7], 0x00000000, 6); br = rotl(br, 10)\n  dr = fn1(dr, er, ar, br, cr, m[6], 0x00000000, 8); ar = rotl(ar, 10)\n  cr = fn1(cr, dr, er, ar, br, m[2], 0x00000000, 13); er = rotl(er, 10)\n  br = fn1(br, cr, dr, er, ar, m[13], 0x00000000, 6); dr = rotl(dr, 10)\n  ar = fn1(ar, br, cr, dr, er, m[14], 0x00000000, 5); cr = rotl(cr, 10)\n  er = fn1(er, ar, br, cr, dr, m[0], 0x00000000, 15); br = rotl(br, 10)\n  dr = fn1(dr, er, ar, br, cr, m[3], 0x00000000, 13); ar = rotl(ar, 10)\n  cr = fn1(cr, dr, er, ar, br, m[9], 0x00000000, 11); er = rotl(er, 10)\n  br = fn1(br, cr, dr, er, ar, m[11], 0x00000000, 11); dr = rotl(dr, 10)\n\n  // change state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripemd160/index.js\n// module id = 330\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripemd160/index.js?");

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar Transform = __webpack_require__(94).Transform\nvar inherits = __webpack_require__(3)\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = new Buffer(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    if (encoding !== 'buffer') chunk = new Buffer(chunk, encoding)\n    this.update(chunk)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this._digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = new Buffer(data, encoding || 'binary')\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function (data) {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hash-base/index.js\n// module id = 331\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/hash-base/index.js?");

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(56);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/writable-browser.js\n// module id = 332\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/writable-browser.js?");

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(26);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/duplex-browser.js\n// module id = 333\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/duplex-browser.js?");

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(40).Transform\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/transform.js\n// module id = 334\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/transform.js?");

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(40).PassThrough\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/passthrough.js\n// module id = 335\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/readable-stream/passthrough.js?");

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

eval("var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = __webpack_require__(337)\nexports.sha1 = __webpack_require__(338)\nexports.sha224 = __webpack_require__(339)\nexports.sha256 = __webpack_require__(95)\nexports.sha384 = __webpack_require__(340)\nexports.sha512 = __webpack_require__(96)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/index.js\n// module id = 336\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/index.js?");

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = __webpack_require__(3)\nvar Hash = __webpack_require__(34)\nvar Buffer = __webpack_require__(21).Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/sha.js\n// module id = 337\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/sha.js?");

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = __webpack_require__(3)\nvar Hash = __webpack_require__(34)\nvar Buffer = __webpack_require__(21).Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/sha1.js\n// module id = 338\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/sha1.js?");

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = __webpack_require__(3)\nvar Sha256 = __webpack_require__(95)\nvar Hash = __webpack_require__(34)\nvar Buffer = __webpack_require__(21).Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/sha224.js\n// module id = 339\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/sha224.js?");

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(3)\nvar SHA512 = __webpack_require__(96)\nvar Hash = __webpack_require__(34)\nvar Buffer = __webpack_require__(21).Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sha.js/sha384.js\n// module id = 340\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/sha.js/sha384.js?");

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

eval("var Buffer = __webpack_require__(21).Buffer\nvar Transform = __webpack_require__(94).Transform\nvar StringDecoder = __webpack_require__(57).StringDecoder\nvar inherits = __webpack_require__(3)\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cipher-base/index.js\n// module id = 341\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/cipher-base/index.js?");

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}var _ = __webpack_require__(1);\nvar BN = __webpack_require__(15);\nvar assert = __webpack_require__(2);\nvar types = __webpack_require__(27);var\nSTObject = types.STObject,Hash256 = types.Hash256;var _require =\n__webpack_require__(97),ShaMap = _require.ShaMap;var _require2 =\n__webpack_require__(43),HashPrefix = _require2.HashPrefix;var _require3 =\n__webpack_require__(49),Sha512Half = _require3.Sha512Half;var _require4 =\n__webpack_require__(64),BinarySerializer = _require4.BinarySerializer,serializeObject = _require4.serializeObject;\n\nfunction computeHash(itemizer, itemsJson) {\n  var map = new ShaMap();\n  itemsJson.forEach(function (item) {return map.addItem.apply(map, _toConsumableArray(itemizer(item)));});\n  return map.hash();\n}\n\nfunction transactionItem(json) {\n  assert(json.hash);\n  var index = Hash256.from(json.hash);\n  var item = {\n    hashPrefix: function hashPrefix() {\n      return HashPrefix.transaction;\n    },\n    toBytesSink: function toBytesSink(sink) {\n      var serializer = new BinarySerializer(sink);\n      serializer.writeLengthEncoded(STObject.from(json));\n      serializer.writeLengthEncoded(STObject.from(json.metaData));\n    } };\n\n  return [index, item];\n}\n\nfunction entryItem(json) {\n  var index = Hash256.from(json.index);\n  var bytes = serializeObject(json);\n  var item = {\n    hashPrefix: function hashPrefix() {\n      return HashPrefix.accountStateEntry;\n    },\n    toBytesSink: function toBytesSink(sink) {\n      sink.put(bytes);\n    } };\n\n  return [index, item];\n}\n\nvar transactionTreeHash = _.partial(computeHash, transactionItem);\nvar accountStateHash = _.partial(computeHash, entryItem);\n\nfunction ledgerHash(header) {\n  var hash = new Sha512Half();\n  hash.put(HashPrefix.ledgerHeader);\n  assert(header.parent_close_time !== undefined);\n  assert(header.close_flags !== undefined);\n\n  types.UInt32.from(header.ledger_index).toBytesSink(hash);\n  types.UInt64.from(new BN(header.total_coins)).toBytesSink(hash);\n  types.Hash256.from(header.parent_hash).toBytesSink(hash);\n  types.Hash256.from(header.transaction_hash).toBytesSink(hash);\n  types.Hash256.from(header.account_hash).toBytesSink(hash);\n  types.UInt32.from(header.parent_close_time).toBytesSink(hash);\n  types.UInt32.from(header.close_time).toBytesSink(hash);\n  types.UInt8.from(header.close_time_resolution).toBytesSink(hash);\n  types.UInt8.from(header.close_flags).toBytesSink(hash);\n  return hash.finish();\n}\n\nmodule.exports = {\n  accountStateHash: accountStateHash,\n  transactionTreeHash: transactionTreeHash,\n  ledgerHash: ledgerHash };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/ledger-hashes.js\n// module id = 342\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/ledger-hashes.js?");

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var Decimal = __webpack_require__(47);var _require =\n__webpack_require__(11),bytesToHex = _require.bytesToHex,slice = _require.slice,parseBytes = _require.parseBytes;var _require2 =\n__webpack_require__(27),UInt64 = _require2.UInt64;\nvar BN = __webpack_require__(15);\n\nmodule.exports = {\n  encode: function encode(arg) {\n    var quality = arg instanceof Decimal ? arg : new Decimal(arg);\n    var exponent = quality.e - 15;\n    var qualityString = quality.times('1e' + -exponent).abs().toString();\n    var bytes = new UInt64(new BN(qualityString)).toBytes();\n    bytes[0] = exponent + 100;\n    return bytes;\n  },\n  decode: function decode(arg) {\n    var bytes = slice(parseBytes(arg), -8);\n    var exponent = bytes[0] - 100;\n    var mantissa = new Decimal('0x' + bytesToHex(slice(bytes, 1)));\n    return mantissa.times('1e' + exponent);\n  } };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/quality.js\n// module id = 343\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/quality.js?");

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" /* eslint-disable func-style */\n\nvar _ = __webpack_require__(1);var _require =\n__webpack_require__(27),AccountID = _require.AccountID;\nvar binary = __webpack_require__(64);var\n\nserializeObject =\n\n\n\n\nbinary.serializeObject,bytesToHex = binary.bytesToHex,multiSigningData = binary.multiSigningData,transactionID = binary.transactionID,signingData = binary.signingData;\n\nvar FULL_CANONICAL_SIGNATURE = 0x80000000;\n\nvar toHex = function toHex(v) {return bytesToHex(v);};\nvar getSigner = function getSigner(o) {return AccountID.from(o.Signer.Account);};\nvar signerComparator = function signerComparator(a, b) {return getSigner(a).compareTo(getSigner(b));};\n\nfunction setCanonicalSignatureFlag(tx_json) {\n  tx_json.Flags |= FULL_CANONICAL_SIGNATURE;\n  tx_json.Flags >>>= 0;\n}\n\nfunction serializedBundle(tx_json) {\n  var serialized = serializeObject(tx_json);\n  var hash = transactionID(serialized).toHex();\n  var tx_blob = toHex(serialized);\n  return { tx_json: tx_json, tx_blob: tx_blob, hash: hash };\n}\n\nfunction signFor(tx_json_, keyPair) {var signingAccount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var tx_json = _.clone(tx_json_);\n  tx_json.SigningPubKey = '';\n  setCanonicalSignatureFlag(tx_json);\n  var signerID = signingAccount || keyPair.id();\n  var signature = keyPair.sign(multiSigningData(tx_json, signerID));\n  var signer = {\n    Signer: {\n      SigningPubKey: toHex(keyPair.publicBytes()),\n      TxnSignature: toHex(signature),\n      Account: signerID } };\n\n\n\n  var signers = tx_json.Signers = tx_json.Signers || [];\n  signers.push(signer);\n  signers.sort(signerComparator);\n\n  return serializedBundle(tx_json);\n}\n\nfunction sign(tx_json_, keyPair) {\n  var tx_json = _.clone(tx_json_);\n  setCanonicalSignatureFlag(tx_json);\n\n  tx_json.SigningPubKey = toHex(keyPair.publicBytes());\n  tx_json.TxnSignature = toHex(keyPair.sign(signingData(tx_json)));\n\n  return serializedBundle(tx_json);\n}\n\nmodule.exports = {\n  signFor: signFor,\n  sign: sign };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-binary-codec/distrib/npm/signing.js\n// module id = 344\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-binary-codec/distrib/npm/signing.js?");

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;};var assert = __webpack_require__(2);\nvar coreTypes = __webpack_require__(346);var \nquality = \n\n\n\n\n\n\ncoreTypes.quality;var _coreTypes$binary = coreTypes.binary;var bytesToHex = _coreTypes$binary.bytesToHex;var signingData = _coreTypes$binary.signingData;var signingClaimData = _coreTypes$binary.signingClaimData;var multiSigningData = _coreTypes$binary.multiSigningData;var binaryToJSON = _coreTypes$binary.binaryToJSON;var serializeObject = _coreTypes$binary.serializeObject;var BinaryParser = _coreTypes$binary.BinaryParser;\n\nfunction decodeLedgerData(binary) {\n  assert(typeof binary === 'string', 'binary must be a hex string');\n  var parser = new BinaryParser(binary);\n  return { \n    ledger_index: parser.readUInt32(), \n    total_coins: parser.readType(coreTypes.UInt64).valueOf().toString(), \n    parent_hash: parser.readType(coreTypes.Hash256).toHex(), \n    transaction_hash: parser.readType(coreTypes.Hash256).toHex(), \n    account_hash: parser.readType(coreTypes.Hash256).toHex(), \n    parent_close_time: parser.readUInt32(), \n    close_time: parser.readUInt32(), \n    close_time_resolution: parser.readUInt8(), \n    close_flags: parser.readUInt8() };}\n\n\n\nfunction decode(binary) {\n  assert(typeof binary === 'string', 'binary must be a hex string');\n  return binaryToJSON(binary);}\n\n\nfunction encode(json) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  return bytesToHex(serializeObject(json));}\n\n\nfunction encodeForSigning(json) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  return bytesToHex(signingData(json));}\n\n\nfunction encodeForSigningClaim(json) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  return bytesToHex(signingClaimData(json));}\n\n\nfunction encodeForMultisigning(json, signer) {\n  assert((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object');\n  assert.equal(json.SigningPubKey, '');\n  return bytesToHex(multiSigningData(json, signer));}\n\n\nfunction encodeQuality(value) {\n  assert(typeof value === 'string');\n  return bytesToHex(quality.encode(value));}\n\n\nfunction decodeQuality(value) {\n  assert(typeof value === 'string');\n  return quality.decode(value).toString();}\n\n\nmodule.exports = { \n  decode: decode, \n  encode: encode, \n  encodeForSigning: encodeForSigning, \n  encodeForSigningClaim: encodeForSigningClaim, \n  encodeForMultisigning: encodeForMultisigning, \n  encodeQuality: encodeQuality, \n  decodeQuality: decodeQuality, \n  decodeLedgerData: decodeLedgerData };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/index.js\n// module id = 345\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/index.js?");

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _ = __webpack_require__(1);\nvar enums = __webpack_require__(35);var \nField = enums.Field;\nvar types = __webpack_require__(28);\nvar binary = __webpack_require__(71);var _require = \n__webpack_require__(101);var ShaMap = _require.ShaMap;\nvar ledgerHashes = __webpack_require__(358);\nvar hashes = __webpack_require__(52);\nvar quality = __webpack_require__(359);\nvar signing = __webpack_require__(360);var _require2 = \n__webpack_require__(44);var HashPrefix = _require2.HashPrefix;\n\n\nmodule.exports = _.assign({ \n  hashes: _.assign({}, hashes, ledgerHashes), \n  binary: binary, \n  enums: enums, \n  signing: signing, \n  quality: quality, \n  Field: Field, \n  HashPrefix: HashPrefix, \n  ShaMap: ShaMap }, \n\ntypes);\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/coretypes.js\n// module id = 346\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/coretypes.js?");

/***/ }),
/* 347 */
/***/ (function(module, exports) {

eval("module.exports = {\"TYPES\":{\"Validation\":10003,\"Done\":-1,\"Hash128\":4,\"Blob\":7,\"AccountID\":8,\"Amount\":6,\"Hash256\":5,\"UInt8\":16,\"Vector256\":19,\"STObject\":14,\"Unknown\":-2,\"Transaction\":10001,\"Hash160\":17,\"PathSet\":18,\"LedgerEntry\":10002,\"UInt16\":1,\"NotPresent\":0,\"UInt64\":3,\"UInt32\":2,\"STArray\":15},\"LEDGER_ENTRY_TYPES\":{\"Any\":-3,\"Child\":-2,\"Invalid\":-1,\"AccountRoot\":97,\"DirectoryNode\":100,\"RippleState\":114,\"Ticket\":84,\"SignerList\":83,\"Offer\":111,\"LedgerHashes\":104,\"Amendments\":102,\"FeeSettings\":115,\"Escrow\":117,\"PayChannel\":120,\"Check\":67,\"Nickname\":110,\"Contract\":99,\"GeneratorMap\":103},\"FIELDS\":[[\"Generic\",{\"nth\":0,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Unknown\"}],[\"Invalid\",{\"nth\":-1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Unknown\"}],[\"LedgerEntryType\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt16\"}],[\"TransactionType\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt16\"}],[\"SignerWeight\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt16\"}],[\"Flags\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SourceTag\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"Sequence\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"PreviousTxnLgrSeq\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LedgerSequence\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"CloseTime\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ParentCloseTime\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SigningTime\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"Expiration\",{\"nth\":10,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"TransferRate\",{\"nth\":11,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"WalletSize\",{\"nth\":12,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"OwnerCount\",{\"nth\":13,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"DestinationTag\",{\"nth\":14,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"HighQualityIn\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"HighQualityOut\",{\"nth\":17,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LowQualityIn\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LowQualityOut\",{\"nth\":19,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"QualityIn\",{\"nth\":20,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"QualityOut\",{\"nth\":21,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"StampEscrow\",{\"nth\":22,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"BondAmount\",{\"nth\":23,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LoadFee\",{\"nth\":24,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"OfferSequence\",{\"nth\":25,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"FirstLedgerSequence\",{\"nth\":26,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"LastLedgerSequence\",{\"nth\":27,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"TransactionIndex\",{\"nth\":28,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"OperationLimit\",{\"nth\":29,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ReferenceFeeUnits\",{\"nth\":30,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ReserveBase\",{\"nth\":31,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ReserveIncrement\",{\"nth\":32,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SetFlag\",{\"nth\":33,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"ClearFlag\",{\"nth\":34,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SignerQuorum\",{\"nth\":35,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"CancelAfter\",{\"nth\":36,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"FinishAfter\",{\"nth\":37,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"IndexNext\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"IndexPrevious\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"BookNode\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"OwnerNode\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"BaseFee\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"ExchangeRate\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"LowNode\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"HighNode\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}],[\"EmailHash\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash128\"}],[\"LedgerHash\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"ParentHash\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"TransactionHash\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"AccountHash\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"PreviousTxnID\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"LedgerIndex\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"WalletLocator\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"RootIndex\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"AccountTxnID\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"BookDirectory\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"InvoiceID\",{\"nth\":17,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"Nickname\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"Amendment\",{\"nth\":19,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"TicketID\",{\"nth\":20,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"Digest\",{\"nth\":21,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"hash\",{\"nth\":257,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Hash256\"}],[\"index\",{\"nth\":258,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Hash256\"}],[\"Amount\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"Balance\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"LimitAmount\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"TakerPays\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"TakerGets\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"LowLimit\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"HighLimit\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"Fee\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"SendMax\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"DeliverMin\",{\"nth\":10,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"MinimumOffer\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"RippleEscrow\",{\"nth\":17,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"DeliveredAmount\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Amount\"}],[\"taker_gets_funded\",{\"nth\":258,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Amount\"}],[\"taker_pays_funded\",{\"nth\":259,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Amount\"}],[\"PublicKey\",{\"nth\":1,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MessageKey\",{\"nth\":2,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"SigningPubKey\",{\"nth\":3,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"TxnSignature\",{\"nth\":4,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"Blob\"}],[\"Generator\",{\"nth\":5,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"Signature\",{\"nth\":6,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"Blob\"}],[\"Domain\",{\"nth\":7,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"FundCode\",{\"nth\":8,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"RemoveCode\",{\"nth\":9,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"ExpireCode\",{\"nth\":10,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"CreateCode\",{\"nth\":11,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MemoType\",{\"nth\":12,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MemoData\",{\"nth\":13,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MemoFormat\",{\"nth\":14,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"Fulfillment\",{\"nth\":16,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"Condition\",{\"nth\":17,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Blob\"}],[\"MasterSignature\",{\"nth\":18,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"Blob\"}],[\"Account\",{\"nth\":1,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Owner\",{\"nth\":2,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Destination\",{\"nth\":3,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Issuer\",{\"nth\":4,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"Target\",{\"nth\":7,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"RegularKey\",{\"nth\":8,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"AccountID\"}],[\"ObjectEndMarker\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"TransactionMetaData\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"CreatedNode\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"DeletedNode\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"ModifiedNode\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"PreviousFields\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"FinalFields\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"NewFields\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"TemplateEntry\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"Memo\",{\"nth\":10,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"SignerEntry\",{\"nth\":11,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"Signer\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"Majority\",{\"nth\":18,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STObject\"}],[\"ArrayEndMarker\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Signers\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":false,\"type\":\"STArray\"}],[\"SignerEntries\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Template\",{\"nth\":5,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Necessary\",{\"nth\":6,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Sufficient\",{\"nth\":7,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"AffectedNodes\",{\"nth\":8,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Memos\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"Majorities\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"STArray\"}],[\"CloseResolution\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"Method\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"TransactionResult\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"TakerPaysCurrency\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"TakerPaysIssuer\",{\"nth\":2,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"TakerGetsCurrency\",{\"nth\":3,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"TakerGetsIssuer\",{\"nth\":4,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash160\"}],[\"Paths\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"PathSet\"}],[\"Indexes\",{\"nth\":1,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Vector256\"}],[\"Hashes\",{\"nth\":2,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Vector256\"}],[\"Amendments\",{\"nth\":3,\"isVLEncoded\":true,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Vector256\"}],[\"Transaction\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Transaction\"}],[\"LedgerEntry\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"LedgerEntry\"}],[\"Validation\",{\"nth\":1,\"isVLEncoded\":false,\"isSerialized\":false,\"isSigningField\":false,\"type\":\"Validation\"}],[\"SignerListID\",{\"nth\":38,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"SettleDelay\",{\"nth\":39,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt32\"}],[\"Channel\",{\"nth\":22,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"ConsensusHash\",{\"nth\":23,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"CheckID\",{\"nth\":24,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"Hash256\"}],[\"TickSize\",{\"nth\":16,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt8\"}],[\"DestinationNode\",{\"nth\":9,\"isVLEncoded\":false,\"isSerialized\":true,\"isSigningField\":true,\"type\":\"UInt64\"}]],\"TRANSACTION_RESULTS\":{\"telNO_DST_PARTIAL\":-393,\"temBAD_SRC_ACCOUNT\":-281,\"tefPAST_SEQ\":-189,\"terNO_ACCOUNT\":-96,\"temREDUNDANT\":-275,\"tefCREATED\":-194,\"temDST_IS_SRC\":-279,\"terRETRY\":-99,\"temINVALID_FLAG\":-276,\"temBAD_SEND_XRP_LIMIT\":-288,\"terNO_LINE\":-94,\"tefBAD_AUTH\":-196,\"temBAD_EXPIRATION\":-295,\"temBAD_SEND_XRP_NO_DIRECT\":-286,\"temBAD_SEND_XRP_PATHS\":-284,\"tefBAD_LEDGER\":-195,\"tefNO_AUTH_REQUIRED\":-190,\"terOWNERS\":-93,\"terLAST\":-91,\"terNO_RIPPLE\":-90,\"temBAD_FEE\":-294,\"terPRE_SEQ\":-92,\"tefMASTER_DISABLED\":-187,\"temBAD_CURRENCY\":-296,\"tefDST_TAG_NEEDED\":-193,\"temBAD_SIGNATURE\":-282,\"tefFAILURE\":-199,\"telBAD_PATH_COUNT\":-397,\"temBAD_TRANSFER_RATE\":-280,\"tefWRONG_PRIOR\":-188,\"telBAD_DOMAIN\":-398,\"temBAD_AMOUNT\":-298,\"temBAD_AUTH_MASTER\":-297,\"temBAD_LIMIT\":-292,\"temBAD_ISSUER\":-293,\"telBAD_PUBLIC_KEY\":-396,\"tefBAD_ADD_AUTH\":-197,\"temBAD_OFFER\":-291,\"temBAD_SEND_XRP_PARTIAL\":-285,\"temDST_NEEDED\":-278,\"tefALREADY\":-198,\"temUNCERTAIN\":-272,\"telLOCAL_ERROR\":-399,\"temREDUNDANT_SEND_MAX\":-274,\"tefINTERNAL\":-191,\"temBAD_PATH_LOOP\":-289,\"tefEXCEPTION\":-192,\"temRIPPLE_EMPTY\":-273,\"telINSUF_FEE_P\":-394,\"temBAD_SEQUENCE\":-283,\"tefMAX_LEDGER\":-186,\"terFUNDS_SPENT\":-98,\"temBAD_SEND_XRP_MAX\":-287,\"telFAILED_PROCESSING\":-395,\"terINSUF_FEE_B\":-97,\"tesSUCCESS\":0,\"temBAD_PATH\":-290,\"temMALFORMED\":-299,\"temUNKNOWN\":-271,\"temINVALID\":-277,\"terNO_AUTH\":-95,\"temBAD_TICK_SIZE\":-270,\"tecCLAIM\":100,\"tecPATH_PARTIAL\":101,\"tecUNFUNDED_ADD\":102,\"tecUNFUNDED_OFFER\":103,\"tecUNFUNDED_PAYMENT\":104,\"tecFAILED_PROCESSING\":105,\"tecDIR_FULL\":121,\"tecINSUF_RESERVE_LINE\":122,\"tecINSUF_RESERVE_OFFER\":123,\"tecNO_DST\":124,\"tecNO_DST_INSUF_XRP\":125,\"tecNO_LINE_INSUF_RESERVE\":126,\"tecNO_LINE_REDUNDANT\":127,\"tecPATH_DRY\":128,\"tecUNFUNDED\":129,\"tecNO_ALTERNATIVE_KEY\":130,\"tecNO_REGULAR_KEY\":131,\"tecOWNERS\":132,\"tecNO_ISSUER\":133,\"tecNO_AUTH\":134,\"tecNO_LINE\":135,\"tecINSUFF_FEE\":136,\"tecFROZEN\":137,\"tecNO_TARGET\":138,\"tecNO_PERMISSION\":139,\"tecNO_ENTRY\":140,\"tecINSUFFICIENT_RESERVE\":141,\"tecNEED_MASTER_KEY\":142,\"tecDST_TAG_NEEDED\":143,\"tecINTERNAL\":144,\"tecOVERSIZE\":145,\"tecCRYPTOCONDITION_ERROR\":146,\"tecINVARIANT_FAILED\":147,\"tecEXPIRED\":148},\"TRANSACTION_TYPES\":{\"Invalid\":-1,\"Payment\":0,\"EscrowCreate\":1,\"EscrowFinish\":2,\"AccountSet\":3,\"EscrowCancel\":4,\"SetRegularKey\":5,\"NickNameSet\":6,\"OfferCreate\":7,\"OfferCancel\":8,\"Contract\":9,\"TicketCreate\":10,\"TicketCancel\":11,\"SignerListSet\":12,\"PaymentChannelCreate\":13,\"PaymentChannelFund\":14,\"PaymentChannelClaim\":15,\"CheckCreate\":16,\"CheckCash\":17,\"CheckCancel\":18,\"TrustSet\":20,\"EnableAmendment\":100,\"SetFee\":101}}\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/enums/definitions.json\n// module id = 347\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/enums/definitions.json?");

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;};function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}var _ = __webpack_require__(1);\nvar assert = __webpack_require__(2);\nvar BN = __webpack_require__(15);\nvar Decimal = __webpack_require__(47);\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(22);var SerializedType = _require.SerializedType;var _require2 = \n__webpack_require__(12);var bytesToHex = _require2.bytesToHex;var _require3 = \n__webpack_require__(70);var Currency = _require3.Currency;var _require4 = \n__webpack_require__(66);var AccountID = _require4.AccountID;var _require5 = \n__webpack_require__(98);var UInt64 = _require5.UInt64;\n\nvar MIN_IOU_EXPONENT = -96;\nvar MAX_IOU_EXPONENT = 80;\nvar MAX_IOU_PRECISION = 16;\nvar MIN_IOU_MANTISSA = '1000' + '0000' + '0000' + '0000'; // 16 digits\nvar MAX_IOU_MANTISSA = '9999' + '9999' + '9999' + '9999'; // ..\nvar MAX_IOU = new Decimal(MAX_IOU_MANTISSA + 'e' + MAX_IOU_EXPONENT);\nvar MIN_IOU = new Decimal(MIN_IOU_MANTISSA + 'e' + MIN_IOU_EXPONENT);\nvar DROPS_PER_XRP = new Decimal('1e6');\nvar MAX_NETWORK_DROPS = new Decimal('1e17');\nvar MIN_XRP = new Decimal('1e-6');\nvar MAX_XRP = MAX_NETWORK_DROPS.dividedBy(DROPS_PER_XRP);\n\n// Never use exponential form\nDecimal.config({ \n  toExpPos: MAX_IOU_EXPONENT + MAX_IOU_PRECISION, \n  toExpNeg: MIN_IOU_EXPONENT - MAX_IOU_PRECISION });\n\n\nvar AMOUNT_PARAMETERS_DESCRIPTION = '\\nNative values must be described in drops, a million of which equal one XRP.\\nThis must be an integer number, with the absolute value not exceeding ' + \n\n\nMAX_NETWORK_DROPS + '\\n\\nIOU values must have a maximum precision of ' + \n\nMAX_IOU_PRECISION + ' significant digits. They are serialized as\\na canonicalised mantissa and exponent. \\n\\nThe valid range for a mantissa is between ' + \n\n\nMIN_IOU_MANTISSA + ' and ' + \nMAX_IOU_MANTISSA + '\\nThe exponent must be >= ' + \nMIN_IOU_EXPONENT + ' and <= ' + MAX_IOU_EXPONENT + '\\n\\nThus the largest serializable IOU value is:\\n' + \n\n\nMAX_IOU.toString() + '\\n\\nAnd the smallest:\\n' + \n\n\nMIN_IOU.toString() + '\\n';\n\n\nfunction isDefined(val) {\n  return !_.isUndefined(val);}\n\n\nfunction raiseIllegalAmountError(value) {\n  throw new Error(value.toString() + ' is an illegal amount\\n' + \n  AMOUNT_PARAMETERS_DESCRIPTION);}\n\n\nvar parsers = { \n  string: function string(str) {\n    if (!str.match(/\\d+/)) {\n      raiseIllegalAmountError(str);}\n\n    return [new Decimal(str).dividedBy(DROPS_PER_XRP), Currency.XRP];}, \n\n  object: function object(_object) {\n    assert(isDefined(_object.currency), 'currency must be defined');\n    assert(isDefined(_object.issuer), 'issuer must be defined');\n    return [new Decimal(_object.value), \n    Currency.from(_object.currency), \n    AccountID.from(_object.issuer)];} };\n\n\n\nvar Amount = makeClass({ \n  Amount: function Amount(value, currency, issuer) {\n    this.value = value || new Decimal('0');\n    this.currency = currency || Currency.XRP;\n    this.issuer = issuer || null;\n    this.assertValueIsValid();}, \n\n  mixins: SerializedType, \n  statics: { \n    from: function from(value) {\n      if (value instanceof this) {\n        return value;}\n\n      var parser = parsers[typeof value === 'undefined' ? 'undefined' : _typeof(value)];\n      if (parser) {\n        return new (Function.prototype.bind.apply(this, [null].concat(_toConsumableArray(parser(value)))))();}\n\n      throw new Error('unsupported value: ' + value);}, \n\n    fromParser: function fromParser(parser) {\n      var mantissa = parser.read(8);\n      var b1 = mantissa[0];\n      var b2 = mantissa[1];\n\n      var isIOU = b1 & 0x80;\n      var isPositive = b1 & 0x40;\n      var sign = isPositive ? '' : '-';\n\n      if (isIOU) {\n        mantissa[0] = 0;\n        var currency = parser.readType(Currency);\n        var issuer = parser.readType(AccountID);\n        var exponent = ((b1 & 0x3F) << 2) + ((b2 & 0xff) >> 6) - 97;\n        mantissa[1] &= 0x3F;\n        // decimal.js won't accept e notation with hex\n        var value = new Decimal(sign + '0x' + bytesToHex(mantissa)).\n        times('1e' + exponent);\n        return new this(value, currency, issuer);}\n\n\n      mantissa[0] &= 0x3F;\n      var drops = new Decimal(sign + '0x' + bytesToHex(mantissa));\n      var xrpValue = drops.dividedBy(DROPS_PER_XRP);\n      return new this(xrpValue, Currency.XRP);} }, \n\n\n  assertValueIsValid: function assertValueIsValid() {\n    // zero is always a valid amount value\n    if (!this.isZero()) {\n      if (this.isNative()) {\n        var abs = this.value.abs();\n        if (abs.lt(MIN_XRP) || abs.gt(MAX_XRP)) {\n          // value is in XRP scale, but show the value in canonical json form\n          raiseIllegalAmountError(this.value.times(DROPS_PER_XRP));}} else \n\n      {\n        var p = this.value.precision();\n        var e = this.exponent();\n        if (p > MAX_IOU_PRECISION || \n        e > MAX_IOU_EXPONENT || \n        e < MIN_IOU_EXPONENT) {\n          raiseIllegalAmountError(this.value);}}}}, \n\n\n\n\n  isNative: function isNative() {\n    return this.currency.isNative();}, \n\n  mantissa: function mantissa() {\n    return new UInt64(\n    new BN(this.value.times('1e' + -this.exponent()).abs().toString()));}, \n\n  isZero: function isZero() {\n    return this.value.isZero();}, \n\n  exponent: function exponent() {\n    return this.isNative() ? -6 : this.value.e - 15;}, \n\n  valueString: function valueString() {\n    return (this.isNative() ? this.value.times(DROPS_PER_XRP) : this.value).\n    toString();}, \n\n  toBytesSink: function toBytesSink(sink) {\n    var isNative = this.isNative();\n    var notNegative = !this.value.isNegative();\n    var mantissa = this.mantissa().toBytes();\n\n    if (isNative) {\n      mantissa[0] |= notNegative ? 0x40 : 0;\n      sink.put(mantissa);} else \n    {\n      mantissa[0] |= 0x80;\n      if (!this.isZero()) {\n        if (notNegative) {\n          mantissa[0] |= 0x40;}\n\n        var exponent = this.value.e - 15;\n        var exponentByte = 97 + exponent;\n        mantissa[0] |= exponentByte >>> 2;\n        mantissa[1] |= (exponentByte & 0x03) << 6;}\n\n      sink.put(mantissa);\n      this.currency.toBytesSink(sink);\n      this.issuer.toBytesSink(sink);}}, \n\n\n  toJSON: function toJSON() {\n    var valueString = this.valueString();\n    if (this.isNative()) {\n      return valueString;}\n\n    return { \n      value: valueString, \n      currency: this.currency.toJSON(), \n      issuer: this.issuer.toJSON() };} });\n\n\n\n\nmodule.exports = { \n  Amount: Amount };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/amount.js\n// module id = 348\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/amount.js?");

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(12);var parseBytes = _require.parseBytes;var _require2 = \n__webpack_require__(22);var SerializedType = _require2.SerializedType;\n\nvar Blob = makeClass({ \n  mixins: SerializedType, \n  Blob: function Blob(bytes) {\n    if (bytes) {\n      this._bytes = parseBytes(bytes, Uint8Array);} else \n    {\n      this._bytes = new Uint8Array(0);}}, \n\n\n  statics: { \n    fromParser: function fromParser(parser, hint) {\n      return new this(parser.read(hint));}, \n\n    from: function from(value) {\n      if (value instanceof this) {\n        return value;}\n\n      return new this(value);} } });\n\n\n\n\nmodule.exports = { \n  Blob: Blob };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/blob.js\n// module id = 349\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/blob.js?");

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(68);var Hash = _require.Hash;\n\nvar Hash128 = makeClass({ \n  inherits: Hash, \n  statics: { width: 16 } });\n\n\nmodule.exports = { \n  Hash128: Hash128 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash-128.js\n// module id = 350\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/hash-128.js?");

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" /* eslint-disable no-unused-expressions */\n\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(22);var SerializedType = _require.SerializedType;var ensureArrayLikeIs = _require.ensureArrayLikeIs;var _require2 = \n__webpack_require__(70);var Currency = _require2.Currency;var _require3 = \n__webpack_require__(66);var AccountID = _require3.AccountID;\n\nvar PATHSET_END_BYTE = 0x00;\nvar PATH_SEPARATOR_BYTE = 0xFF;\nvar TYPE_ACCOUNT = 0x01;\nvar TYPE_CURRENCY = 0x10;\nvar TYPE_ISSUER = 0x20;\n\nvar Hop = makeClass({ \n  statics: { \n    from: function from(value) {\n      if (value instanceof this) {\n        return value;}\n\n      var hop = new Hop();\n      value.issuer && (hop.issuer = AccountID.from(value.issuer));\n      value.account && (hop.account = AccountID.from(value.account));\n      value.currency && (hop.currency = Currency.from(value.currency));\n      return hop;}, \n\n    parse: function parse(parser, type) {\n      var hop = new Hop();\n      type & TYPE_ACCOUNT && (hop.account = AccountID.fromParser(parser));\n      type & TYPE_CURRENCY && (hop.currency = Currency.fromParser(parser));\n      type & TYPE_ISSUER && (hop.issuer = AccountID.fromParser(parser));\n      return hop;} }, \n\n\n  toJSON: function toJSON() {\n    var type = this.type();\n    var ret = {};\n    type & TYPE_ACCOUNT && (ret.account = this.account.toJSON());\n    type & TYPE_ISSUER && (ret.issuer = this.issuer.toJSON());\n    type & TYPE_CURRENCY && (ret.currency = this.currency.toJSON());\n    return ret;}, \n\n  type: function type() {\n    var type = 0;\n    this.issuer && (type += TYPE_ISSUER);\n    this.account && (type += TYPE_ACCOUNT);\n    this.currency && (type += TYPE_CURRENCY);\n    return type;} });\n\n\n\nvar Path = makeClass({ \n  inherits: Array, \n  statics: { \n    from: function from(value) {\n      return ensureArrayLikeIs(Path, value).withChildren(Hop);} }, \n\n\n  toJSON: function toJSON() {\n    return this.map(function (k) {return k.toJSON();});} });\n\n\n\nvar PathSet = makeClass({ \n  mixins: SerializedType, \n  inherits: Array, \n  statics: { \n    from: function from(value) {\n      return ensureArrayLikeIs(PathSet, value).withChildren(Path);}, \n\n    fromParser: function fromParser(parser) {\n      var pathSet = new this();\n      var path = void 0;\n      while (!parser.end()) {\n        var type = parser.readUInt8();\n        if (type === PATHSET_END_BYTE) {\n          break;}\n\n        if (type === PATH_SEPARATOR_BYTE) {\n          path = null;\n          continue;}\n\n        if (!path) {\n          path = new Path();\n          pathSet.push(path);}\n\n        path.push(Hop.parse(parser, type));}\n\n      return pathSet;} }, \n\n\n  toJSON: function toJSON() {\n    return this.map(function (k) {return k.toJSON();});}, \n\n  toBytesSink: function toBytesSink(sink) {\n    var n = 0;\n    this.forEach(function (path) {\n      if (n++ !== 0) {\n        sink.put([PATH_SEPARATOR_BYTE]);}\n\n      path.forEach(function (hop) {\n        sink.put([hop.type()]);\n        hop.account && hop.account.toBytesSink(sink);\n        hop.currency && hop.currency.toBytesSink(sink);\n        hop.issuer && hop.issuer.toBytesSink(sink);});});\n\n\n    sink.put([PATHSET_END_BYTE]);} });\n\n\n\nmodule.exports = { \n  PathSet: PathSet };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/path-set.js\n// module id = 351\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/path-set.js?");

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(22);var ensureArrayLikeIs = _require.ensureArrayLikeIs;var SerializedType = _require.SerializedType;var _require2 = \n__webpack_require__(35);var Field = _require2.Field;var _require3 = \n__webpack_require__(100);var STObject = _require3.STObject;var \nArrayEndMarker = Field.ArrayEndMarker;\n\nvar STArray = makeClass({ \n  mixins: SerializedType, \n  inherits: Array, \n  statics: { \n    fromParser: function fromParser(parser) {\n      var array = new STArray();\n      while (!parser.end()) {\n        var field = parser.readField();\n        if (field === ArrayEndMarker) {\n          break;}\n\n        var outer = new STObject();\n        outer[field] = parser.readFieldValue(field);\n        array.push(outer);}\n\n      return array;}, \n\n    from: function from(value) {\n      return ensureArrayLikeIs(STArray, value).withChildren(STObject);} }, \n\n\n  toJSON: function toJSON() {\n    return this.map(function (v) {return v.toJSON();});}, \n\n  toBytesSink: function toBytesSink(sink) {\n    this.forEach(function (so) {return so.toBytesSink(sink);});} });\n\n\n\nmodule.exports = { \n  STArray: STArray };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/st-array.js\n// module id = 352\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/st-array.js?");

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(51);var UInt = _require.UInt;\n\nvar UInt16 = makeClass({ \n  inherits: UInt, \n  statics: { width: 2 } });\n\n\nmodule.exports = { \n  UInt16: UInt16 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-16.js\n// module id = 353\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-16.js?");

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(51);var UInt = _require.UInt;\n\nvar UInt32 = makeClass({ \n  inherits: UInt, \n  statics: { width: 4 } });\n\n\nmodule.exports = { \n  UInt32: UInt32 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-32.js\n// module id = 354\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-32.js?");

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(51);var UInt = _require.UInt;\n\nvar UInt8 = makeClass({ \n  inherits: UInt, \n  statics: { width: 1 } });\n\n\nmodule.exports = { \n  UInt8: UInt8 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-8.js\n// module id = 355\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/uint-8.js?");

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var makeClass = __webpack_require__(6);var _require = \n__webpack_require__(99);var Hash256 = _require.Hash256;var _require2 = \n__webpack_require__(22);var ensureArrayLikeIs = _require2.ensureArrayLikeIs;var SerializedType = _require2.SerializedType;\n\nvar Vector256 = makeClass({ \n  mixins: SerializedType, \n  inherits: Array, \n  statics: { \n    fromParser: function fromParser(parser, hint) {\n      var vector256 = new this();\n      var bytes = hint !== null ? hint : parser.size() - parser.pos();\n      var hashes = bytes / 32;\n      for (var i = 0; i < hashes; i++) {\n        vector256.push(Hash256.fromParser(parser));}\n\n      return vector256;}, \n\n    from: function from(value) {\n      return ensureArrayLikeIs(Vector256, value).withChildren(Hash256);} }, \n\n\n  toBytesSink: function toBytesSink(sink) {\n    this.forEach(function (h) {return h.toBytesSink(sink);});}, \n\n  toJSON: function toJSON() {\n    return this.map(function (hash) {return hash.toJSON();});} });\n\n\n\nmodule.exports = { \n  Vector256: Vector256 };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/vector-256.js\n// module id = 356\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/types/vector-256.js?");

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assert = __webpack_require__(2);\nvar makeClass = __webpack_require__(6);var _require = \n__webpack_require__(35);var Field = _require.Field;var _require2 = \n__webpack_require__(12);var slice = _require2.slice;var parseBytes = _require2.parseBytes;\n\nvar BinaryParser = makeClass({ \n  BinaryParser: function BinaryParser(buf) {\n    this._buf = parseBytes(buf, Uint8Array);\n    this._length = this._buf.length;\n    this._cursor = 0;}, \n\n  skip: function skip(n) {\n    this._cursor += n;}, \n\n  read: function read(n) {var to = arguments.length <= 1 || arguments[1] === undefined ? Uint8Array : arguments[1];\n    var start = this._cursor;\n    var end = this._cursor + n;\n    assert(end <= this._buf.length);\n    this._cursor = end;\n    return slice(this._buf, start, end, to);}, \n\n  readUIntN: function readUIntN(n) {\n    return this.read(n, Array).reduce(function (a, b) {return a << 8 | b;}) >>> 0;}, \n\n  readUInt8: function readUInt8() {\n    return this._buf[this._cursor++];}, \n\n  readUInt16: function readUInt16() {\n    return this.readUIntN(2);}, \n\n  readUInt32: function readUInt32() {\n    return this.readUIntN(4);}, \n\n  pos: function pos() {\n    return this._cursor;}, \n\n  size: function size() {\n    return this._buf.length;}, \n\n  end: function end(customEnd) {\n    var cursor = this.pos();\n    return cursor >= this._length || customEnd !== null && \n    cursor >= customEnd;}, \n\n  readVL: function readVL() {\n    return this.read(this.readVLLength());}, \n\n  readVLLength: function readVLLength() {\n    var b1 = this.readUInt8();\n    if (b1 <= 192) {\n      return b1;} else \n    if (b1 <= 240) {\n      var b2 = this.readUInt8();\n      return 193 + (b1 - 193) * 256 + b2;} else \n    if (b1 <= 254) {\n      var _b = this.readUInt8();\n      var b3 = this.readUInt8();\n      return 12481 + (b1 - 241) * 65536 + _b * 256 + b3;}\n\n    throw new Error('Invalid varint length indicator');}, \n\n  readFieldOrdinal: function readFieldOrdinal() {\n    var tagByte = this.readUInt8();\n    var type = (tagByte & 0xF0) >>> 4 || this.readUInt8();\n    var nth = tagByte & 0x0F || this.readUInt8();\n    return type << 16 | nth;}, \n\n  readField: function readField() {\n    return Field.from(this.readFieldOrdinal());}, \n\n  readType: function readType(type) {\n    return type.fromParser(this);}, \n\n  typeForField: function typeForField(field) {\n    return field.associatedType;}, \n\n  readFieldValue: function readFieldValue(field) {\n    var kls = this.typeForField(field);\n    if (!kls) {\n      throw new Error('unsupported: (' + field.name + ', ' + field.type.name + ')');}\n\n    var sizeHint = field.isVLEncoded ? this.readVLLength() : null;\n    var value = kls.fromParser(this, sizeHint);\n    if (value === undefined) {\n      throw new Error('fromParser for (' + \n      field.name + ', ' + field.type.name + ') -> undefined ');}\n\n    return value;}, \n\n  readFieldAndValue: function readFieldAndValue() {\n    var field = this.readField();\n    return [field, this.readFieldValue(field)];} });\n\n\n\n\nmodule.exports = { \n  BinaryParser: BinaryParser };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/serdes/binary-parser.js\n// module id = 357\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/serdes/binary-parser.js?");

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}var _ = __webpack_require__(1);\nvar BN = __webpack_require__(15);\nvar assert = __webpack_require__(2);\nvar types = __webpack_require__(28);var \nSTObject = types.STObject;var Hash256 = types.Hash256;var _require = \n__webpack_require__(101);var ShaMap = _require.ShaMap;var _require2 = \n__webpack_require__(44);var HashPrefix = _require2.HashPrefix;var _require3 = \n__webpack_require__(52);var Sha512Half = _require3.Sha512Half;var _require4 = \n__webpack_require__(71);var BinarySerializer = _require4.BinarySerializer;var serializeObject = _require4.serializeObject;\n\nfunction computeHash(itemizer, itemsJson) {\n  var map = new ShaMap();\n  itemsJson.forEach(function (item) {return map.addItem.apply(map, _toConsumableArray(itemizer(item)));});\n  return map.hash();}\n\n\nfunction transactionItem(json) {\n  assert(json.hash);\n  var index = Hash256.from(json.hash);\n  var item = { \n    hashPrefix: function hashPrefix() {\n      return HashPrefix.transaction;}, \n\n    toBytesSink: function toBytesSink(sink) {\n      var serializer = new BinarySerializer(sink);\n      serializer.writeLengthEncoded(STObject.from(json));\n      serializer.writeLengthEncoded(STObject.from(json.metaData));} };\n\n\n  return [index, item];}\n\n\nfunction entryItem(json) {\n  var index = Hash256.from(json.index);\n  var bytes = serializeObject(json);\n  var item = { \n    hashPrefix: function hashPrefix() {\n      return HashPrefix.accountStateEntry;}, \n\n    toBytesSink: function toBytesSink(sink) {\n      sink.put(bytes);} };\n\n\n  return [index, item];}\n\n\nvar transactionTreeHash = _.partial(computeHash, transactionItem);\nvar accountStateHash = _.partial(computeHash, entryItem);\n\nfunction ledgerHash(header) {\n  var hash = new Sha512Half();\n  hash.put(HashPrefix.ledgerHeader);\n  assert(header.parent_close_time !== undefined);\n  assert(header.close_flags !== undefined);\n\n  types.UInt32.from(header.ledger_index).toBytesSink(hash);\n  types.UInt64.from(new BN(header.total_coins)).toBytesSink(hash);\n  types.Hash256.from(header.parent_hash).toBytesSink(hash);\n  types.Hash256.from(header.transaction_hash).toBytesSink(hash);\n  types.Hash256.from(header.account_hash).toBytesSink(hash);\n  types.UInt32.from(header.parent_close_time).toBytesSink(hash);\n  types.UInt32.from(header.close_time).toBytesSink(hash);\n  types.UInt8.from(header.close_time_resolution).toBytesSink(hash);\n  types.UInt8.from(header.close_flags).toBytesSink(hash);\n  return hash.finish();}\n\n\nmodule.exports = { \n  accountStateHash: accountStateHash, \n  transactionTreeHash: transactionTreeHash, \n  ledgerHash: ledgerHash };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/ledger-hashes.js\n// module id = 358\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/ledger-hashes.js?");

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var Decimal = __webpack_require__(47);var _require = \n__webpack_require__(12);var bytesToHex = _require.bytesToHex;var slice = _require.slice;var parseBytes = _require.parseBytes;var _require2 = \n__webpack_require__(28);var UInt64 = _require2.UInt64;\nvar BN = __webpack_require__(15);\n\nmodule.exports = { \n  encode: function encode(arg) {\n    var quality = arg instanceof Decimal ? arg : new Decimal(arg);\n    var exponent = quality.e - 15;\n    var qualityString = quality.times('1e' + -exponent).abs().toString();\n    var bytes = new UInt64(new BN(qualityString)).toBytes();\n    bytes[0] = exponent + 100;\n    return bytes;}, \n\n  decode: function decode(arg) {\n    var bytes = slice(parseBytes(arg), -8);\n    var exponent = bytes[0] - 100;\n    var mantissa = new Decimal('0x' + bytesToHex(slice(bytes, 1)));\n    return mantissa.times('1e' + exponent);} };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/quality.js\n// module id = 359\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/quality.js?");

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" /* eslint-disable func-style */\n\nvar _ = __webpack_require__(1);var _require = \n__webpack_require__(28);var AccountID = _require.AccountID;\nvar binary = __webpack_require__(71);var \n\nserializeObject = \n\n\n\n\nbinary.serializeObject;var bytesToHex = binary.bytesToHex;var multiSigningData = binary.multiSigningData;var transactionID = binary.transactionID;var signingData = binary.signingData;\n\nvar FULL_CANONICAL_SIGNATURE = 0x80000000;\n\nvar toHex = function toHex(v) {return bytesToHex(v);};\nvar getSigner = function getSigner(o) {return AccountID.from(o.Signer.Account);};\nvar signerComparator = function signerComparator(a, b) {return getSigner(a).compareTo(getSigner(b));};\n\nfunction setCanonicalSignatureFlag(tx_json) {\n  tx_json.Flags |= FULL_CANONICAL_SIGNATURE;\n  tx_json.Flags >>>= 0;}\n\n\nfunction serializedBundle(tx_json) {\n  var serialized = serializeObject(tx_json);\n  var hash = transactionID(serialized).toHex();\n  var tx_blob = toHex(serialized);\n  return { tx_json: tx_json, tx_blob: tx_blob, hash: hash };}\n\n\nfunction signFor(tx_json_, keyPair) {var signingAccount = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n  var tx_json = _.clone(tx_json_);\n  tx_json.SigningPubKey = '';\n  setCanonicalSignatureFlag(tx_json);\n  var signerID = signingAccount || keyPair.id();\n  var signature = keyPair.sign(multiSigningData(tx_json, signerID));\n  var signer = { \n    Signer: { \n      SigningPubKey: toHex(keyPair.publicBytes()), \n      TxnSignature: toHex(signature), \n      Account: signerID } };\n\n\n\n  var signers = tx_json.Signers = tx_json.Signers || [];\n  signers.push(signer);\n  signers.sort(signerComparator);\n\n  return serializedBundle(tx_json);}\n\n\nfunction sign(tx_json_, keyPair) {\n  var tx_json = _.clone(tx_json_);\n  setCanonicalSignatureFlag(tx_json);\n\n  tx_json.SigningPubKey = toHex(keyPair.publicBytes());\n  tx_json.TxnSignature = toHex(keyPair.sign(signingData(tx_json)));\n\n  return serializedBundle(tx_json);}\n\n\nmodule.exports = { \n  signFor: signFor, \n  sign: sign };\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/signing.js\n// module id = 360\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/node_modules/ripple-binary-codec/distrib/npm/signing.js?");

/***/ }),
/* 361 */
/***/ (function(module, exports) {

eval("\n/**\n * Ripple ledger namespace prefixes.\n *\n * The Ripple ledger is a key-value store. In order to avoid name collisions,\n * names are partitioned into namespaces.\n *\n * Each namespace is just a single character prefix.\n */\nmodule.exports = {\n  account        : 'a',\n  dirNode        : 'd',\n  generatorMap   : 'g',\n  rippleState    : 'r',\n  offer          : 'o',  // Entry for an offer.\n  ownerDir       : 'O',  // Directory of things owned by an account.\n  bookDir        : 'B',  // Directory of order books.\n  contract       : 'c',\n  skipList       : 's',\n  amendment      : 'f',\n  feeSettings    : 'e',\n  signerList     : 'S',\n  escrow         : 'u',\n  paychan        : 'x'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ripple-hashes/src/ledgerspaces.js\n// module id = 361\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/ripple-hashes/src/ledgerspaces.js?");

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst common_1 = __webpack_require__(0);\nconst account_trustline_1 = __webpack_require__(363);\nfunction currencyFilter(currency, trustline) {\n    return currency === null || trustline.specification.currency === currency;\n}\nfunction getTrustlines(address, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getTrustlines({ address, options });\n        const ledgerVersion = yield this.getLedgerVersion();\n        // 2. Make Request\n        const responses = yield this._requestAll('account_lines', {\n            account: address,\n            ledger_index: ledgerVersion,\n            limit: options.limit,\n            peer: options.counterparty\n        });\n        // 3. Return Formatted Response\n        const trustlines = _.flatMap(responses, response => response.lines);\n        return trustlines.map(account_trustline_1.default).filter(trustline => {\n            return currencyFilter(options.currency || null, trustline);\n        });\n    });\n}\nexports.default = getTrustlines;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/trustlines.ts\n// module id = 362\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/trustlines.ts?");

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\n// rippled 'account_lines' returns a different format for\n// trustlines than 'tx'\nfunction parseAccountTrustline(trustline) {\n    const specification = common_1.removeUndefined({\n        limit: trustline.limit,\n        currency: trustline.currency,\n        counterparty: trustline.account,\n        qualityIn: utils_1.parseQuality(trustline.quality_in) || undefined,\n        qualityOut: utils_1.parseQuality(trustline.quality_out) || undefined,\n        ripplingDisabled: trustline.no_ripple || undefined,\n        frozen: trustline.freeze || undefined,\n        authorized: trustline.authorized || undefined\n    });\n    // rippled doesn't provide the counterparty's qualities\n    const counterparty = common_1.removeUndefined({\n        limit: trustline.limit_peer,\n        ripplingDisabled: trustline.no_ripple_peer || undefined,\n        frozen: trustline.freeze_peer || undefined,\n        authorized: trustline.peer_authorized || undefined\n    });\n    const state = {\n        balance: trustline.balance\n    };\n    return { specification, counterparty, state };\n}\nexports.default = parseAccountTrustline;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/account-trustline.ts\n// module id = 363\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/account-trustline.ts?");

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(19);\nconst common_1 = __webpack_require__(0);\nfunction getTrustlineBalanceAmount(trustline) {\n    return {\n        currency: trustline.specification.currency,\n        counterparty: trustline.specification.counterparty,\n        value: trustline.state.balance\n    };\n}\nfunction formatBalances(options, balances) {\n    const result = balances.trustlines.map(getTrustlineBalanceAmount);\n    if (!(options.counterparty ||\n        (options.currency && options.currency !== 'XRP'))) {\n        const xrpBalance = {\n            currency: 'XRP',\n            value: balances.xrp\n        };\n        result.unshift(xrpBalance);\n    }\n    if (options.limit && result.length > options.limit) {\n        const toRemove = result.length - options.limit;\n        result.splice(-toRemove, toRemove);\n    }\n    return result;\n}\nfunction getLedgerVersionHelper(connection, optionValue) {\n    if (optionValue !== undefined && optionValue !== null) {\n        return Promise.resolve(optionValue);\n    }\n    return connection.getLedgerVersion();\n}\nfunction getBalances(address, options = {}) {\n    common_1.validate.getTrustlines({ address, options });\n    return Promise.all([\n        getLedgerVersionHelper(this.connection, options.ledgerVersion).then(ledgerVersion => utils.getXRPBalance(this.connection, address, ledgerVersion)),\n        this.getTrustlines(address, options)\n    ]).then(results => formatBalances(options, { xrp: results[0], trustlines: results[1] }));\n}\nexports.default = getBalances;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/balances.ts\n// module id = 364\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/balances.ts?");

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst common_1 = __webpack_require__(0);\nconst utils_1 = __webpack_require__(19);\nfunction formatBalanceSheet(balanceSheet) {\n    const result = {};\n    if (!_.isUndefined(balanceSheet.balances)) {\n        result.balances = [];\n        _.forEach(balanceSheet.balances, (balances, counterparty) => {\n            _.forEach(balances, balance => {\n                result.balances.push(Object.assign({ counterparty }, balance));\n            });\n        });\n    }\n    if (!_.isUndefined(balanceSheet.assets)) {\n        result.assets = [];\n        _.forEach(balanceSheet.assets, (assets, counterparty) => {\n            _.forEach(assets, balance => {\n                result.assets.push(Object.assign({ counterparty }, balance));\n            });\n        });\n    }\n    if (!_.isUndefined(balanceSheet.obligations)) {\n        result.obligations = _.map(balanceSheet.obligations, (value, currency) => ({ currency, value }));\n    }\n    return result;\n}\nfunction getBalanceSheet(address, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getBalanceSheet({ address, options });\n        options = yield utils_1.ensureLedgerVersion.call(this, options);\n        // 2. Make Request\n        const response = yield this.request('gateway_balances', {\n            account: address,\n            strict: true,\n            hotwallet: options.excludeAddresses,\n            ledger_index: options.ledgerVersion\n        });\n        // 3. Return Formatted Response\n        return formatBalanceSheet(response);\n    });\n}\nexports.default = getBalanceSheet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/balance-sheet.ts\n// module id = 365\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/balance-sheet.ts?");

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst bignumber_js_1 = __webpack_require__(7);\nconst utils_1 = __webpack_require__(19);\nconst common_1 = __webpack_require__(0);\nconst pathfind_1 = __webpack_require__(367);\nconst NotFoundError = common_1.errors.NotFoundError;\nconst ValidationError = common_1.errors.ValidationError;\nfunction addParams(request, result) {\n    return _.defaults(_.assign({}, result, {\n        source_account: request.source_account,\n        source_currencies: request.source_currencies\n    }), { destination_amount: request.destination_amount });\n}\nfunction requestPathFind(connection, pathfind) {\n    const destinationAmount = _.assign({\n        // This is converted back to drops by toRippledAmount()\n        value: pathfind.destination.amount.currency === 'XRP' ?\n            common_1.dropsToXrp('-1') : '-1'\n    }, pathfind.destination.amount);\n    const request = {\n        command: 'ripple_path_find',\n        source_account: pathfind.source.address,\n        destination_account: pathfind.destination.address,\n        destination_amount: common_1.toRippledAmount(destinationAmount)\n    };\n    if (typeof request.destination_amount === 'object'\n        && !request.destination_amount.issuer) {\n        // Convert blank issuer to sender's address\n        // (Ripple convention for 'any issuer')\n        // https://ripple.com/build/transactions/\n        //     #special-issuer-values-for-sendmax-and-amount\n        // https://ripple.com/build/ripple-rest/#counterparties-in-payments\n        request.destination_amount.issuer = request.destination_account;\n    }\n    if (pathfind.source.currencies && pathfind.source.currencies.length > 0) {\n        request.source_currencies = pathfind.source.currencies.map(amount => utils_1.renameCounterpartyToIssuer(amount));\n    }\n    if (pathfind.source.amount) {\n        if (pathfind.destination.amount.value !== undefined) {\n            throw new ValidationError('Cannot specify both source.amount'\n                + ' and destination.amount.value in getPaths');\n        }\n        request.send_max = common_1.toRippledAmount(pathfind.source.amount);\n        if (typeof request.send_max !== 'string' && !request.send_max.issuer) {\n            request.send_max.issuer = pathfind.source.address;\n        }\n    }\n    return connection.request(request).then(paths => addParams(request, paths));\n}\nfunction addDirectXrpPath(paths, xrpBalance) {\n    // Add XRP \"path\" only if the source acct has enough XRP to make the payment\n    const destinationAmount = paths.destination_amount;\n    // @ts-ignore: destinationAmount can be a currency amount object! Fix!\n    if ((new bignumber_js_1.default(xrpBalance)).greaterThanOrEqualTo(destinationAmount)) {\n        paths.alternatives.unshift({\n            paths_computed: [],\n            source_amount: paths.destination_amount\n        });\n    }\n    return paths;\n}\nfunction isRippledIOUAmount(amount) {\n    // rippled XRP amounts are specified as decimal strings\n    return (typeof amount === 'object') &&\n        amount.currency && (amount.currency !== 'XRP');\n}\nfunction conditionallyAddDirectXRPPath(connection, address, paths) {\n    if (isRippledIOUAmount(paths.destination_amount)\n        || !_.includes(paths.destination_currencies, 'XRP')) {\n        return Promise.resolve(paths);\n    }\n    return utils_1.getXRPBalance(connection, address, undefined).then(xrpBalance => addDirectXrpPath(paths, xrpBalance));\n}\nfunction filterSourceFundsLowPaths(pathfind, paths) {\n    if (pathfind.source.amount &&\n        pathfind.destination.amount.value === undefined && paths.alternatives) {\n        paths.alternatives = _.filter(paths.alternatives, alt => {\n            if (!alt.source_amount) {\n                return false;\n            }\n            const pathfindSourceAmountValue = new bignumber_js_1.default(pathfind.source.amount.currency === 'XRP' ?\n                common_1.xrpToDrops(pathfind.source.amount.value) :\n                pathfind.source.amount.value);\n            const altSourceAmountValue = new bignumber_js_1.default(typeof alt.source_amount === 'string' ?\n                alt.source_amount :\n                alt.source_amount.value);\n            return altSourceAmountValue.eq(pathfindSourceAmountValue);\n        });\n    }\n    return paths;\n}\nfunction formatResponse(pathfind, paths) {\n    if (paths.alternatives && paths.alternatives.length > 0) {\n        return pathfind_1.default(paths);\n    }\n    if (paths.destination_currencies !== undefined &&\n        !_.includes(paths.destination_currencies, pathfind.destination.amount.currency)) {\n        throw new NotFoundError('No paths found. ' +\n            'The destination_account does not accept ' +\n            pathfind.destination.amount.currency + ', they only accept: ' +\n            paths.destination_currencies.join(', '));\n    }\n    else if (paths.source_currencies && paths.source_currencies.length > 0) {\n        throw new NotFoundError('No paths found. Please ensure' +\n            ' that the source_account has sufficient funds to execute' +\n            ' the payment in one of the specified source_currencies. If it does' +\n            ' there may be insufficient liquidity in the network to execute' +\n            ' this payment right now');\n    }\n    else {\n        throw new NotFoundError('No paths found.' +\n            ' Please ensure that the source_account has sufficient funds to' +\n            ' execute the payment. If it does there may be insufficient liquidity' +\n            ' in the network to execute this payment right now');\n    }\n}\nfunction getPaths(pathfind) {\n    common_1.validate.getPaths({ pathfind });\n    const address = pathfind.source.address;\n    return requestPathFind(this.connection, pathfind).then(paths => conditionallyAddDirectXRPPath(this.connection, address, paths))\n        .then(paths => filterSourceFundsLowPaths(pathfind, paths))\n        .then(paths => formatResponse(pathfind, paths));\n}\nexports.default = getPaths;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/pathfind.ts\n// module id = 366\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/pathfind.ts?");

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst amount_1 = __webpack_require__(14);\nfunction parsePaths(paths) {\n    return paths.map(steps => steps.map(step => _.omit(step, ['type', 'type_hex'])));\n}\nfunction removeAnyCounterpartyEncoding(address, amount) {\n    return amount.counterparty === address ?\n        _.omit(amount, 'counterparty') : amount;\n}\nfunction createAdjustment(address, adjustmentWithoutAddress) {\n    const amountKey = _.keys(adjustmentWithoutAddress)[0];\n    const amount = adjustmentWithoutAddress[amountKey];\n    return _.set({ address: address }, amountKey, removeAnyCounterpartyEncoding(address, amount));\n}\nfunction parseAlternative(sourceAddress, destinationAddress, destinationAmount, alternative) {\n    // we use \"maxAmount\"/\"minAmount\" here so that the result can be passed\n    // directly to preparePayment\n    const amounts = (alternative.destination_amount !== undefined) ?\n        { source: { amount: amount_1.default(alternative.source_amount) },\n            destination: { minAmount: amount_1.default(alternative.destination_amount) } } :\n        { source: { maxAmount: amount_1.default(alternative.source_amount) },\n            destination: { amount: amount_1.default(destinationAmount) } };\n    return {\n        source: createAdjustment(sourceAddress, amounts.source),\n        destination: createAdjustment(destinationAddress, amounts.destination),\n        paths: JSON.stringify(parsePaths(alternative.paths_computed))\n    };\n}\nfunction parsePathfind(pathfindResult) {\n    const sourceAddress = pathfindResult.source_account;\n    const destinationAddress = pathfindResult.destination_account;\n    const destinationAmount = pathfindResult.destination_amount;\n    return pathfindResult.alternatives.map(alt => parseAlternative(sourceAddress, destinationAddress, destinationAmount, alt));\n}\nexports.default = parsePathfind;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/pathfind.ts\n// module id = 367\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/pathfind.ts?");

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst common_1 = __webpack_require__(0);\nconst account_order_1 = __webpack_require__(369);\nfunction formatResponse(address, responses) {\n    let orders = [];\n    for (const response of responses) {\n        const offers = response.offers.map(offer => {\n            return account_order_1.parseAccountOrder(address, offer);\n        });\n        orders = orders.concat(offers);\n    }\n    return _.sortBy(orders, order => order.properties.sequence);\n}\nfunction getOrders(address, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getOrders({ address, options });\n        // 2. Make Request\n        const responses = yield this._requestAll('account_offers', {\n            account: address,\n            ledger_index: options.ledgerVersion || (yield this.getLedgerVersion()),\n            limit: options.limit\n        });\n        // 3. Return Formatted Response\n        return formatResponse(address, responses);\n    });\n}\nexports.default = getOrders;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/orders.ts\n// module id = 368\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/orders.ts?");

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bignumber_js_1 = __webpack_require__(7);\nconst amount_1 = __webpack_require__(14);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst flags_1 = __webpack_require__(105);\n// TODO: remove this function once rippled provides quality directly\nfunction computeQuality(takerGets, takerPays) {\n    const quotient = new bignumber_js_1.default(takerPays.value).dividedBy(takerGets.value);\n    return quotient.toDigits(16, bignumber_js_1.default.ROUND_HALF_UP).toString();\n}\n// rippled 'account_offers' returns a different format for orders than 'tx'\n// the flags are also different\nfunction parseAccountOrder(address, order) {\n    const direction = (order.flags & flags_1.orderFlags.Sell) === 0 ? 'buy' : 'sell';\n    const takerGetsAmount = amount_1.default(order.taker_gets);\n    const takerPaysAmount = amount_1.default(order.taker_pays);\n    const quantity = (direction === 'buy') ? takerPaysAmount : takerGetsAmount;\n    const totalPrice = (direction === 'buy') ? takerGetsAmount : takerPaysAmount;\n    // note: immediateOrCancel and fillOrKill orders cannot enter the order book\n    // so we can omit those flags here\n    const specification = common_1.removeUndefined({\n        direction: direction,\n        quantity: quantity,\n        totalPrice: totalPrice,\n        passive: ((order.flags & flags_1.orderFlags.Passive) !== 0) || undefined,\n        // rippled currently does not provide \"expiration\" in account_offers\n        expirationTime: utils_1.parseTimestamp(order.expiration)\n    });\n    const makerExchangeRate = order.quality ?\n        utils_1.adjustQualityForXRP(order.quality.toString(), takerGetsAmount.currency, takerPaysAmount.currency) :\n        computeQuality(takerGetsAmount, takerPaysAmount);\n    const properties = {\n        maker: address,\n        sequence: order.seq,\n        makerExchangeRate: makerExchangeRate\n    };\n    return { specification, properties };\n}\nexports.parseAccountOrder = parseAccountOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/account-order.ts\n// module id = 369\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/account-order.ts?");

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(19);\nconst orderbook_order_1 = __webpack_require__(371);\nconst common_1 = __webpack_require__(0);\nconst bignumber_js_1 = __webpack_require__(7);\nfunction isSameIssue(a, b) {\n    return a.currency === b.currency && a.counterparty === b.counterparty;\n}\nfunction directionFilter(direction, order) {\n    return order.specification.direction === direction;\n}\nfunction flipOrder(order) {\n    const specification = order.specification;\n    const flippedSpecification = {\n        quantity: specification.totalPrice,\n        totalPrice: specification.quantity,\n        direction: specification.direction === 'buy' ? 'sell' : 'buy'\n    };\n    const newSpecification = _.merge({}, specification, flippedSpecification);\n    return _.merge({}, order, { specification: newSpecification });\n}\nfunction alignOrder(base, order) {\n    const quantity = order.specification.quantity;\n    return isSameIssue(quantity, base) ? order : flipOrder(order);\n}\nfunction formatBidsAndAsks(orderbook, offers) {\n    // the \"base\" currency is the currency that you are buying or selling\n    // the \"counter\" is the currency that the \"base\" is priced in\n    // a \"bid\"/\"ask\" is an order to buy/sell the base, respectively\n    // for bids: takerGets = totalPrice = counter, takerPays = quantity = base\n    // for asks: takerGets = quantity = base, takerPays = totalPrice = counter\n    // quality = takerPays / takerGets; price = totalPrice / quantity\n    // for bids: lowest quality => lowest quantity/totalPrice => highest price\n    // for asks: lowest quality => lowest totalPrice/quantity => lowest price\n    // for both bids and asks, lowest quality is closest to mid-market\n    // we sort the orders so that earlier orders are closer to mid-market\n    const orders = offers.sort((a, b) => {\n        return (new bignumber_js_1.default(a.quality)).comparedTo(b.quality);\n    }).map(orderbook_order_1.parseOrderbookOrder);\n    const alignedOrders = orders.map(_.partial(alignOrder, orderbook.base));\n    const bids = alignedOrders.filter(_.partial(directionFilter, 'buy'));\n    const asks = alignedOrders.filter(_.partial(directionFilter, 'sell'));\n    return { bids, asks };\n}\nexports.formatBidsAndAsks = formatBidsAndAsks;\n// account is to specify a \"perspective\", which affects which unfunded offers\n// are returned\nfunction makeRequest(api, taker, options, takerGets, takerPays) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const orderData = utils.renameCounterpartyToIssuerInOrder({\n            taker_gets: takerGets,\n            taker_pays: takerPays\n        });\n        return api._requestAll('book_offers', {\n            taker_gets: orderData.taker_gets,\n            taker_pays: orderData.taker_pays,\n            ledger_index: options.ledgerVersion || 'validated',\n            limit: options.limit,\n            taker\n        });\n    });\n}\nfunction getOrderbook(address, orderbook, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getOrderbook({ address, orderbook, options });\n        // 2. Make Request\n        const [directOfferResults, reverseOfferResults] = yield Promise.all([\n            makeRequest(this, address, options, orderbook.base, orderbook.counter),\n            makeRequest(this, address, options, orderbook.counter, orderbook.base)\n        ]);\n        // 3. Return Formatted Response\n        const directOffers = _.flatMap(directOfferResults, directOfferResult => directOfferResult.offers);\n        const reverseOffers = _.flatMap(reverseOfferResults, reverseOfferResult => reverseOfferResult.offers);\n        return formatBidsAndAsks(orderbook, [...directOffers, ...reverseOffers]);\n    });\n}\nexports.getOrderbook = getOrderbook;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/orderbook.ts\n// module id = 370\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/orderbook.ts?");

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nconst flags_1 = __webpack_require__(105);\nconst amount_1 = __webpack_require__(14);\nfunction parseOrderbookOrder(data) {\n    const direction = (data.Flags & flags_1.orderFlags.Sell) === 0 ? 'buy' : 'sell';\n    const takerGetsAmount = amount_1.default(data.TakerGets);\n    const takerPaysAmount = amount_1.default(data.TakerPays);\n    const quantity = (direction === 'buy') ? takerPaysAmount : takerGetsAmount;\n    const totalPrice = (direction === 'buy') ? takerGetsAmount : takerPaysAmount;\n    // note: immediateOrCancel and fillOrKill orders cannot enter the order book\n    // so we can omit those flags here\n    const specification = common_1.removeUndefined({\n        direction: direction,\n        quantity: quantity,\n        totalPrice: totalPrice,\n        passive: ((data.Flags & flags_1.orderFlags.Passive) !== 0) || undefined,\n        expirationTime: utils_1.parseTimestamp(data.Expiration)\n    });\n    const properties = {\n        maker: data.Account,\n        sequence: data.Sequence,\n        makerExchangeRate: utils_1.adjustQualityForXRP(data.quality, takerGetsAmount.currency, takerPaysAmount.currency)\n    };\n    const takerGetsFunded = data.taker_gets_funded ?\n        amount_1.default(data.taker_gets_funded) : undefined;\n    const takerPaysFunded = data.taker_pays_funded ?\n        amount_1.default(data.taker_pays_funded) : undefined;\n    const available = common_1.removeUndefined({\n        fundedAmount: takerGetsFunded,\n        priceOfFundedAmount: takerPaysFunded\n    });\n    const state = _.isEmpty(available) ? undefined : available;\n    return common_1.removeUndefined({ specification, properties, state, data });\n}\nexports.parseOrderbookOrder = parseOrderbookOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/orderbook-order.ts\n// module id = 371\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/orderbook-order.ts?");

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst fields_1 = __webpack_require__(90);\nconst common_1 = __webpack_require__(0);\nconst AccountFlags = common_1.constants.AccountFlags;\nfunction parseAccountFlags(value, options = {}) {\n    const settings = {};\n    for (const flagName in AccountFlags) {\n        if (value & AccountFlags[flagName]) {\n            settings[flagName] = true;\n        }\n        else {\n            if (!options.excludeFalse) {\n                settings[flagName] = false;\n            }\n        }\n    }\n    return settings;\n}\nexports.parseAccountFlags = parseAccountFlags;\nfunction formatSettings(response) {\n    const data = response.account_data;\n    const parsedFlags = parseAccountFlags(data.Flags, { excludeFalse: true });\n    const parsedFields = fields_1.default(data);\n    return _.assign({}, parsedFlags, parsedFields);\n}\nfunction getSettings(address, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getSettings({ address, options });\n        // 2. Make Request\n        const response = yield this.request('account_info', {\n            account: address,\n            ledger_index: options.ledgerVersion || 'validated',\n            signer_lists: true\n        });\n        // 3. Return Formatted Response\n        return formatSettings(response);\n    });\n}\nexports.getSettings = getSettings;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/settings.ts\n// module id = 372\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/settings.ts?");

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(0);\nfunction formatAccountInfo(response) {\n    const data = response.account_data;\n    return common_1.removeUndefined({\n        sequence: data.Sequence,\n        xrpBalance: common_1.dropsToXrp(data.Balance),\n        ownerCount: data.OwnerCount,\n        previousInitiatedTransactionID: data.AccountTxnID,\n        previousAffectingTransactionID: data.PreviousTxnID,\n        previousAffectingTransactionLedgerVersion: data.PreviousTxnLgrSeq\n    });\n}\nfunction getAccountInfo(address, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getAccountInfo({ address, options });\n        // 2. Make Request\n        const response = yield this.request('account_info', {\n            account: address,\n            ledger_index: options.ledgerVersion || 'validated'\n        });\n        // 3. Return Formatted Response\n        return formatAccountInfo(response);\n    });\n}\nexports.default = getAccountInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/accountinfo.ts\n// module id = 373\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/accountinfo.ts?");

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(0);\nfunction getAccountObjects(address, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Don't validate the options so that new types can be passed\n        // through to rippled. rippled validates requests.\n        // Make Request\n        const response = yield this.request('account_objects', common_1.removeUndefined({\n            account: address,\n            type: options.type,\n            ledger_hash: options.ledgerHash,\n            ledger_index: options.ledgerIndex,\n            limit: options.limit,\n            marker: options.marker\n        }));\n        // Return Response\n        return response;\n    });\n}\nexports.default = getAccountObjects;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/accountobjects.ts\n// module id = 374\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/accountobjects.ts?");

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst payment_channel_1 = __webpack_require__(376);\nconst common_1 = __webpack_require__(0);\nconst NotFoundError = common_1.errors.NotFoundError;\nfunction formatResponse(response) {\n    if (response.node === undefined ||\n        response.node.LedgerEntryType !== 'PayChannel') {\n        throw new NotFoundError('Payment channel ledger entry not found');\n    }\n    return payment_channel_1.parsePaymentChannel(response.node);\n}\nfunction getPaymentChannel(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getPaymentChannel({ id });\n        // 2. Make Request\n        const response = yield this.request('ledger_entry', {\n            index: id,\n            binary: false,\n            ledger_index: 'validated'\n        });\n        // 3. Return Formatted Response\n        return formatResponse(response);\n    });\n}\nexports.default = getPaymentChannel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/payment-channel.ts\n// module id = 375\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/payment-channel.ts?");

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(10);\nconst common_1 = __webpack_require__(0);\nfunction parsePaymentChannel(data) {\n    return common_1.removeUndefined({\n        account: data.Account,\n        amount: common_1.dropsToXrp(data.Amount),\n        balance: common_1.dropsToXrp(data.Balance),\n        destination: data.Destination,\n        publicKey: data.PublicKey,\n        settleDelay: data.SettleDelay,\n        expiration: utils_1.parseTimestamp(data.Expiration),\n        cancelAfter: utils_1.parseTimestamp(data.CancelAfter),\n        sourceTag: data.SourceTag,\n        destinationTag: data.DestinationTag,\n        previousAffectingTransactionID: data.PreviousTxnID,\n        previousAffectingTransactionLedgerVersion: data.PreviousTxnLgrSeq\n    });\n}\nexports.parsePaymentChannel = parsePaymentChannel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/payment-channel.ts\n// module id = 376\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/payment-channel.ts?");

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(8);\nconst validate = utils.common.validate;\nconst toRippledAmount = utils.common.toRippledAmount;\nconst paymentFlags = utils.common.txFlags.Payment;\nconst ValidationError = utils.common.errors.ValidationError;\nconst common_1 = __webpack_require__(0);\nfunction isMaxAdjustment(source) {\n    return source.maxAmount !== undefined;\n}\nfunction isMinAdjustment(destination) {\n    return destination.minAmount !== undefined;\n}\nfunction isXRPToXRPPayment(payment) {\n    const { source, destination } = payment;\n    const sourceCurrency = isMaxAdjustment(source)\n        ? source.maxAmount.currency : source.amount.currency;\n    const destinationCurrency = isMinAdjustment(destination)\n        ? destination.minAmount.currency : destination.amount.currency;\n    return (sourceCurrency === 'XRP' || sourceCurrency === 'drops') &&\n        (destinationCurrency === 'XRP' || destinationCurrency === 'drops');\n}\nfunction isIOUWithoutCounterparty(amount) {\n    return amount && amount.currency !== 'XRP' && amount.currency !== 'drops'\n        && amount.counterparty === undefined;\n}\nfunction applyAnyCounterpartyEncoding(payment) {\n    // Convert blank counterparty to sender or receiver's address\n    //   (Ripple convention for 'any counterparty')\n    // https://ripple.com/build/transactions/\n    //    #special-issuer-values-for-sendmax-and-amount\n    // https://ripple.com/build/ripple-rest/#counterparties-in-payments\n    _.forEach([payment.source, payment.destination], adjustment => {\n        _.forEach(['amount', 'minAmount', 'maxAmount'], key => {\n            if (isIOUWithoutCounterparty(adjustment[key])) {\n                adjustment[key].counterparty = adjustment.address;\n            }\n        });\n    });\n}\nfunction createMaximalAmount(amount) {\n    const maxXRPValue = '100000000000';\n    const maxIOUValue = '9999999999999999e80';\n    let maxValue;\n    if (amount.currency === 'XRP') {\n        maxValue = maxXRPValue;\n    }\n    else if (amount.currency === 'drops') {\n        maxValue = common_1.xrpToDrops(maxXRPValue);\n    }\n    else {\n        maxValue = maxIOUValue;\n    }\n    return _.assign({}, amount, { value: maxValue });\n}\nfunction createPaymentTransaction(address, paymentArgument) {\n    const payment = _.cloneDeep(paymentArgument);\n    applyAnyCounterpartyEncoding(payment);\n    if (address !== payment.source.address) {\n        throw new ValidationError('address must match payment.source.address');\n    }\n    if ((isMaxAdjustment(payment.source) && isMinAdjustment(payment.destination))\n        ||\n            (!isMaxAdjustment(payment.source) && !isMinAdjustment(payment.destination))) {\n        throw new ValidationError('payment must specify either (source.maxAmount '\n            + 'and destination.amount) or (source.amount and destination.minAmount)');\n    }\n    const destinationAmount = isMinAdjustment(payment.destination)\n        ? payment.destination.minAmount : payment.destination.amount;\n    const sourceAmount = isMaxAdjustment(payment.source)\n        ? payment.source.maxAmount : payment.source.amount;\n    // when using destination.minAmount, rippled still requires that we set\n    // a destination amount in addition to DeliverMin. the destination amount\n    // is interpreted as the maximum amount to send. we want to be sure to\n    // send the whole source amount, so we set the destination amount to the\n    // maximum possible amount. otherwise it's possible that the destination\n    // cap could be hit before the source cap.\n    const amount = (isMinAdjustment(payment.destination) && !isXRPToXRPPayment(payment))\n        ? createMaximalAmount(destinationAmount) : destinationAmount;\n    const txJSON = {\n        TransactionType: 'Payment',\n        Account: payment.source.address,\n        Destination: payment.destination.address,\n        Amount: toRippledAmount(amount),\n        Flags: 0\n    };\n    if (payment.invoiceID !== undefined) {\n        txJSON.InvoiceID = payment.invoiceID;\n    }\n    if (payment.source.tag !== undefined) {\n        txJSON.SourceTag = payment.source.tag;\n    }\n    if (payment.destination.tag !== undefined) {\n        txJSON.DestinationTag = payment.destination.tag;\n    }\n    if (payment.memos !== undefined) {\n        txJSON.Memos = _.map(payment.memos, utils.convertMemo);\n    }\n    if (payment.noDirectRipple === true) {\n        txJSON.Flags |= paymentFlags.NoRippleDirect;\n    }\n    if (payment.limitQuality === true) {\n        txJSON.Flags |= paymentFlags.LimitQuality;\n    }\n    if (!isXRPToXRPPayment(payment)) {\n        // Don't set SendMax for XRP->XRP payment\n        // temREDUNDANT_SEND_MAX removed in:\n        // https://github.com/ripple/rippled/commit/\n        //  c522ffa6db2648f1d8a987843e7feabf1a0b7de8/\n        if (payment.allowPartialPayment || isMinAdjustment(payment.destination)) {\n            txJSON.Flags |= paymentFlags.PartialPayment;\n        }\n        txJSON.SendMax = toRippledAmount(sourceAmount);\n        if (isMinAdjustment(payment.destination)) {\n            txJSON.DeliverMin = toRippledAmount(destinationAmount);\n        }\n        if (payment.paths !== undefined) {\n            txJSON.Paths = JSON.parse(payment.paths);\n        }\n    }\n    else if (payment.allowPartialPayment === true) {\n        throw new ValidationError('XRP to XRP payments cannot be partial payments');\n    }\n    return txJSON;\n}\nfunction preparePayment(address, payment, instructions = {}) {\n    validate.preparePayment({ address, payment, instructions });\n    const txJSON = createPaymentTransaction(address, payment);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = preparePayment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/payment.ts\n// module id = 377\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/payment.ts?");

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst bignumber_js_1 = __webpack_require__(7);\nconst utils = __webpack_require__(8);\nconst validate = utils.common.validate;\nconst trustlineFlags = utils.common.txFlags.TrustSet;\nfunction convertQuality(quality) {\n    return (new bignumber_js_1.default(quality)).shift(9).truncated().toNumber();\n}\nfunction createTrustlineTransaction(account, trustline) {\n    const limit = {\n        currency: trustline.currency,\n        issuer: trustline.counterparty,\n        value: trustline.limit\n    };\n    const txJSON = {\n        TransactionType: 'TrustSet',\n        Account: account,\n        LimitAmount: limit,\n        Flags: 0\n    };\n    if (trustline.qualityIn !== undefined) {\n        txJSON.QualityIn = convertQuality(trustline.qualityIn);\n    }\n    if (trustline.qualityOut !== undefined) {\n        txJSON.QualityOut = convertQuality(trustline.qualityOut);\n    }\n    if (trustline.authorized === true) {\n        txJSON.Flags |= trustlineFlags.SetAuth;\n    }\n    if (trustline.ripplingDisabled !== undefined) {\n        txJSON.Flags |= trustline.ripplingDisabled ?\n            trustlineFlags.NoRipple : trustlineFlags.ClearNoRipple;\n    }\n    if (trustline.frozen !== undefined) {\n        txJSON.Flags |= trustline.frozen ?\n            trustlineFlags.SetFreeze : trustlineFlags.ClearFreeze;\n    }\n    if (trustline.memos !== undefined) {\n        txJSON.Memos = _.map(trustline.memos, utils.convertMemo);\n    }\n    return txJSON;\n}\nfunction prepareTrustline(address, trustline, instructions = {}) {\n    validate.prepareTrustline({ address, trustline, instructions });\n    const txJSON = createTrustlineTransaction(address, trustline);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareTrustline;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/trustline.ts\n// module id = 378\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/trustline.ts?");

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(8);\nconst offerFlags = utils.common.txFlags.OfferCreate;\nconst common_1 = __webpack_require__(0);\nfunction createOrderTransaction(account, order) {\n    const takerPays = utils.common.toRippledAmount(order.direction === 'buy' ?\n        order.quantity : order.totalPrice);\n    const takerGets = utils.common.toRippledAmount(order.direction === 'buy' ?\n        order.totalPrice : order.quantity);\n    const txJSON = {\n        TransactionType: 'OfferCreate',\n        Account: account,\n        TakerGets: takerGets,\n        TakerPays: takerPays,\n        Flags: 0\n    };\n    if (order.direction === 'sell') {\n        txJSON.Flags |= offerFlags.Sell;\n    }\n    if (order.passive === true) {\n        txJSON.Flags |= offerFlags.Passive;\n    }\n    if (order.immediateOrCancel === true) {\n        txJSON.Flags |= offerFlags.ImmediateOrCancel;\n    }\n    if (order.fillOrKill === true) {\n        txJSON.Flags |= offerFlags.FillOrKill;\n    }\n    if (order.expirationTime !== undefined) {\n        txJSON.Expiration = common_1.iso8601ToRippleTime(order.expirationTime);\n    }\n    if (order.orderToReplace !== undefined) {\n        txJSON.OfferSequence = order.orderToReplace;\n    }\n    if (order.memos !== undefined) {\n        txJSON.Memos = _.map(order.memos, utils.convertMemo);\n    }\n    return txJSON;\n}\nfunction prepareOrder(address, order, instructions = {}) {\n    common_1.validate.prepareOrder({ address, order, instructions });\n    const txJSON = createOrderTransaction(address, order);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/order.ts\n// module id = 379\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/order.ts?");

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(8);\nconst validate = utils.common.validate;\nfunction createOrderCancellationTransaction(account, orderCancellation) {\n    const txJSON = {\n        TransactionType: 'OfferCancel',\n        Account: account,\n        OfferSequence: orderCancellation.orderSequence\n    };\n    if (orderCancellation.memos !== undefined) {\n        txJSON.Memos = _.map(orderCancellation.memos, utils.convertMemo);\n    }\n    return txJSON;\n}\nfunction prepareOrderCancellation(address, orderCancellation, instructions = {}) {\n    validate.prepareOrderCancellation({ address, orderCancellation, instructions });\n    const txJSON = createOrderCancellationTransaction(address, orderCancellation);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareOrderCancellation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/ordercancellation.ts\n// module id = 380\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/ordercancellation.ts?");

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(8);\nconst common_1 = __webpack_require__(0);\nconst ValidationError = utils.common.errors.ValidationError;\nfunction createEscrowCreationTransaction(account, payment) {\n    const txJSON = {\n        TransactionType: 'EscrowCreate',\n        Account: account,\n        Destination: payment.destination,\n        Amount: common_1.xrpToDrops(payment.amount)\n    };\n    if (payment.condition !== undefined) {\n        txJSON.Condition = payment.condition;\n    }\n    if (payment.allowCancelAfter !== undefined) {\n        txJSON.CancelAfter = common_1.iso8601ToRippleTime(payment.allowCancelAfter);\n    }\n    if (payment.allowExecuteAfter !== undefined) {\n        txJSON.FinishAfter = common_1.iso8601ToRippleTime(payment.allowExecuteAfter);\n    }\n    if (payment.sourceTag !== undefined) {\n        txJSON.SourceTag = payment.sourceTag;\n    }\n    if (payment.destinationTag !== undefined) {\n        txJSON.DestinationTag = payment.destinationTag;\n    }\n    if (payment.memos !== undefined) {\n        txJSON.Memos = _.map(payment.memos, utils.convertMemo);\n    }\n    if (Boolean(payment.allowCancelAfter) && Boolean(payment.allowExecuteAfter) &&\n        txJSON.CancelAfter <= txJSON.FinishAfter) {\n        throw new ValidationError('prepareEscrowCreation: ' +\n            '\"allowCancelAfter\" must be after \"allowExecuteAfter\"');\n    }\n    return txJSON;\n}\nfunction prepareEscrowCreation(address, escrowCreation, instructions = {}) {\n    common_1.validate.prepareEscrowCreation({ address, escrowCreation, instructions });\n    const txJSON = createEscrowCreationTransaction(address, escrowCreation);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareEscrowCreation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/escrow-creation.ts\n// module id = 381\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/escrow-creation.ts?");

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(8);\nconst validate = utils.common.validate;\nconst ValidationError = utils.common.errors.ValidationError;\nfunction createEscrowExecutionTransaction(account, payment) {\n    const txJSON = {\n        TransactionType: 'EscrowFinish',\n        Account: account,\n        Owner: payment.owner,\n        OfferSequence: payment.escrowSequence\n    };\n    if (Boolean(payment.condition) !== Boolean(payment.fulfillment)) {\n        throw new ValidationError('\"condition\" and \"fulfillment\" fields on'\n            + ' EscrowFinish must only be specified together.');\n    }\n    if (payment.condition !== undefined) {\n        txJSON.Condition = payment.condition;\n    }\n    if (payment.fulfillment !== undefined) {\n        txJSON.Fulfillment = payment.fulfillment;\n    }\n    if (payment.memos !== undefined) {\n        txJSON.Memos = _.map(payment.memos, utils.convertMemo);\n    }\n    return txJSON;\n}\nfunction prepareEscrowExecution(address, escrowExecution, instructions = {}) {\n    validate.prepareEscrowExecution({ address, escrowExecution, instructions });\n    const txJSON = createEscrowExecutionTransaction(address, escrowExecution);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareEscrowExecution;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/escrow-execution.ts\n// module id = 382\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/escrow-execution.ts?");

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(8);\nconst validate = utils.common.validate;\nfunction createEscrowCancellationTransaction(account, payment) {\n    const txJSON = {\n        TransactionType: 'EscrowCancel',\n        Account: account,\n        Owner: payment.owner,\n        OfferSequence: payment.escrowSequence\n    };\n    if (payment.memos !== undefined) {\n        txJSON.Memos = _.map(payment.memos, utils.convertMemo);\n    }\n    return txJSON;\n}\nfunction prepareEscrowCancellation(address, escrowCancellation, instructions = {}) {\n    validate.prepareEscrowCancellation({ address, escrowCancellation, instructions });\n    const txJSON = createEscrowCancellationTransaction(address, escrowCancellation);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareEscrowCancellation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/escrow-cancellation.ts\n// module id = 383\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/escrow-cancellation.ts?");

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(8);\nconst common_1 = __webpack_require__(0);\nfunction createPaymentChannelCreateTransaction(account, paymentChannel) {\n    const txJSON = {\n        Account: account,\n        TransactionType: 'PaymentChannelCreate',\n        Amount: common_1.xrpToDrops(paymentChannel.amount),\n        Destination: paymentChannel.destination,\n        SettleDelay: paymentChannel.settleDelay,\n        PublicKey: paymentChannel.publicKey.toUpperCase()\n    };\n    if (paymentChannel.cancelAfter !== undefined) {\n        txJSON.CancelAfter = common_1.iso8601ToRippleTime(paymentChannel.cancelAfter);\n    }\n    if (paymentChannel.sourceTag !== undefined) {\n        txJSON.SourceTag = paymentChannel.sourceTag;\n    }\n    if (paymentChannel.destinationTag !== undefined) {\n        txJSON.DestinationTag = paymentChannel.destinationTag;\n    }\n    return txJSON;\n}\nfunction preparePaymentChannelCreate(address, paymentChannelCreate, instructions = {}) {\n    common_1.validate.preparePaymentChannelCreate({ address, paymentChannelCreate, instructions });\n    const txJSON = createPaymentChannelCreateTransaction(address, paymentChannelCreate);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = preparePaymentChannelCreate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/payment-channel-create.ts\n// module id = 384\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/payment-channel-create.ts?");

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(8);\nconst common_1 = __webpack_require__(0);\nfunction createPaymentChannelFundTransaction(account, fund) {\n    const txJSON = {\n        Account: account,\n        TransactionType: 'PaymentChannelFund',\n        Channel: fund.channel,\n        Amount: common_1.xrpToDrops(fund.amount)\n    };\n    if (fund.expiration !== undefined) {\n        txJSON.Expiration = common_1.iso8601ToRippleTime(fund.expiration);\n    }\n    return txJSON;\n}\nfunction preparePaymentChannelFund(address, paymentChannelFund, instructions = {}) {\n    common_1.validate.preparePaymentChannelFund({ address, paymentChannelFund, instructions });\n    const txJSON = createPaymentChannelFundTransaction(address, paymentChannelFund);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = preparePaymentChannelFund;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/payment-channel-fund.ts\n// module id = 385\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/payment-channel-fund.ts?");

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(8);\nconst ValidationError = utils.common.errors.ValidationError;\nconst claimFlags = utils.common.txFlags.PaymentChannelClaim;\nconst common_1 = __webpack_require__(0);\nfunction createPaymentChannelClaimTransaction(account, claim) {\n    const txJSON = {\n        Account: account,\n        TransactionType: 'PaymentChannelClaim',\n        Channel: claim.channel,\n        Flags: 0\n    };\n    if (claim.balance !== undefined) {\n        txJSON.Balance = common_1.xrpToDrops(claim.balance);\n    }\n    if (claim.amount !== undefined) {\n        txJSON.Amount = common_1.xrpToDrops(claim.amount);\n    }\n    if (Boolean(claim.signature) !== Boolean(claim.publicKey)) {\n        throw new ValidationError('\"signature\" and \"publicKey\" fields on'\n            + ' PaymentChannelClaim must only be specified together.');\n    }\n    if (claim.signature !== undefined) {\n        txJSON.Signature = claim.signature;\n    }\n    if (claim.publicKey !== undefined) {\n        txJSON.PublicKey = claim.publicKey;\n    }\n    if (claim.renew === true && claim.close === true) {\n        throw new ValidationError('\"renew\" and \"close\" flags on PaymentChannelClaim'\n            + ' are mutually exclusive');\n    }\n    if (claim.renew === true) {\n        txJSON.Flags |= claimFlags.Renew;\n    }\n    if (claim.close === true) {\n        txJSON.Flags |= claimFlags.Close;\n    }\n    return txJSON;\n}\nfunction preparePaymentChannelClaim(address, paymentChannelClaim, instructions = {}) {\n    common_1.validate.preparePaymentChannelClaim({ address, paymentChannelClaim, instructions });\n    const txJSON = createPaymentChannelClaimTransaction(address, paymentChannelClaim);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = preparePaymentChannelClaim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/payment-channel-claim.ts\n// module id = 386\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/payment-channel-claim.ts?");

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(8);\nconst toRippledAmount = utils.common.toRippledAmount;\nconst common_1 = __webpack_require__(0);\nfunction createCheckCreateTransaction(account, check) {\n    const txJSON = {\n        Account: account,\n        TransactionType: 'CheckCreate',\n        Destination: check.destination,\n        SendMax: toRippledAmount(check.sendMax)\n    };\n    if (check.destinationTag !== undefined) {\n        txJSON.DestinationTag = check.destinationTag;\n    }\n    if (check.expiration !== undefined) {\n        txJSON.Expiration = common_1.iso8601ToRippleTime(check.expiration);\n    }\n    if (check.invoiceID !== undefined) {\n        txJSON.InvoiceID = check.invoiceID;\n    }\n    return txJSON;\n}\nfunction prepareCheckCreate(address, checkCreate, instructions = {}) {\n    common_1.validate.prepareCheckCreate({ address, checkCreate, instructions });\n    const txJSON = createCheckCreateTransaction(address, checkCreate);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareCheckCreate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/check-create.ts\n// module id = 387\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/check-create.ts?");

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(8);\nconst common_1 = __webpack_require__(0);\nfunction createCheckCancelTransaction(account, cancel) {\n    const txJSON = {\n        Account: account,\n        TransactionType: 'CheckCancel',\n        CheckID: cancel.checkID\n    };\n    return txJSON;\n}\nfunction prepareCheckCancel(address, checkCancel, instructions = {}) {\n    common_1.validate.prepareCheckCancel({ address, checkCancel, instructions });\n    const txJSON = createCheckCancelTransaction(address, checkCancel);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareCheckCancel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/check-cancel.ts\n// module id = 388\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/check-cancel.ts?");

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(8);\nconst ValidationError = utils.common.errors.ValidationError;\nconst toRippledAmount = utils.common.toRippledAmount;\nconst common_1 = __webpack_require__(0);\nfunction createCheckCashTransaction(account, checkCash) {\n    if (checkCash.amount && checkCash.deliverMin) {\n        throw new ValidationError('\"amount\" and \"deliverMin\" properties on '\n            + 'CheckCash are mutually exclusive');\n    }\n    const txJSON = {\n        Account: account,\n        TransactionType: 'CheckCash',\n        CheckID: checkCash.checkID\n    };\n    if (checkCash.amount !== undefined) {\n        txJSON.Amount = toRippledAmount(checkCash.amount);\n    }\n    if (checkCash.deliverMin !== undefined) {\n        txJSON.DeliverMin = toRippledAmount(checkCash.deliverMin);\n    }\n    return txJSON;\n}\nfunction prepareCheckCash(address, checkCash, instructions = {}) {\n    common_1.validate.prepareCheckCash({ address, checkCash, instructions });\n    const txJSON = createCheckCashTransaction(address, checkCash);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareCheckCash;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/check-cash.ts\n// module id = 389\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/check-cash.ts?");

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst assert = __webpack_require__(2);\nconst bignumber_js_1 = __webpack_require__(7);\nconst utils = __webpack_require__(8);\nconst validate = utils.common.validate;\nconst AccountFlagIndices = utils.common.constants.AccountFlagIndices;\nconst AccountFields = utils.common.constants.AccountFields;\n// Emptry string passed to setting will clear it\nconst CLEAR_SETTING = null;\nfunction setTransactionFlags(txJSON, values) {\n    const keys = Object.keys(values);\n    assert(keys.length === 1, 'ERROR: can only set one setting per transaction');\n    const flagName = keys[0];\n    const value = values[flagName];\n    const index = AccountFlagIndices[flagName];\n    if (index !== undefined) {\n        if (value) {\n            txJSON.SetFlag = index;\n        }\n        else {\n            txJSON.ClearFlag = index;\n        }\n    }\n}\nfunction setTransactionFields(txJSON, input) {\n    const fieldSchema = AccountFields;\n    for (const fieldName in fieldSchema) {\n        const field = fieldSchema[fieldName];\n        let value = input[field.name];\n        if (value === undefined) {\n            continue;\n        }\n        // The value required to clear an account root field varies\n        if (value === CLEAR_SETTING && field.hasOwnProperty('defaults')) {\n            value = field.defaults;\n        }\n        if (field.encoding === 'hex' && !field.length) {\n            // This is currently only used for Domain field\n            value = new Buffer(value, 'ascii').toString('hex').toUpperCase();\n        }\n        txJSON[fieldName] = value;\n    }\n}\n/**\n *  Note: A fee of 1% requires 101% of the destination to be sent for the\n *        destination to receive 100%.\n *  The transfer rate is specified as the input amount as fraction of 1.\n *  To specify the default rate of 0%, a 100% input amount, specify 1.\n *  To specify a rate of 1%, a 101% input amount, specify 1.01\n *\n *  @param {Number|String} transferRate\n *\n *  @returns {Number|String} numbers will be converted while strings\n *                           are returned\n */\nfunction convertTransferRate(transferRate) {\n    return (new bignumber_js_1.default(transferRate)).shift(9).toNumber();\n}\nfunction formatSignerEntry(signer) {\n    return {\n        SignerEntry: {\n            Account: signer.address,\n            SignerWeight: signer.weight\n        }\n    };\n}\nfunction createSettingsTransactionWithoutMemos(account, settings) {\n    if (settings.regularKey !== undefined) {\n        const removeRegularKey = {\n            TransactionType: 'SetRegularKey',\n            Account: account\n        };\n        if (settings.regularKey === null) {\n            return removeRegularKey;\n        }\n        return _.assign({}, removeRegularKey, { RegularKey: settings.regularKey });\n    }\n    if (settings.signers !== undefined) {\n        return {\n            TransactionType: 'SignerListSet',\n            Account: account,\n            SignerQuorum: settings.signers.threshold,\n            SignerEntries: _.map(settings.signers.weights, formatSignerEntry)\n        };\n    }\n    const txJSON = {\n        TransactionType: 'AccountSet',\n        Account: account\n    };\n    setTransactionFlags(txJSON, _.omit(settings, 'memos'));\n    setTransactionFields(txJSON, settings);\n    if (txJSON.TransferRate !== undefined) {\n        txJSON.TransferRate = convertTransferRate(txJSON.TransferRate);\n    }\n    return txJSON;\n}\nfunction createSettingsTransaction(account, settings) {\n    const txJSON = createSettingsTransactionWithoutMemos(account, settings);\n    if (settings.memos !== undefined) {\n        txJSON.Memos = _.map(settings.memos, utils.convertMemo);\n    }\n    return txJSON;\n}\nfunction prepareSettings(address, settings, instructions = {}) {\n    validate.prepareSettings({ address, settings, instructions });\n    const txJSON = createSettingsTransaction(address, settings);\n    return utils.prepareTransaction(txJSON, this, instructions);\n}\nexports.default = prepareSettings;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/settings.ts\n// module id = 390\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/settings.ts?");

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = __webpack_require__(8);\nconst keypairs = __webpack_require__(31);\nconst binary = __webpack_require__(42);\nconst ripple_hashes_1 = __webpack_require__(50);\nconst bignumber_js_1 = __webpack_require__(7);\nconst common_1 = __webpack_require__(0);\nconst validate = utils.common.validate;\nfunction computeSignature(tx, privateKey, signAs) {\n    const signingData = signAs\n        ? binary.encodeForMultisigning(tx, signAs)\n        : binary.encodeForSigning(tx);\n    return keypairs.sign(signingData, privateKey);\n}\nfunction signWithKeypair(api, txJSON, keypair, options = {\n    signAs: ''\n}) {\n    validate.sign({ txJSON, keypair });\n    const tx = JSON.parse(txJSON);\n    if (tx.TxnSignature || tx.Signers) {\n        throw new utils.common.errors.ValidationError('txJSON must not contain \"TxnSignature\" or \"Signers\" properties');\n    }\n    const fee = new bignumber_js_1.BigNumber(tx.Fee);\n    const maxFeeDrops = common_1.xrpToDrops(api._maxFeeXRP);\n    if (fee.greaterThan(maxFeeDrops)) {\n        throw new utils.common.errors.ValidationError(`\"Fee\" should not exceed \"${maxFeeDrops}\". ` +\n            'To use a higher fee, set `maxFeeXRP` in the RippleAPI constructor.');\n    }\n    tx.SigningPubKey = options.signAs ? '' : keypair.publicKey;\n    if (options.signAs) {\n        const signer = {\n            Account: options.signAs,\n            SigningPubKey: keypair.publicKey,\n            TxnSignature: computeSignature(tx, keypair.privateKey, options.signAs)\n        };\n        tx.Signers = [{ Signer: signer }];\n    }\n    else {\n        tx.TxnSignature = computeSignature(tx, keypair.privateKey);\n    }\n    const serialized = binary.encode(tx);\n    return {\n        signedTransaction: serialized,\n        id: ripple_hashes_1.computeBinaryTransactionHash(serialized)\n    };\n}\nfunction sign(txJSON, secret, options, keypair) {\n    if (typeof secret === 'string') {\n        // we can't validate that the secret matches the account because\n        // the secret could correspond to the regular key\n        validate.sign({ txJSON, secret });\n        return signWithKeypair(this, txJSON, keypairs.deriveKeypair(secret), options);\n    }\n    else {\n        if (!keypair && !secret) {\n            // Clearer message than 'ValidationError: instance is not exactly one from [subschema 0],[subschema 1]'\n            throw new utils.common.errors.ValidationError('sign: Missing secret or keypair.');\n        }\n        return signWithKeypair(this, txJSON, keypair ? keypair : secret, options);\n    }\n}\nexports.default = sign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/sign.ts\n// module id = 391\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/sign.ts?");

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst binary = __webpack_require__(42);\nconst utils = __webpack_require__(8);\nconst bignumber_js_1 = __webpack_require__(7);\nconst ripple_address_codec_1 = __webpack_require__(30);\nconst common_1 = __webpack_require__(0);\nconst ripple_hashes_1 = __webpack_require__(50);\nfunction addressToBigNumber(address) {\n    const hex = (new Buffer(ripple_address_codec_1.decodeAddress(address))).toString('hex');\n    return new bignumber_js_1.default(hex, 16);\n}\nfunction compareSigners(a, b) {\n    return addressToBigNumber(a.Signer.Account)\n        .comparedTo(addressToBigNumber(b.Signer.Account));\n}\nfunction combine(signedTransactions) {\n    common_1.validate.combine({ signedTransactions });\n    // TODO: signedTransactions is an array of strings in the documentation, but\n    // tests and this code handle it as an array of objects. Fix!\n    const txs = _.map(signedTransactions, binary.decode);\n    const tx = _.omit(txs[0], 'Signers');\n    if (!_.every(txs, _tx => _.isEqual(tx, _.omit(_tx, 'Signers')))) {\n        throw new utils.common.errors.ValidationError('txJSON is not the same for all signedTransactions');\n    }\n    const unsortedSigners = _.reduce(txs, (accumulator, _tx) => accumulator.concat(_tx.Signers || []), []);\n    const signers = unsortedSigners.sort(compareSigners);\n    const signedTx = _.assign({}, tx, { Signers: signers });\n    const signedTransaction = binary.encode(signedTx);\n    const id = ripple_hashes_1.computeBinaryTransactionHash(signedTransaction);\n    return { signedTransaction, id };\n}\nexports.default = combine;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4).Buffer))\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/combine.ts\n// module id = 392\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/combine.ts?");

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst utils = __webpack_require__(8);\nconst common_1 = __webpack_require__(0);\nfunction isImmediateRejection(engineResult) {\n    // note: \"tel\" errors mean the local server refused to process the\n    // transaction *at that time*, but it could potentially buffer the\n    // transaction and then process it at a later time, for example\n    // if the required fee changes (this does not occur at the time of\n    // this writing, but it could change in the future)\n    // all other error classes can potentially result in transaction validation\n    return _.startsWith(engineResult, 'tem');\n}\nfunction formatSubmitResponse(response) {\n    const data = {\n        // @deprecated\n        resultCode: response.engine_result,\n        // @deprecated\n        resultMessage: response.engine_result_message,\n        engine_result: response.engine_result,\n        engine_result_code: response.engine_result_code,\n        engine_result_message: response.engine_result_message,\n        tx_blob: response.tx_blob,\n        tx_json: response.tx_json\n    };\n    if (isImmediateRejection(response.engine_result)) {\n        throw new utils.common.errors.RippledError('Submit failed', data);\n    }\n    return data;\n}\nfunction submit(signedTransaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.submit({ signedTransaction });\n        // 2. Make Request\n        const response = yield this.request('submit', { tx_blob: signedTransaction });\n        // 3. Return Formatted Response\n        return formatSubmitResponse(response);\n    });\n}\nexports.default = submit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transaction/submit.ts\n// module id = 393\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/transaction/submit.ts?");

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst keypairs = __webpack_require__(31);\nconst common = __webpack_require__(0);\nconst { errors, validate } = common;\nfunction generateAddressAPI(options) {\n    validate.generateAddress({ options });\n    try {\n        const secret = keypairs.generateSeed(options);\n        const keypair = keypairs.deriveKeypair(secret);\n        const address = keypairs.deriveAddress(keypair.publicKey);\n        return { secret, address };\n    }\n    catch (error) {\n        throw new errors.UnexpectedError(error.message);\n    }\n}\nexports.generateAddressAPI = generateAddressAPI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/offline/generate-address.ts\n// module id = 394\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/offline/generate-address.ts?");

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ripple_keypairs_1 = __webpack_require__(31);\nexports.deriveKeypair = ripple_keypairs_1.deriveKeypair;\nexports.deriveAddress = ripple_keypairs_1.deriveAddress;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/offline/derive.ts\n// module id = 395\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/offline/derive.ts?");

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst hashes = __webpack_require__(50);\nconst common = __webpack_require__(0);\nfunction convertLedgerHeader(header) {\n    return {\n        account_hash: header.stateHash,\n        close_time: common.iso8601ToRippleTime(header.closeTime),\n        close_time_resolution: header.closeTimeResolution,\n        close_flags: header.closeFlags,\n        hash: header.ledgerHash,\n        ledger_hash: header.ledgerHash,\n        ledger_index: header.ledgerVersion.toString(),\n        seqNum: header.ledgerVersion.toString(),\n        parent_hash: header.parentLedgerHash,\n        parent_close_time: common.iso8601ToRippleTime(header.parentCloseTime),\n        total_coins: header.totalDrops,\n        totalCoins: header.totalDrops,\n        transaction_hash: header.transactionHash\n    };\n}\nfunction hashLedgerHeader(ledgerHeader) {\n    const header = convertLedgerHeader(ledgerHeader);\n    return hashes.computeLedgerHash(header);\n}\nfunction computeTransactionHash(ledger, version, options) {\n    let transactions;\n    if (ledger.rawTransactions) {\n        transactions = JSON.parse(ledger.rawTransactions);\n    }\n    else if (ledger.transactions) {\n        try {\n            transactions = ledger.transactions.map(tx => JSON.parse(tx.rawTransaction));\n        }\n        catch (e) {\n            if (e.toString() === 'SyntaxError: Unexpected' +\n                ' token u in JSON at position 0') {\n                // one or more of the `tx.rawTransaction`s is undefined\n                throw new common.errors.ValidationError('ledger'\n                    + ' is missing raw transactions');\n            }\n        }\n    }\n    else {\n        if (options.computeTreeHashes) {\n            throw new common.errors.ValidationError('transactions'\n                + ' property is missing from the ledger');\n        }\n        return ledger.transactionHash;\n    }\n    const txs = _.map(transactions, tx => {\n        const mergeTx = _.assign({}, _.omit(tx, 'tx'), tx.tx || {});\n        // rename `meta` back to `metaData`\n        const renameMeta = _.assign({}, _.omit(mergeTx, 'meta'), tx.meta ? { metaData: tx.meta } : {});\n        return renameMeta;\n    });\n    const transactionHash = hashes.computeTransactionTreeHash(txs, version);\n    if (ledger.transactionHash !== undefined\n        && ledger.transactionHash !== transactionHash) {\n        throw new common.errors.ValidationError('transactionHash in header'\n            + ' does not match computed hash of transactions', {\n            transactionHashInHeader: ledger.transactionHash,\n            computedHashOfTransactions: transactionHash\n        });\n    }\n    return transactionHash;\n}\nfunction computeStateHash(ledger, version, options) {\n    if (ledger.rawState === undefined) {\n        if (options.computeTreeHashes) {\n            throw new common.errors.ValidationError('rawState'\n                + ' property is missing from the ledger');\n        }\n        return ledger.stateHash;\n    }\n    const state = JSON.parse(ledger.rawState);\n    const stateHash = hashes.computeStateTreeHash(state, version);\n    if (ledger.stateHash !== undefined && ledger.stateHash !== stateHash) {\n        throw new common.errors.ValidationError('stateHash in header'\n            + ' does not match computed hash of state');\n    }\n    return stateHash;\n}\nconst sLCF_SHAMapV2 = 0x02;\nfunction computeLedgerHash(ledger, options = {}) {\n    const version = ((ledger.closeFlags & sLCF_SHAMapV2) === 0) ? 1 : 2;\n    const subhashes = {\n        transactionHash: computeTransactionHash(ledger, version, options),\n        stateHash: computeStateHash(ledger, version, options)\n    };\n    return hashLedgerHeader(_.assign({}, ledger, subhashes));\n}\nexports.default = computeLedgerHash;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/offline/ledgerhash.ts\n// module id = 396\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/offline/ledgerhash.ts?");

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common = __webpack_require__(0);\nconst keypairs = __webpack_require__(31);\nconst binary = __webpack_require__(42);\nconst { validate, xrpToDrops } = common;\nfunction signPaymentChannelClaim(channel, amount, privateKey) {\n    validate.signPaymentChannelClaim({ channel, amount, privateKey });\n    const signingData = binary.encodeForSigningClaim({\n        channel: channel,\n        amount: xrpToDrops(amount)\n    });\n    return keypairs.sign(signingData, privateKey);\n}\nexports.default = signPaymentChannelClaim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/offline/sign-payment-channel-claim.ts\n// module id = 397\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/offline/sign-payment-channel-claim.ts?");

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst keypairs = __webpack_require__(31);\nconst binary = __webpack_require__(42);\nconst common_1 = __webpack_require__(0);\nfunction verifyPaymentChannelClaim(channel, amount, signature, publicKey) {\n    common_1.validate.verifyPaymentChannelClaim({ channel, amount, signature, publicKey });\n    const signingData = binary.encodeForSigningClaim({\n        channel: channel,\n        amount: common_1.xrpToDrops(amount)\n    });\n    return keypairs.verify(signingData, signature, publicKey);\n}\nexports.default = verifyPaymentChannelClaim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/offline/verify-payment-channel-claim.ts\n// module id = 398\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/offline/verify-payment-channel-claim.ts?");

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = __webpack_require__(0);\nconst ledger_1 = __webpack_require__(400);\nfunction getLedger(options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // 1. Validate\n        common_1.validate.getLedger({ options });\n        // 2. Make Request\n        const response = yield this.request('ledger', {\n            ledger_hash: options.ledgerHash,\n            ledger_index: options.ledgerVersion || 'validated',\n            expand: options.includeAllData,\n            transactions: options.includeTransactions,\n            accounts: options.includeState\n        });\n        // 3. Return Formatted Response\n        return ledger_1.parseLedger(response.ledger);\n    });\n}\nexports.default = getLedger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/ledger.ts\n// module id = 399\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/ledger.ts?");

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst common_1 = __webpack_require__(0);\nconst transaction_1 = __webpack_require__(58);\nfunction parseTransactionWrapper(ledgerVersion, tx) {\n    // renames metaData to meta and adds ledger_index\n    const transaction = _.assign({}, _.omit(tx, 'metaData'), {\n        meta: tx.metaData,\n        ledger_index: ledgerVersion\n    });\n    const result = transaction_1.default(transaction, true);\n    if (!result.outcome.ledgerVersion) {\n        result.outcome.ledgerVersion = ledgerVersion;\n    }\n    return result;\n}\nfunction parseTransactions(transactions, ledgerVersion) {\n    if (_.isEmpty(transactions)) {\n        return {};\n    }\n    if (_.isString(transactions[0])) {\n        return { transactionHashes: transactions };\n    }\n    return {\n        transactions: _.map(transactions, _.partial(parseTransactionWrapper, ledgerVersion))\n    };\n}\nfunction parseState(state) {\n    if (_.isEmpty(state)) {\n        return {};\n    }\n    if (_.isString(state[0])) {\n        return { stateHashes: state };\n    }\n    return { rawState: JSON.stringify(state) };\n}\nfunction parseLedger(ledger) {\n    const ledgerVersion = parseInt(ledger.ledger_index || ledger.seqNum, 10);\n    return common_1.removeUndefined(Object.assign({\n        stateHash: ledger.account_hash,\n        closeTime: common_1.rippleTimeToISO8601(ledger.close_time),\n        closeTimeResolution: ledger.close_time_resolution,\n        closeFlags: ledger.close_flags,\n        ledgerHash: ledger.hash || ledger.ledger_hash,\n        ledgerVersion: ledgerVersion,\n        parentLedgerHash: ledger.parent_hash,\n        parentCloseTime: common_1.rippleTimeToISO8601(ledger.parent_close_time),\n        totalDrops: ledger.total_coins || ledger.totalCoins,\n        transactionHash: ledger.transaction_hash\n    }, parseTransactions(ledger.transactions, ledgerVersion), parseState(ledger.accountState)));\n}\nexports.parseLedger = parseLedger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ledger/parse/ledger.ts\n// module id = 400\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/ledger/parse/ledger.ts?");

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = __webpack_require__(1);\nconst api_1 = __webpack_require__(72);\nclass RippleAPIBroadcast extends api_1.RippleAPI {\n    constructor(servers, options) {\n        super(options);\n        this.ledgerVersion = undefined;\n        const apis = servers.map(server => new api_1.RippleAPI(_.assign({}, options, { server })));\n        // exposed for testing\n        this._apis = apis;\n        this.getMethodNames().forEach(name => {\n            this[name] = function () {\n                return Promise.race(apis.map(api => api[name](...arguments)));\n            };\n        });\n        // connection methods must be overridden to apply to all api instances\n        this.connect = function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield Promise.all(apis.map(api => api.connect()));\n            });\n        };\n        this.disconnect = function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield Promise.all(apis.map(api => api.disconnect()));\n            });\n        };\n        this.isConnected = function () {\n            return apis.map(api => api.isConnected()).every(Boolean);\n        };\n        // synchronous methods are all passed directly to the first api instance\n        const defaultAPI = apis[0];\n        const syncMethods = ['sign', 'generateAddress', 'computeLedgerHash'];\n        syncMethods.forEach(name => {\n            this[name] = defaultAPI[name].bind(defaultAPI);\n        });\n        apis.forEach(api => {\n            api.on('ledger', this.onLedgerEvent.bind(this));\n            api.on('error', (errorCode, errorMessage, data) => this.emit('error', errorCode, errorMessage, data));\n        });\n    }\n    onLedgerEvent(ledger) {\n        if (ledger.ledgerVersion > this.ledgerVersion ||\n            this.ledgerVersion === undefined) {\n            this.ledgerVersion = ledger.ledgerVersion;\n            this.emit('ledger', ledger);\n        }\n    }\n    getMethodNames() {\n        const methodNames = [];\n        const rippleAPI = this._apis[0];\n        for (const name of Object.getOwnPropertyNames(rippleAPI)) {\n            if (typeof rippleAPI[name] === 'function') {\n                methodNames.push(name);\n            }\n        }\n        return methodNames;\n    }\n}\nexports.RippleAPIBroadcast = RippleAPIBroadcast;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/broadcast.ts\n// module id = 401\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/broadcast.ts?");

/***/ })
/******/ ]);