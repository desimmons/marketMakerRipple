{"version":3,"sources":["../../src/utils.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAChC,IAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AACjC,IAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;;AAE3B,SAAS,UAAU,CAAC,CAAC,EAAE;AACrB,SAAO,CAAC,CAAC,GAAG,CAAC,UAAS,SAAS,EAAE;AAC/B,QAAM,GAAG,GAAG,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAA;AAChD,WAAO,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;GACxC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;CACZ;;AAED,SAAS,UAAU,CAAC,CAAC,EAAE;AACrB,QAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;AAC1B,SAAO,AAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;CACnD;;AAED,SAAS,oBAAoB,CAAC,cAAc,EAAE;AAC5C,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE,CAAA;AAC/D,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC3D,SAAO,OAAO,CAAA;CACf;;AAED,SAAS,cAAc,CAAC,MAAM,EAAE;AAC9B,SAAO,MAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;CAC5D;;AAED,MAAM,CAAC,OAAO,GAAG;AACf,YAAU,EAAV,UAAU;AACV,YAAU,EAAV,UAAU;AACV,sBAAoB,EAApB,oBAAoB;AACpB,gBAAc,EAAd,cAAc;CACf,CAAA","file":"utils.js","sourcesContent":["'use strict' // eslint-disable-line strict\n\nconst assert = require('assert')\nconst hashjs = require('hash.js')\nconst BN = require('bn.js')\n\nfunction bytesToHex(a) {\n  return a.map(function(byteValue) {\n    const hex = byteValue.toString(16).toUpperCase()\n    return hex.length > 1 ? hex : '0' + hex\n  }).join('')\n}\n\nfunction hexToBytes(a) {\n  assert(a.length % 2 === 0)\n  return (new BN(a, 16)).toArray(null, a.length / 2)\n}\n\nfunction computePublicKeyHash(publicKeyBytes) {\n  const hash256 = hashjs.sha256().update(publicKeyBytes).digest()\n  const hash160 = hashjs.ripemd160().update(hash256).digest()\n  return hash160\n}\n\nfunction seedFromPhrase(phrase) {\n  return hashjs.sha512().update(phrase).digest().slice(0, 16)\n}\n\nmodule.exports = {\n  bytesToHex,\n  hexToBytes,\n  computePublicKeyHash,\n  seedFromPhrase\n}\n"]}